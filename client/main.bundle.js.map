{"version":3,"sources":["./node_modules/moment/locale ^\\.\\/.*$","./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/cliente/cliente.component.html","./src/app/components/cliente/cliente.component.ts","./src/app/components/cliente/lstclientes.component.html","./src/app/components/cliente/lstclientes.component.ts","./src/app/components/clock/clock.component.html","./src/app/components/clock/clock.component.ts","./src/app/components/comanda/comanda.component.html","./src/app/components/comanda/comanda.component.ts","./src/app/components/comanda/lstcomandas.component.html","./src/app/components/comanda/lstcomandas.component.ts","./src/app/components/diccionariofox/diccionariofox.component.html","./src/app/components/diccionariofox/diccionariofox.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/mntvarios/mntvarios.component.html","./src/app/components/mntvarios/mntvarios.component.ts","./src/app/components/mnurest/mnurest.component.html","./src/app/components/mnurest/mnurest.component.ts","./src/app/components/reportes/ventas/ventasvarios.component.html","./src/app/components/reportes/ventas/ventasvarios.component.ts","./src/app/components/reportes/visorpdf.component.ts","./src/app/components/usuario/usuario.component.html","./src/app/components/usuario/usuario.component.ts","./src/app/models/banner.ts","./src/app/models/bitacoraestatus.ts","./src/app/models/cliente.ts","./src/app/models/comanda.ts","./src/app/models/componente.ts","./src/app/models/datosfactcliente.ts","./src/app/models/detallecomanda.ts","./src/app/models/detcobro.ts","./src/app/models/detcobrocomanda.ts","./src/app/models/detcompdetcomanda.ts","./src/app/models/detfacturara.ts","./src/app/models/direccioncliente.ts","./src/app/models/emisortarjeta.ts","./src/app/models/extrasnotascomanda.ts","./src/app/models/formapago.ts","./src/app/models/menurest.ts","./src/app/models/menurestcomponente.ts","./src/app/models/notascliente.ts","./src/app/models/presupuestoventas.ts","./src/app/models/rangoedades.ts","./src/app/models/razoncortesia.ts","./src/app/models/restaurante.ts","./src/app/models/rolusuario.ts","./src/app/models/telefonocliente.ts","./src/app/models/tiempoentrega.ts","./src/app/models/tipodireccion.ts","./src/app/models/usuario.ts","./src/app/models/vuelto.ts","./src/app/pipes/filterlist.pipe.ts","./src/app/services/banner.service.ts","./src/app/services/cliente.service.ts","./src/app/services/clock.service.ts","./src/app/services/comanda.service.ts","./src/app/services/componente.service.ts","./src/app/services/diccionariofox.service.ts","./src/app/services/emisortarjeta.service.ts","./src/app/services/formapago.service.ts","./src/app/services/gapi.service.ts","./src/app/services/global.ts","./src/app/services/jsreport.service.ts","./src/app/services/localstorage.service.ts","./src/app/services/menu.service.ts","./src/app/services/menurest.service.ts","./src/app/services/menurestcomponente.service.ts","./src/app/services/mint.service.ts","./src/app/services/presupuestoventas.service.ts","./src/app/services/razoncortesia.service.ts","./src/app/services/restaurante.service.ts","./src/app/services/rolusuario.service.ts","./src/app/services/tiempoentrega.service.ts","./src/app/services/tipocomanda.service.ts","./src/app/services/tipodireccion.service.ts","./src/app/services/usuario.service.ts","./src/app/services/vuelto.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = ./node_modules/moment/locale recursive ^\\.\\/.*$\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <nav class=\\\"navbar navbar-light justify-content-between\\\" style=\\\"background-color: #F7F7F7;\\\" *ngIf=\\\"usuarioActual\\\">\\r\\n        <a class=\\\"navbar-brand\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" (click)=\\\"toggleMenu()\\\">\\r\\n                <span class=\\\"oi oi-menu\\\" title=\\\"Mostrar/ocultar menú\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            </button>\\r\\n            <img src=\\\"/assets/logors.svg\\\" width=\\\"80\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"Rest-Touch\\\">\\r\\n            <img src=\\\"../assets/logo.png\\\" width=\\\"50\\\" height=\\\"30\\\" class=\\\"rounded d-inline-block align-top\\\" alt=\\\"Jake's\\\">\\r\\n        </a>\\r\\n        <app-clock></app-clock>\\r\\n        <button class=\\\"btn btn-outline-dark my-2 my-sm-0\\\" type=\\\"button\\\" (click)=\\\"logOut()\\\">{{usuarioActual.nombre}} - Logout</button>        \\r\\n    </nav>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div [ngClass]=\\\"{'col-2': menuVisible, '': !menuVisible}\\\" *ngIf=\\\"usuarioActual && menuVisible\\\">\\r\\n            <div style=\\\"height: 700px; width: 400px !important;\\\">\\r\\n                <tree-root [nodes]=\\\"arbolMenuApp\\\" [options]=\\\"options\\\">\\r\\n                    <ng-template #treeNodeWrapperTemplate let-node let-index=\\\"index\\\">\\r\\n                        <div class=\\\"node-wrapper\\\" [style.padding-left]=\\\"node.getNodePadding()\\\">\\r\\n                            <tree-node-expander [node]=\\\"node\\\"></tree-node-expander>\\r\\n                            <div class=\\\"node-content-wrapper\\\"\\r\\n                                [class.node-content-wrapper-active]=\\\"node.isActive\\\"\\r\\n                                [class.node-content-wrapper-focused]=\\\"node.isFocused\\\"\\r\\n                                (click)=\\\"node.mouseAction('click', $event)\\\"\\r\\n                                (dblclick)=\\\"node.mouseAction('dblClick', $event)\\\"\\r\\n                                (contextmenu)=\\\"node.mouseAction('contextMenu', $event)\\\"\\r\\n                                (treeDrop)=\\\"node.onDrop($event)\\\"\\r\\n                                [treeAllowDrop]=\\\"node.allowDrop\\\"\\r\\n                                [treeDrag]=\\\"node\\\"\\r\\n                                [treeDragEnabled]=\\\"node.allowDrag()\\\">\\r\\n                                <tree-node-content [node]=\\\"node\\\" [index]=\\\"index\\\"></tree-node-content>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" (click)=\\\"goToUrl(node.data)\\\" style=\\\"font-size: 8pt !important;\\\" *ngIf=\\\"node.data.url\\\">\\r\\n                                    <span class=\\\"oi oi-chevron-right\\\" title=\\\"Ir a {{node.data.name}}\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </tree-root>\\r\\n            </div>            \\r\\n        </div>         \\r\\n        <div [ngClass]=\\\"{'col-10': menuVisible, 'col-12': !menuVisible}\\\"><router-outlet></router-outlet></div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { LocalStorageService } from './services/localstorage.service';\nimport { MenuService } from './services/menu.service';\nimport { GoogleApiService } from './services/gapi.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [LocalStorageService, MenuService, GoogleApiService]\n})\nexport class AppComponent implements OnInit, DoCheck {\n  title = 'ResTouch';\n  public usuarioActual: any;\n  public arbolMenuApp: any[];\n  public menuVisible: boolean;\n  private options: object;\n\n  constructor(\n    private _mnu: MenuService,\n    private _ls: LocalStorageService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _gApiService: GoogleApiService\n  ) {\n    this.usuarioActual = this._ls.get('restouchusr');\n    this.options = {\n      useVirtualScroll: true,\n      nodeHeight: 50\n    };\n    this.arbolMenuApp = null;\n    this.menuVisible = false;\n  }\n\n  ngOnInit() {\n\n    this._route.queryParams.subscribe(params => {\n      let gcode: string = params['code'];\n      // console.log(gcode);\n      if (!gcode || gcode.trim().length === 0) {\n        gcode = this._ls.get('gcode', false);\n        if (!gcode || gcode.trim().length === 0) {\n          this._gApiService.getURLAuth().subscribe(\n            response => {\n              // console.log('Response:', response.result.googleURLToken);\n              if (response.result.googleURLToken) {\n                window.location.href = response.result.googleURLToken;\n              } else {\n                console.log('No se pudo obtener la dirección para autenticación...');\n              }\n            },\n            error => {\n              const respuesta = JSON.parse(error._body);\n              console.log('Error: ' + respuesta.mensaje);\n            }\n          );\n        } else {\n          this.doGetToken(gcode);\n        }\n      } else {\n        this._ls.set('gcode', gcode, false);\n        this.doGetToken(gcode);\n      }\n    });\n  }\n\n  ngDoCheck() {\n    this.usuarioActual = this._ls.get('restouchusr');\n    // console.log(this.usuarioActual);\n    if (this.usuarioActual && !this.arbolMenuApp) {\n      this._mnu.getMenuUsuario(this.usuarioActual._id, this.usuarioActual.token).subscribe(\n        response => {\n          this.arbolMenuApp = response.lista;\n          // console.log(this.arbolMenuApp);\n          // this._router.navigate(['/comandas']);\n        },\n        error => {\n          // console.log('Hubo error...');\n          this._ls.clear('restouchusr');\n          this._ls.clear('gcode');\n        }\n      );\n    }\n  }\n\n  doGetToken(gcode) {\n    this._gApiService.getToken(gcode, '').subscribe(\n      response => {\n        if (response.message) {\n          console.log(response.message);\n          this._gApiService.updGoogleToken().subscribe(resUpdT => {}, errUpdT => {});\n        }\n      },\n      error => {\n        const respuesta = JSON.parse(error._body);\n        console.log('Error: ' + respuesta.mensaje);\n      }\n    );\n  }\n\n  goToUrl(obj) {\n    this._router.navigate(['/' + obj.url]);\n  }\n\n  logOut() {\n    this._ls.clear('restouchusr');\n    this._ls.clear('gcode');\n    this._ls.clear('m1nt');\n    this.goToUrl({url: ''});\n  }\n\n  toggleMenu() { this.menuVisible = !this.menuVisible; }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { routing, appRoutingProviders } from './app.routing';\nimport { ToasterModule, ToasterService } from 'angular2-toaster';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TreeModule } from 'angular-tree-component';\nimport { MomentModule } from 'angular2-moment';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Componentes\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ListadoClientesComponent } from './components/cliente/lstclientes.component';\nimport { ClienteComponent } from './components/cliente/cliente.component';\nimport { ListaComandasComponent } from './components/comanda/lstcomandas.component';\nimport { ComandaComponent } from './components/comanda/comanda.component';\nimport { MenuRestauranteComponent } from './components/mnurest/mnurest.component';\nimport { MantenimientosVariosComponent } from './components/mntvarios/mntvarios.component';\nimport { DiccionarioFoxComponent } from './components/diccionariofox/diccionariofox.component';\nimport { ClockComponent } from './components/clock/clock.component';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { VisorPDFComponent } from './components/reportes/visorpdf.component';\nimport { VentasVariosComponent } from './components/reportes/ventas/ventasvarios.component';\n\n// Servicios\nimport { GoogleApiService } from './services/gapi.service';\n// import { MintService } from './services/mint.service';\nimport { ComandaService } from './services/comanda.service';\nimport { DiccionarioFoxService } from './services/diccionariofox.service';\nimport { ClienteService } from './services/cliente.service';\n\n// Pipes\nimport { FilterListPipe } from './pipes/filterlist.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent, LoginComponent, ListadoClientesComponent, ClienteComponent, FilterListPipe, ListaComandasComponent,\n    MenuRestauranteComponent, MantenimientosVariosComponent, ComandaComponent, DiccionarioFoxComponent, ClockComponent, UsuarioComponent,\n    VisorPDFComponent, VentasVariosComponent\n  ],\n  imports: [\n    NgbModule.forRoot(), BrowserModule, FormsModule, HttpModule, routing, BrowserAnimationsModule, ToasterModule, TreeModule,\n    MomentModule, HttpClientModule\n  ],\n  providers: [\n    appRoutingProviders, GoogleApiService, DiccionarioFoxService, ComandaService, ClienteService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Componentes\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ListadoClientesComponent } from './components/cliente/lstclientes.component';\r\nimport { ListaComandasComponent } from './components/comanda/lstcomandas.component';\r\nimport { ComandaComponent } from './components/comanda/comanda.component';\r\nimport { MenuRestauranteComponent } from './components/mnurest/mnurest.component';\r\nimport { MantenimientosVariosComponent } from './components/mntvarios/mntvarios.component';\r\nimport { DiccionarioFoxComponent } from './components/diccionariofox/diccionariofox.component';\r\nimport { UsuarioComponent } from './components/usuario/usuario.component';\r\nimport { VentasVariosComponent } from './components/reportes/ventas/ventasvarios.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'comandas', component: ListaComandasComponent },\r\n    { path: 'comanda/:idcliente', component: ComandaComponent },\r\n    { path: 'comanda/:idcliente/:telefono', component: ComandaComponent },\r\n    { path: 'comanda/:idcliente/:telefono/:historica', component: ComandaComponent },\r\n    { path: 'comanda/:idcliente/:telefono/:historica/:idcomanda', component: ComandaComponent },\r\n    { path: 'clientes', component: ListadoClientesComponent },\r\n    { path: 'clientes/:idcliente', component: ListadoClientesComponent },\r\n    { path: 'mnurest', component: MenuRestauranteComponent },\r\n    { path: 'mantvar', component: MantenimientosVariosComponent },\r\n    { path: 'dictfox', component: DiccionarioFoxComponent },\r\n    { path: 'mntusr', component: UsuarioComponent },\r\n    { path: 'ventvar', component: VentasVariosComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '**', redirectTo: 'login' }\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <form #clienteForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtcliente\\\">Nombre:</label>\\r\\n                            <input name=\\\"txtCliente\\\" id=\\\"txtCliente\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" #nombreCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"cliente.nombre\\\" placeholder=\\\"Nombre\\\" required />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtCliFCumple\\\">Fecha de nacimiento:</label>\\r\\n                            <input name=\\\"txtCliFCumple\\\" id=\\\"txtCliFCumple\\\" type=\\\"date\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" #fechaCumple=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"cliente.cumpleanios\\\" placeholder=\\\"Fecha de cumpleaños\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtCliFCumple\\\">E-mail:</label>\\r\\n                            <input name=\\\"txtEMail\\\" id=\\\"txtEMail\\\" type=\\\"email\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" #emailCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"cliente.correoelectronico\\\" placeholder=\\\"E-mail\\\" />\\r\\n                        </div>                        \\r\\n                    </div>\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"chkConHijos\\\">¿Tiene hijos?</label>\\r\\n                            <input name=\\\"chkConHijos\\\" id=\\\"chkConHijos\\\" type=\\\"checkbox\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" [checked]=\\\"cliente.tienehijos\\\"\\r\\n                                (change)=\\\"cliente.tienehijos = !cliente.tienehijos\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"cliente.tienehijos\\\">\\r\\n                    <div class=\\\"col-5\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <table class=\\\"table table-sm table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th colspan=\\\"2\\\">\\r\\n                                            Rango de edades de los hijos&nbsp;\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoRangoEdades()\\\">\\r\\n                                                <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo rango de edades\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </button>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <th>De</th>\\r\\n                                        <th>A</th>\\r\\n                                        <th>&nbsp;</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let r of cliente.rangoedadeshijos; let i = index\\\">\\r\\n                                        <td>\\r\\n                                            <input name=\\\"txtRDe_{{i}}\\\" id=\\\"txtRDe_{{i}}\\\" class=\\\"form-control form-control-sm\\\" #rangoDe=\\\"ngModel\\\"\\r\\n                                                [(ngModel)]=\\\"r.de\\\" placeholder=\\\"De\\\" required />\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <input name=\\\"txtRA_{{i}}\\\" id=\\\"txtRA_{{i}}\\\" class=\\\"form-control form-control-sm\\\" #rangoA=\\\"ngModel\\\"\\r\\n                                                [(ngModel)]=\\\"r.a\\\" placeholder=\\\"A\\\" required />\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delRangoEdad(i)\\\">\\r\\n                                                <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar rango de edades de los hijos\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </button>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"chkConHijos\\\">De baja</label>\\r\\n                            <input name=\\\"chkDeBaja\\\" id=\\\"chkDeBaja\\\" type=\\\"checkbox\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" [checked]=\\\"cliente.debaja\\\"\\r\\n                                (change)=\\\"cliente.debaja = !cliente.debaja\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    -->\\r\\n                </div>\\r\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"!clienteForm.form.valid\\\" *ngIf=\\\"desdePopOver\\\">\\r\\n                        <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!clienteForm.form.valid\\\" *ngIf=\\\"!desdePopOver\\\" (click)=\\\"updCliente()\\\">\\r\\n                        <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"closePopOver()\\\" *ngIf=\\\"desdePopOver\\\">\\r\\n                        <span class=\\\"oi oi-circle-x\\\" title=\\\"Cancelar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                </div>                \\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr *ngIf=\\\"!desdePopOver\\\"/>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!desdePopOver\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div>\\r\\n                        Teléfonos&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoTelefono()\\\">\\r\\n                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo teléfono\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"editandoTelefonoCliente\\\">\\r\\n                        <hr/>\\r\\n                        <form #frmTelCli=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitTelCli()\\\" class=\\\"form-inline\\\">\\r\\n                            <input name=\\\"txtTelCli\\\" id=\\\"txtTelCli\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 90px\\\" \\r\\n                                #telCliente=\\\"ngModel\\\" [(ngModel)]=\\\"telefonoCliente.telefono\\\" placeholder=\\\"Teléfono\\\" required maxlength=\\\"8\\\" minlength=\\\"8\\\" />\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmTelCli.form.valid\\\" *ngIf=\\\"!telefonoCliente._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmTelCli.form.valid\\\" (click)=\\\"updTelefonoCli()\\\" *ngIf=\\\"telefonoCliente._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\" (click)=\\\"cancelNuevoTelefono()\\\">\\r\\n                                    <span class=\\\"oi oi-circle-x\\\" title=\\\"Cancelar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </div>                            \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let tel of telefonosCliente\\\">\\r\\n                        {{tel.telefono}}&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"getTelefonoCli(tel._id)\\\">\\r\\n                            <span class=\\\"oi oi-pencil\\\" title=\\\"Editar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"goToComandaHisto(tel.telefono)\\\">\\r\\n                            <span class=\\\"oi oi-aperture\\\" title=\\\"Crear comanda histórica\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delTelefonoCli(tel._id)\\\">\\r\\n                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </li>\\r\\n                </ul>            \\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-8\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div>\\r\\n                        Direcciones&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevaDireccion()\\\">\\r\\n                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo teléfono\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"editandoDireccionCliente\\\">\\r\\n                        <hr/>\\r\\n                        <form #frmDirCli=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitDirCli()\\\" class=\\\"form-inline\\\">\\r\\n                            <input name=\\\"txtDirCli\\\" id=\\\"txtDirCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #dirCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.direccion\\\" placeholder=\\\"Dirección\\\" required/>\\r\\n                            <input name=\\\"txtZonaCli\\\" id=\\\"txtZonaCli\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #zonaCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.zona\\\" placeholder=\\\"Zona\\\" min=\\\"1\\\" style=\\\"width: 75px\\\" required/>\\r\\n                            <input name=\\\"txtColCli\\\" id=\\\"txtColCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #colCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.colonia\\\" placeholder=\\\"Colonia\\\" style=\\\"width: 175px\\\" required/>\\r\\n                            <input name=\\\"txtCodAccCli\\\" id=\\\"txtCodAccCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #codAccCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.codigoacceso\\\" placeholder=\\\"Cód. de acceso\\\" style=\\\"width: 115px\\\"/>\\r\\n                            <select name=\\\"selTipoDirCli\\\" id=\\\"selTipoDirCli\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #tipoDirCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.idtipodireccion\\\" required>\\r\\n                                <option *ngFor=\\\"let td of tiposDireccion\\\" [ngValue]=\\\"td._id\\\">{{td.descripcion}}</option>\\r\\n                            </select>\\r\\n                            <select name=\\\"selRestCli\\\" id=\\\"selRestCli\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #restCli=\\\"ngModel\\\" \\r\\n                                [(ngModel)]=\\\"direccionCliente.idrestaurante\\\" required>\\r\\n                                <option *ngFor=\\\"let rest of restaurantes\\\" [ngValue]=\\\"rest._id\\\">{{rest.nombre}}</option>\\r\\n                            </select>\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmDirCli.form.valid\\\" *ngIf=\\\"!direccionCliente._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmDirCli.form.valid\\\" *ngIf=\\\"direccionCliente._id\\\" (click)=\\\"updDirCliente()\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\" (click)=\\\"cancelNuevaDireccion()\\\">\\r\\n                                    <span class=\\\"oi oi-circle-x\\\" title=\\\"Cancelar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0 !important; \\\">\\r\\n                    <table class=\\\"table table-sm table-striped\\\">\\r\\n                        <thead class=\\\"thead-light\\\">\\r\\n                            <tr>\\r\\n                                <th>Dirección</th>\\r\\n                                <th>Tipo</th>\\r\\n                                <th>Atiende</th>\\r\\n                                <th>&nbsp;</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let dir of direccionesCliente\\\">\\r\\n                                <td>\\r\\n                                    {{dir.direccion}}, zona {{dir.zona}}, colonia {{dir.colonia}}{{dir.codigoacceso && dir.codigoacceso.trim().length > 0 ? (', cód. acceso: ' + dir.codigoacceso) : ''}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{dir.idtipodireccion.descripcion}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{dir.idrestaurante.nombre}}\\r\\n                                </td>\\r\\n                                <td style=\\\"white-space:nowrap\\\">\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"getDirCliente(dir._id)\\\">\\r\\n                                            <span class=\\\"oi oi-pencil\\\" title=\\\"Editar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delDirCliente(dir._id)\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>                                    \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>                   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>        \\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!desdePopOver\\\" style=\\\"padding-top: 15px\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div>\\r\\n                        Datos de facturación&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoDatoFactura()\\\">\\r\\n                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo dato de facturación\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"editandoDatoFacturaCliente\\\">\\r\\n                        <hr/>\\r\\n                        <form #frmDatoFactCli=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitDatoFactura()\\\" class=\\\"form-inline\\\">\\r\\n                            <input name=\\\"txtNit\\\" id=\\\"txtNit\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #nitCli=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"datofactCliente.nit\\\" placeholder=\\\"N.I.T.\\\" style=\\\"width: 125px\\\" required/>\\r\\n                            <input name=\\\"txtNomFact\\\" id=\\\"txtNomFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #nomFactCli=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"datofactCliente.nombre\\\" placeholder=\\\"Nombre de facturación\\\" style=\\\"width: 275px\\\" required/>\\r\\n                            <input name=\\\"txtDirFact\\\" id=\\\"txtDirFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #dirFactCli=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"datofactCliente.direccion\\\" placeholder=\\\"Dirección de facturación\\\" style=\\\"width: 275px\\\" required/>\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmDatoFactCli.form.valid\\\" *ngIf=\\\"!datofactCliente._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmDatoFactCli.form.valid\\\" (click)=\\\"updDatoFactura()\\\"  *ngIf=\\\"datofactCliente._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\" (click)=\\\"cancelNuevoDatoFactura()\\\">\\r\\n                                    <span class=\\\"oi oi-circle-x\\\" title=\\\"Cancelar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0 !important; \\\">\\r\\n                    <table class=\\\"table table-sm table-striped\\\">\\r\\n                        <thead class=\\\"thead-light\\\">\\r\\n                            <tr>\\r\\n                                <th>N.I.T.</th>\\r\\n                                <th>Nombre</th>\\r\\n                                <th>Dirección</th>\\r\\n                                <th>&nbsp;</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let dfact of datosfactCliente\\\">\\r\\n                                <td>\\r\\n                                    {{dfact.nit}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{dfact.nombre}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    {{dfact.direccion}}\\r\\n                                </td>\\r\\n                                <td style=\\\"white-space:nowrap\\\">\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"getDatoFactura(dfact._id)\\\">\\r\\n                                            <span class=\\\"oi oi-pencil\\\" title=\\\"Editar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delDatoFactura(dfact._id)\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!desdePopOver\\\" style=\\\"padding-top: 15px\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div>\\r\\n                         Notas del cliente&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"addNotaCliente()\\\">\\r\\n                            <span class=\\\"oi oi-plus\\\" title=\\\"Nueva nota\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"editandoNotasCliente\\\">\\r\\n                        <hr/>\\r\\n                        <form #frmNotaCli=\\\"ngForm\\\" (ngSubmit)=\\\"updCliente()\\\" class=\\\"form-inline\\\">                            \\r\\n                            <textarea name=\\\"txtNotaCli\\\" id=\\\"txtNotaCli\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #txtNotaCli=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"cliente.notascliente[cliente.notascliente.length - 1].notas\\\" placeholder=\\\"Notas\\\" rows=\\\"3\\\" style=\\\"width: 80%\\\" required></textarea>\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmNotaCli.form.valid\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\" (click)=\\\"delNotaCliente(cliente.notascliente.length - 1)\\\">\\r\\n                                    <span class=\\\"oi oi-circle-x\\\" title=\\\"Cancelar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\r\\n                    <table class=\\\"table table-sm table-striped\\\">\\r\\n                        <thead class=\\\"thead-light\\\">\\r\\n                            <tr>\\r\\n                                <th>Fecha</th>\\r\\n                                <th>Nota</th>                                \\r\\n                                <th>&nbsp;</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let ncli of cliente.notascliente; let i = index\\\">\\r\\n                                <td style=\\\"width: 20%\\\">\\r\\n                                    {{ncli.fecha | date:'dd/MM/yyyy HH:mm:ss'}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <p>{{ncli.notas}}</p>                                    \\r\\n                                </td>                                \\r\\n                                <td style=\\\"width: 5%\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delNotaCliente(i)\\\">\\r\\n                                        <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar nota\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/cliente/cliente.component.html\n// module id = ./src/app/components/cliente/cliente.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { Cliente } from '../../models/cliente';\r\nimport { TelefonoCliente } from '../../models/telefonocliente';\r\nimport { DireccionCliente } from '../../models/direccioncliente';\r\nimport { TipoDireccion } from '../../models/tipodireccion';\r\nimport { Restaurante } from '../../models/restaurante';\r\nimport { DatoFacturaCliente } from '../../models/datosfactcliente';\r\nimport { NotasCliente } from '../../models/notascliente';\r\nimport { RangoEdades } from '../../models/rangoedades';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { ClienteService } from '../../services/cliente.service';\r\nimport { TipoDireccionService } from '../../services/tipodireccion.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { RestauranteService } from '../../services/restaurante.service';\r\n\r\n// Otros\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-mnt-cliente',\r\n    templateUrl: './cliente.component.html',\r\n    providers: [ ClienteService, LocalStorageService, TipoDireccionService, RestauranteService ]\r\n})\r\nexport class ClienteComponent implements OnInit {\r\n    @Input() cliente: Cliente;\r\n    @Input() desdePopOver: Boolean = false;\r\n    @Input() telefonosCliente: TelefonoCliente[];\r\n    @Input() direccionesCliente: DireccionCliente[];\r\n    @Input() datosfactCliente: DatoFacturaCliente[];\r\n    private toasterService: ToasterService;\r\n    private token: String;\r\n    public telefonoCliente: TelefonoCliente;\r\n    public direccionCliente: DireccionCliente;\r\n    public datofactCliente: DatoFacturaCliente;\r\n    private editandoTelefonoCliente: boolean;\r\n    private editandoDireccionCliente: boolean;\r\n    private editandoDatoFacturaCliente: boolean;\r\n    private editandoNotasCliente: boolean;\r\n    private tiposDireccion: TipoDireccion[];\r\n    private restaurantes: Restaurante[];\r\n\r\n    @Output() refrescaListaClientes = new EventEmitter();\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _clienteService: ClienteService,\r\n        private _ls: LocalStorageService,\r\n        private _tipoDireccionService: TipoDireccionService,\r\n        private _restauranteService: RestauranteService,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.editandoTelefonoCliente = false;\r\n        this.editandoDireccionCliente = false;\r\n        this.editandoDatoFacturaCliente = false;\r\n        this.editandoNotasCliente = false;\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({positionClass: 'toast-bottom-full-width'});\r\n\r\n    ngOnInit() {\r\n        // console.log('login.component cargado...');\r\n        if (this.desdePopOver) {\r\n            this.cliente = new Cliente(null, null, [], null, null, false, [], false);\r\n            this.telefonoCliente = new TelefonoCliente(null, null, null, false);\r\n            this.direccionCliente = new DireccionCliente(null, null, null, null, null, null, null, null, false);\r\n            this.datofactCliente = new DatoFacturaCliente(null, null, null, null, null, false);\r\n        } else {\r\n            this.telefonoCliente = new TelefonoCliente(null, this.cliente._id, null, false);\r\n            this.direccionCliente = new DireccionCliente(null, this.cliente._id, null, null, null, null, null, null, false);\r\n            this.datofactCliente = new DatoFacturaCliente(null, this.cliente._id, null, null, null, false);\r\n            this._tipoDireccionService.listaTiposDeDireccion(this.token).subscribe(\r\n                response => {\r\n                    this.tiposDireccion = response.lista;\r\n                },\r\n                error => {\r\n                    const respuesta = JSON.parse(error._body);\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                }\r\n            );\r\n            this._restauranteService.listaRestaurantes(this.token).subscribe(\r\n                response => {\r\n                    this.restaurantes = response.lista;\r\n                },\r\n                error => {\r\n                    const respuesta = JSON.parse(error._body);\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this._clienteService.crear(this.cliente, this.token).subscribe(\r\n            response => {\r\n                this.cliente = response.entidad;\r\n                this.refrescaListaClientes.emit();\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    closePopOver() { this.refrescaListaClientes.emit(); }\r\n\r\n    updCliente() {\r\n        this._clienteService.modificar(this.cliente, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    response.entidad.cumpleanios = moment(response.entidad.cumpleanios, 'YYYY-MM-DD').utc().format('YYYY-MM-DD');\r\n                    this.cliente = response.entidad;\r\n                    this.refrescaListaClientes.emit();\r\n                    this.editandoNotasCliente = false;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    //#region Telefonos\r\n    nuevoTelefono() {\r\n        this.telefonoCliente = new TelefonoCliente(null, this.cliente._id, null, false);\r\n        this.editandoTelefonoCliente = true;\r\n    }\r\n\r\n    cancelNuevoTelefono() {\r\n        this.telefonoCliente = new TelefonoCliente(null, this.cliente._id, null, false);\r\n        this.editandoTelefonoCliente = false;\r\n    }\r\n\r\n    private loadListaTelefonosCliente(idcliente) {\r\n        this._clienteService.getTelefonosCliente(idcliente, this.token).subscribe(\r\n            responseTel => {\r\n                this.telefonosCliente = responseTel.lista;\r\n            },\r\n            errorTel => {\r\n                const respuesta = JSON.parse(errorTel._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    onSubmitTelCli() {\r\n        this._clienteService.crearTelefono(this.telefonoCliente, this.token).subscribe(\r\n            response => {\r\n                this.loadListaTelefonosCliente(this.cliente._id);\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n        this.editandoTelefonoCliente = false;\r\n    }\r\n\r\n    getTelefonoCli(identidad) {\r\n        this._clienteService.getTelefonoCliente(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.telefonoCliente = response.entidad;\r\n                    this.editandoTelefonoCliente = true;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updTelefonoCli() {\r\n        this._clienteService.modificarTelefonoCliente(this.telefonoCliente, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.cancelNuevoTelefono();\r\n                    this.loadListaTelefonosCliente(this.cliente._id);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delTelefonoCli(identidad) {\r\n        this._clienteService.eliminarTelefonoCliente(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.cancelNuevoTelefono();\r\n                    this.loadListaTelefonosCliente(this.cliente._id);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region Direcciones\r\n    private loadListaDireccionesCliente(idcliente) {\r\n        this._clienteService.getDireccionesCliente(idcliente, this.token).subscribe(\r\n            responseDir => {\r\n                this.direccionesCliente = responseDir.lista;\r\n            }, errorDir => {\r\n                const respuesta = JSON.parse(errorDir._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevaDireccion() {\r\n        this.direccionCliente = new DireccionCliente(null, this.cliente._id, null, null, null, null, null, null, false);\r\n        this.editandoDireccionCliente = true;\r\n    }\r\n\r\n    cancelNuevaDireccion() {\r\n        this.direccionCliente = new DireccionCliente(null, this.cliente._id, null, null, null, null, null, null, false);\r\n        this.editandoDireccionCliente = false;\r\n    }\r\n\r\n    onSubmitDirCli() {\r\n        this._clienteService.crearDireccion(this.direccionCliente, this.token).subscribe(\r\n            response => {\r\n                this.loadListaDireccionesCliente(this.cliente._id);\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n        this.editandoDireccionCliente = false;\r\n    }\r\n\r\n    getDirCliente(iddir) {\r\n        this._clienteService.getDireccionCliente(iddir, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.direccionCliente = response.entidad;\r\n                    this.editandoDireccionCliente = true;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updDirCliente() {\r\n        this._clienteService.modificarDireccionCliente(this.direccionCliente, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.editandoDireccionCliente = false;\r\n                    this.direccionCliente = new DireccionCliente(null, this.cliente._id, null, null, null, null, null, null, false);\r\n                    this.loadListaDireccionesCliente(this.cliente._id);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delDirCliente(iddir) {\r\n        this._clienteService.eliminarDireccionCliente(iddir, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadListaDireccionesCliente(this.cliente._id);\r\n                    this.cancelNuevaDireccion();\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                    this.cancelNuevaDireccion();\r\n                }\r\n\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Datos de facturación\r\n    private loadListaDatosFacturaCliente(idcliente) {\r\n        this._clienteService.getDatosFacturaCliente(idcliente, this.token).subscribe(\r\n            response => {\r\n                this.datosfactCliente = response.lista;\r\n            }, error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoDatoFactura() {\r\n        this.datofactCliente = new DatoFacturaCliente(null, this.cliente._id, null, null, null, false);\r\n        this.editandoDatoFacturaCliente = true;\r\n    }\r\n\r\n    cancelNuevoDatoFactura() {\r\n        this.datofactCliente = new DatoFacturaCliente(null, this.cliente._id, null, null, null, false);\r\n        this.editandoDatoFacturaCliente = false;\r\n    }\r\n\r\n    onSubmitDatoFactura() {\r\n        this._clienteService.crearDatoFacturaCliente(this.datofactCliente, this.token).subscribe(\r\n            response => {\r\n                this.loadListaDatosFacturaCliente(this.cliente._id);\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n        this.editandoDatoFacturaCliente = false;\r\n    }\r\n\r\n    getDatoFactura(identidad) {\r\n        this._clienteService.getDatoFacturaCliente(identidad, this.token).subscribe(\r\n            response => {\r\n                if ( response.entidad ) {\r\n                    this.datofactCliente = response.entidad;\r\n                    this.editandoDatoFacturaCliente = true;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updDatoFactura() {\r\n        this._clienteService.modificarDatoFacturaCliente(this.datofactCliente, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.cancelNuevoDatoFactura();\r\n                    this.loadListaDatosFacturaCliente(this.cliente._id);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delDatoFactura(identidad) {\r\n        this._clienteService.eliminarDatoFacturaCliente(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.cancelNuevoDatoFactura();\r\n                    this.loadListaDatosFacturaCliente(this.cliente._id);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region Notas del cliente\r\n    addNotaCliente() {\r\n        this.editandoNotasCliente = true;\r\n        if (!this.cliente.notascliente ) { this.cliente.notascliente = []; }\r\n        this.cliente.notascliente.push( new NotasCliente(moment().toDate(), null, false));\r\n\r\n    }\r\n\r\n    delNotaCliente(i) {\r\n        this.editandoNotasCliente = false;\r\n        this.cliente.notascliente.splice(i, 1);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Rango de edades\r\n    nuevoRangoEdades() {\r\n        if (!this.cliente.rangoedadeshijos) { this.cliente.rangoedadeshijos = []; }\r\n        this.cliente.rangoedadeshijos.push( new RangoEdades(null, null, false) );\r\n    }\r\n\r\n    delRangoEdad(i) {\r\n        this.cliente.rangoedadeshijos.splice(i, 1);\r\n    }\r\n    //#endregion\r\n\r\n    goToComandaHisto(telefono) {\r\n        this._router.navigate(['/comanda', this.cliente._id, telefono, 1]);\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/cliente/cliente.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <ngb-tabset #t=\\\"ngbTabset\\\">\\r\\n        <ngb-tab id=\\\"tabListaClientes\\\" title=\\\"Lista de clientes\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                            <thead class=\\\"thead-light\\\">\\r\\n                                <tr>\\r\\n                                    <th colspan=\\\"2\\\">\\r\\n                                        <form class=\\\"form-inline\\\">\\r\\n                                            <ng-template #mntCliente>\\r\\n                                                <app-mnt-cliente [cliente]=\\\"cliente\\\" [desdePopOver]=\\\"true\\\" (refrescaListaClientes)=\\\"refreshListaClientes(); btnPopCliente.close();\\\"></app-mnt-cliente>\\r\\n                                            </ng-template>\\r\\n                                            <div class=\\\"input-group\\\" style=\\\"width: 50% !important;\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" #fltrCliente=\\\"ngModel\\\" [(ngModel)]=\\\"filtroCliente\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Buscar cliente...\\\" />\\r\\n                                                <span class=\\\"input-group-btn\\\">\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"pageChange()\\\">\\r\\n                                                        <span class=\\\"oi oi-magnifying-glass\\\" title=\\\"Buscar...\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                                    </button>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"filtroCliente = null; pageChange()\\\">\\r\\n                                                        <span class=\\\"oi oi-loop-circular\\\" title=\\\"Limpiar búsqueda...\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                                    </button>\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                            &nbsp;\\r\\n                                            <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"nuevoCliente(t)\\\">Agregar cliente</button>-->\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" placement=\\\"bottom\\\" [ngbPopover]=\\\"mntCliente\\\" #btnPopCliente=\\\"ngbPopover\\\" triggers=\\\"manual\\\" (click)=\\\"btnPopCliente.open()\\\" \\r\\n                                            popoverTitle=\\\"Agrear/Editar cliente\\\">Nuevo cliente</button>\\r\\n                                        </form>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th>Cliente</th>                                    \\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tfoot>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <ngb-pagination [collectionSize]=\\\"totalItems\\\"\\r\\n                                            [(page)]=\\\"paginaActual\\\"\\r\\n                                            [maxSize]=\\\"15\\\"\\r\\n                                            [pageSize]=\\\"perpage\\\"\\r\\n                                            [boundaryLinks]=\\\"true\\\"\\r\\n                                            (pageChange)=\\\"pageChange()\\\"\\r\\n                                            size=\\\"sm\\\"\\r\\n                                        >                                            \\r\\n                                        </ngb-pagination>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tfoot>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let c of clientes\\\" (click)=\\\"mantenimientoCliente(t, c)\\\">\\r\\n                                    <td>{{c.nombre}}</td>                                    \\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>                \\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab id=\\\"tabCliente\\\" title=\\\"Mantenimiento\\\">\\r\\n            <ng-template ngbTabContent style=\\\"margin-top: 10px\\\">\\r\\n                    <app-mnt-cliente [cliente]=\\\"cliente\\\" [desdePopOver]=\\\"false\\\" \\r\\n                        [telefonosCliente]=\\\"telefonosCliente\\\" \\r\\n                        [direccionesCliente]=\\\"direccionesCliente\\\" \\r\\n                        [datosfactCliente]=\\\"datosFacturaCliente\\\" \\r\\n                        (refrescaListaClientes)=\\\"refreshListaClientes()\\\">\\r\\n                    </app-mnt-cliente>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n    </ngb-tabset>    \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/cliente/lstclientes.component.html\n// module id = ./src/app/components/cliente/lstclientes.component.html\n// module chunks = main","import { Component, OnInit, AfterViewChecked, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { Cliente } from '../../models/cliente';\r\nimport { TelefonoCliente } from '../../models/telefonocliente';\r\nimport { DireccionCliente } from '../../models/direccioncliente';\r\nimport { DatoFacturaCliente } from '../../models/datosfactcliente';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { ClienteService } from '../../services/cliente.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { Location } from '@angular/common';\r\n\r\n// Otros\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\nimport { NgbPopoverConfig, NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as moment from 'moment';\r\n// import { NgbTabset } from '@ng-bootstrap/ng-bootstrap/tabset/tabset';\r\n\r\n@Component({\r\n    selector: 'app-lst-cliente',\r\n    templateUrl: './lstclientes.component.html',\r\n    providers: [ClienteService, LocalStorageService, NgbPopoverConfig, Location ],\r\n    styles: [ `:host >>> .popover { max-width: 900px; }` ]\r\n})\r\nexport class ListadoClientesComponent implements OnInit, AfterViewChecked {\r\n    public clientes: Cliente[];\r\n    public cliente: Cliente;\r\n    public telefonosCliente: TelefonoCliente[];\r\n    public direccionesCliente: DireccionCliente[];\r\n    public datosFacturaCliente: DatoFacturaCliente[];\r\n    public filtroCliente: String;\r\n    public paginaActual: number;\r\n    public totalPaginas: number;\r\n    public totalItems: number;\r\n    public perpage: number;\r\n    private toasterService: ToasterService;\r\n    private token = null;\r\n    private idcliente: string;\r\n\r\n    @ViewChild('t')\r\n    private tabs: NgbTabset;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _clienteService: ClienteService,\r\n        private _ls: LocalStorageService,\r\n        private location: Location,\r\n        toasterService: ToasterService,\r\n        configPop: NgbPopoverConfig\r\n    ) {\r\n        this.clientes = [];\r\n        this.cliente = new Cliente(null, null, [], null, null, false, [], false);\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.filtroCliente = null;\r\n        this.idcliente = null;\r\n        this.paginaActual = 1;\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({positionClass: 'toast-bottom-full-width'});\r\n\r\n    private loadListaClientes(pagina?: number, buscar?: String) {\r\n        this._clienteService.listaClientes(this.token, pagina, buscar).subscribe(\r\n            response => {\r\n                this.clientes = response.lista;\r\n                this.paginaActual = +response.current;\r\n                this.totalPaginas = +response.pages;\r\n                this.totalItems = +response.conteo;\r\n                this.perpage = +response.perpage;\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    pageChange() {\r\n        this.loadListaClientes(this.paginaActual, this.filtroCliente);\r\n    }\r\n\r\n    ngOnInit() { this.loadListaClientes(); }\r\n\r\n    ngAfterViewChecked() {\r\n        setTimeout(() => {\r\n            this._route.params.subscribe(params => {\r\n                if (params['idcliente'] && !this.idcliente) {\r\n                    this.idcliente = params['idcliente'];\r\n                    if (this.tabs) {\r\n                        this.mantenimientoCliente(null, { _id: this.idcliente });\r\n                        this.tabs.select('tabCliente');\r\n                        this.location.replaceState('clientes');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    refreshListaClientes() { this.loadListaClientes(); }\r\n\r\n    private loadListaTelefonosCliente(idcliente) {\r\n        this._clienteService.getTelefonosCliente(idcliente, this.token).subscribe(\r\n            responseTel => {\r\n                this.telefonosCliente = responseTel.lista;\r\n            },\r\n            errorTel => {\r\n                const respuesta = JSON.parse(errorTel._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadListaDireccionesCliente(idcliente) {\r\n        this._clienteService.getDireccionesCliente(idcliente, this.token).subscribe(\r\n            responseDir => {\r\n                this.direccionesCliente = responseDir.lista;\r\n            }, errorDir => {\r\n                const respuesta = JSON.parse(errorDir._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadListaDatosFacturaCliente(idcliente) {\r\n        this._clienteService.getDatosFacturaCliente(idcliente, this.token).subscribe(\r\n            response => {\r\n                this.datosFacturaCliente = response.lista;\r\n            }, error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    mantenimientoCliente(ts, objCliente) {\r\n        this._clienteService.getClienteById(objCliente._id, this.token).subscribe(\r\n            response => {\r\n                response.entidad.cumpleanios = moment(response.entidad.cumpleanios, 'YYYY-MM-DD').utc().format('YYYY-MM-DD');\r\n                this.cliente = response.entidad;\r\n                this.loadListaTelefonosCliente(objCliente._id);\r\n                this.loadListaDireccionesCliente(objCliente._id);\r\n                this.loadListaDatosFacturaCliente(objCliente._id);\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n        if (ts) { ts.select('tabCliente'); }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/cliente/lstclientes.component.ts","module.exports = \"<span class=\\\"font-weight-bold\\\" style=\\\"font-size: 24pt\\\">\\r\\n    {{time | date:'dd/MM/yyyy HH:mm:ss' }}\\r\\n</span>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/clock/clock.component.html\n// module id = ./src/app/components/clock/clock.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { ClockService } from '../../services/clock.service';\r\n\r\n@Component({\r\n    selector: 'app-clock',\r\n    templateUrl: './clock.component.html',\r\n    providers: [ClockService]\r\n})\r\nexport class ClockComponent implements OnInit, OnDestroy {\r\n\r\n    private _clockSubscription: Subscription;\r\n    time: Date;\r\n\r\n    constructor( private _clockService: ClockService ) { }\r\n\r\n    ngOnInit() {\r\n        this._clockSubscription = this._clockService.getClock().subscribe(time => this.time = time);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._clockSubscription.unsubscribe();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/clock/clock.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <h3>Comanda de {{clienteObj.nombre}} <span *ngIf=\\\"eshistorica\\\">(Histórica)</span></h3>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <table>\\r\\n                <tbody>\\r\\n                    <tr *ngIf=\\\"comanda.idtipocomanda == '59fff327596e572d9cdac917'\\\">\\r\\n                        <th class=\\\"text-right\\\">Dirección de entrega:</th>\\r\\n                        <td style=\\\"padding-left: 0.25em\\\">\\r\\n                            <button class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"selectDireccionesCliente(modalSelDireccionCliente)\\\">\\r\\n                                {{direccionClienteObj.direccion}}, zona {{direccionClienteObj.zona}}, colonia {{direccionClienteObj.colonia}} {{direccionClienteObj.codigoacceso\\r\\n                                ? (', código de acceso: ' + direccionClienteObj.codigoacceso) : ''}}\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"false\\\">\\r\\n                        <th class=\\\"text-right\\\">Teléfono:</th>\\r\\n                        <td style=\\\"padding-left: 0.25em\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"selectTelefonoCliente(modalSelTelefono)\\\">\\r\\n                                {{telefonoClienteObj.telefono}}\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th class=\\\"text-right\\\">Tipo:</th>\\r\\n                        <td style=\\\"padding-left: 0.25em; white-space: nowrap;\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" style=\\\"width: 110px;\\\" *ngFor=\\\"let tcom of lstTiposComanda\\\" (click)=\\\"setTipoComanda(tcom)\\\">\\r\\n                                {{tcom.descripcion}}\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"false\\\">\\r\\n                        <th class=\\\"text-right\\\">Facturar a:</th>\\r\\n                        <td style=\\\"padding-left: 0.25em; white-space: nowrap;\\\">                            \\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"setFacturarA(modalSelFacturarA)\\\">\\r\\n                                {{comanda.detfacturara && comanda.detfacturara.length > 0 ? comanda.detfacturara[0].nombre : ''}}, \\r\\n                                {{comanda.detfacturara && comanda.detfacturara.length > 0 ? comanda.detfacturara[0].nit : ''}}, \\r\\n                                {{comanda.detfacturara && comanda.detfacturara.length > 0 ? comanda.detfacturara[0].direccion : ''}}\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <table style=\\\"width: 100%; border-collapse: collapse; font-size: 9pt\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th colspan=\\\"2\\\">Notas del cliente</th>\\r\\n                    </tr>\\r\\n                </thead>                \\r\\n                <tbody style=\\\"display: inline-block; overflow:auto; height: 100px; width: 100%;\\\">\\r\\n                    <tr *ngFor=\\\"let nc of clienteObj.notascliente\\\">\\r\\n                        <td style=\\\"width: 30%; vertical-align: top\\\">{{nc.fecha | date:'dd/MM/yyyy HH:mm'}}</td>\\r\\n                        <td style=\\\"width: 70%; vertical-align: top\\\"><p>{{nc.notas}}</p></td>\\r\\n                    </tr>\\r\\n                </tbody>                                                \\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <table>\\r\\n                <tbody>\\r\\n                    <tr *ngIf=\\\"false\\\">\\r\\n                        <td colspan=\\\"2\\\" class=\\\"text-right\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm btn-block\\\" (click)=\\\"verHistorialCliente(modalHistorialCliente)\\\" *ngIf=\\\"!eshistorica\\\">Ver historial</button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th class=\\\"text-right\\\">Tiempo ofrecido:</th>\\r\\n                        <td>\\r\\n                            <select name=\\\"selTiempoEntrega\\\" id=\\\"selTiempoEntrega\\\" [(ngModel)]=\\\"comanda.idtiempoentrega\\\" class=\\\"form-control form-control-sm\\\" #tiempoEntrega required>\\r\\n                                <option *ngFor=\\\"let tent of tiempos\\\" value=\\\"{{tent._id}}\\\">{{tent.tiempo}}</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th class=\\\"text-right\\\">Atiende:</th>\\r\\n                        <td>\\r\\n                            <select name=\\\"selAtiende\\\" id=\\\"selAtiende\\\" [(ngModel)]=\\\"comanda.idrestaurante\\\" class=\\\"form-control form-control-sm\\\" #atiende required>\\r\\n                                <option *ngFor=\\\"let rst of restaurantes\\\" value=\\\"{{rst._id}}\\\">{{rst.nombre}}</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"eshistorica\\\">\\r\\n                        <th class=\\\"text-right\\\">Fecha:</th>\\r\\n                        <td>\\r\\n                            <input type=\\\"date\\\" #txtFComanda=\\\"ngModel\\\" [(ngModel)]=\\\"comanda.fecha\\\" id=\\\"txtFComanda\\\" name=\\\"txtFComanda\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Fecha de comanda\\\" />\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <h5 class=\\\"card-header\\\">Menú</h5>\\r\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">                    \\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                        <li class=\\\"list-group-item\\\" *ngFor=\\\"let crt of carta\\\">\\r\\n                            <span style=\\\"padding-right: 1px !important; padding-top: 1px !important\\\" *ngFor=\\\"let btn of crt\\\">\\r\\n                                <button  class=\\\"btn btn-sm btn-outline-secondary\\\" style=\\\"font-weight: bold;\\\" (click)=\\\"loadCarta(modalComponentes, (btn.nivel + 1), btn._id, btn)\\\">\\r\\n                                    {{btn.descripcion}}\\r\\n                                </button>\\r\\n                            </span>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <h5 class=\\\"card-header\\\">\\r\\n                    Pedido&nbsp;\\r\\n                    <span class=\\\"badge badge-info\\\">{{lblTipoComanda | lowercase}}</span>&nbsp;\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" (click)=\\\"pideNotasPedido(modalNotasPedido)\\\">Notas del pedido</button>\\r\\n                </h5>\\r\\n                <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto;\\\">\\r\\n                    <small>\\r\\n                        <table style=\\\"width: 100%; border-collapse: collapse !important;\\\">\\r\\n                            <tr *ngFor=\\\"let dc of detalleComanda; let i = index\\\" style=\\\"border-bottom: solid 0.1em lightgray;\\\">\\r\\n                                <td class=\\\"align-top\\\">                                \\r\\n                                    <table style=\\\"width: 100%; border-collapse: collapse !important;\\\">\\r\\n                                        <tr>\\r\\n                                            <td colspan=\\\"2\\\" class=\\\"align-top\\\">\\r\\n                                                <!-- Inicia tabla de extras/notas sobre productos completos -->\\r\\n                                                <table style=\\\"width: 100%; border-collapse: collapse !important;\\\">\\r\\n                                                    <tr>                                                        \\r\\n                                                        <td colspan=\\\"2\\\" class=\\\"align-top\\\" style=\\\"white-space: nowrap !important; \\\">\\r\\n                                                            <div class=\\\"input-group input-group-sm\\\">\\r\\n                                                                <input type=\\\"number\\\" #txtCantProd=\\\"ngModel\\\" [(ngModel)]=\\\"dc.cantidad\\\" id=\\\"txtCantProd_{{i}}\\\" name=\\\"txtCantProd_{{i}}\\\" \\r\\n                                                                    class=\\\"form-control\\\" placeholder=\\\"Cantidad\\\" aria-describedby=\\\"desc-prod\\\" (change)=\\\"calculaTotales()\\\" (blur)=\\\"calculaTotales()\\\" />\\r\\n                                                                <span class=\\\"input-group-addon\\\" id=\\\"desc-prod\\\" style=\\\"width: 85%\\\">{{dc.descripcion}}</span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let dce of dc.extrasnotas; let l = index\\\">\\r\\n                                                        <td class=\\\"align-top\\\" style=\\\"padding-left: 2em; \\\" [style.white-space]=\\\"dce.esextra ? 'nowrap' : 'normal'\\\">\\r\\n                                                            <span *ngIf=\\\"dce.esextra\\\">\\r\\n                                                                <strong style=\\\"font-size: 12pt\\\">+</strong> {{dce.descripcion}}</span>\\r\\n                                                            <p *ngIf=\\\"!dce.esextra\\\">\\r\\n                                                                <strong>N:</strong> {{dce.notas}}</p>\\r\\n                                                        </td>\\r\\n                                                        <td class=\\\"align-top text-right\\\">\\r\\n                                                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"removeExtraNotaProd(i, l)\\\">\\r\\n                                                                <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                                            </button>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </table>                                               \\r\\n                                                <!-- Fin de tabla de extras/notas sobre productos completos -->\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr *ngFor=\\\"let cmp of dc.componentes; let j = index\\\">\\r\\n                                            <td class=\\\"align-top\\\" style=\\\"width: 75%; padding-left: 2em;\\\">\\r\\n                                                <!-- Inicia tabla de extras/notas sobre componentes -->\\r\\n                                                <table style=\\\"width: 100%; border-collapse: collapse !important;\\\">\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"2\\\" class=\\\"align-top\\\">{{cmp.descripcion}}</td>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let extcmp of cmp.extrasnotas; let k = index\\\">\\r\\n                                                        <td class=\\\"align-top\\\" style=\\\"padding-left: 3em; \\\" [style.white-space]=\\\"extcmp.esextra ? 'nowrap' : 'normal'\\\">\\r\\n                                                            <span *ngIf=\\\"extcmp.esextra\\\"><strong style=\\\"font-size: 12pt\\\">+</strong> {{extcmp.descripcion}}</span>\\r\\n                                                            <p *ngIf=\\\"!extcmp.esextra\\\"><strong>N:</strong> {{extcmp.notas}}</p>\\r\\n                                                        </td>\\r\\n                                                        <td class=\\\"align-top text-right\\\">\\r\\n                                                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"removeExtraNota(i, j, k)\\\">\\r\\n                                                                <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                                            </button>\\r\\n                                                        </td>\\r\\n                                                    </tr>                                                \\r\\n                                                </table>\\r\\n                                                <!-- Finaliza tabla de extras/notas sobre componentes -->\\r\\n                                            </td>\\r\\n                                            <td class=\\\"align-top\\\" style=\\\"white-space: nowrap\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-size: 8pt\\\" *ngIf=\\\"false\\\" (click)=\\\"pideExtras(modalExtras, i, j)\\\">Extras</button>\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"pideNotas(modalNotas, i, j)\\\">Notas</button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </td>                                \\r\\n                                <td class=\\\"align-top\\\" style=\\\"white-space:nowrap\\\">\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-size: 8pt\\\" *ngIf=\\\"dc.tieneextras\\\" (click)=\\\"pideExtrasProducto(modalExtrasProducto, i)\\\">Extras</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"pideNotasProducto(modalNotasProducto, i)\\\">Notas</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"editaComponentes(dc, i, modalEditaComponentes)\\\">\\r\\n                                            Ingred.\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"removeItemPedido(i)\\\" *ngIf=\\\"false\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>                                   \\r\\n                                </td>\\r\\n                                <td class=\\\"align-top text-right\\\">{{dc.precio | number:'1.2-2'}}<span *ngIf=\\\"+dc.precio != 0\\\">&nbsp;c/u</span></td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </small>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\" *ngIf=\\\"comanda.totalcomanda != 0\\\">\\r\\n                    <div style=\\\"width:100%; text-align: right; font-weight: bold;\\\">\\r\\n                        <span>Total a pagar: {{comanda.totalcomanda | number:'1.2-2'}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer text-right\\\" style=\\\"padding: 0 !important;\\\">\\r\\n                    <div class=\\\"btn-group btn-group-sm text-right\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"cancelaPedido()\\\" *ngIf=\\\"!eshistorica\\\">Cancelar</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" *ngIf=\\\"comanda.totalcomanda > 0 && !eshistorica\\\" (click)=\\\"terminarPedido(modalPagar, modalConfirmEnd)\\\" \\r\\n                            [disabled]=\\\"!comanda.idtipocomanda || !comanda.idrestaurante || !comanda.idtiempoentrega\\\">\\r\\n                            Terminar\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" *ngIf=\\\"comanda.totalcomanda > 0 && eshistorica\\\" (click)=\\\"guardarHistorica()\\\" \\r\\n                            [disabled]=\\\"!comanda.idtipocomanda || !comanda.idrestaurante || !comanda.idtiempoentrega || !comanda.fecha\\\">\\r\\n                            Guardar histórica\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"guardarComanda()\\\" \\r\\n                            [disabled]=\\\"!comanda.idtipocomanda || !comanda.idrestaurante\\\">\\r\\n                            Guardar e imprimir\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!eshistorica\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <table class=\\\"table table-hover table-sm table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th colspan=\\\"3\\\">Recordatorios al operador</th>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th>Del</th>\\r\\n                        <th>Al</th>\\r\\n                        <th>Recordatorio</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let b of bans\\\">\\r\\n                        <td>{{(b.fechadel | date:'dd/MM/yyyy') || ''}}</td>\\r\\n                        <td>{{(b.fechaal | date:'dd/MM/yyyy') || ''}}</td>\\r\\n                        <td><p>{{b.banner}}</p></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #modalSelDireccionCliente let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">¿Cuál es la dirección de entrega?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">       \\r\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important; \\\">                \\r\\n                <table class=\\\"table table-hover table-sm table-bordered\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <select name=\\\"selTipoDirCli\\\" id=\\\"selTipoDirCli\\\" class=\\\"form-control form-control-sm\\\" #tipoDirCli=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"direccionClienteNueva.idtipodireccion\\\">\\r\\n                                    <option *ngFor=\\\"let td of tiposDireccion\\\" [ngValue]=\\\"td._id\\\">{{td.descripcion}}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtDirCli\\\" id=\\\"txtDirCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #dirCli=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"direccionClienteNueva.direccion\\\" placeholder=\\\"Dirección\\\"/>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtZonaCli\\\" id=\\\"txtZonaCli\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" #zonaCli=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"direccionClienteNueva.zona\\\" placeholder=\\\"Zona\\\" min=\\\"0\\\"/>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtColCli\\\" id=\\\"txtColCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #colCli=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"direccionClienteNueva.colonia\\\" placeholder=\\\"Colonia\\\"/>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtCodAccCli\\\" id=\\\"txtCodAccCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #codAccCli=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"direccionClienteNueva.codigoacceso\\\" placeholder=\\\"Cód. de acceso\\\"/>\\r\\n                            </td>                            \\r\\n                            <td>\\r\\n                                <select name=\\\"selRestCli\\\" id=\\\"selRestCli\\\" class=\\\"form-control form-control-sm\\\" #restCli=\\\"ngModel\\\" [(ngModel)]=\\\"direccionClienteNueva.idrestaurante\\\">\\r\\n                                    <option *ngFor=\\\"let rest of restaurantes\\\" [ngValue]=\\\"rest._id\\\">{{rest.nombre}}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevaDireccionEntrega(); c(null);\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngFor=\\\"let dir of direccionesCliente\\\" (click)=\\\"c(dir)\\\">\\r\\n                            <td>{{dir.idtipodireccion.descripcion}}</td>\\r\\n                            <td colspan=\\\"5\\\" style=\\\"white-space:nowrap; \\\">\\r\\n                                {{dir.direccion}}, zona {{dir.zona}}, colonia {{dir.colonia}}{{dir.codigoacceso ? (', código de acceso: ' + dir.codigoacceso)\\r\\n                                : ''}}\\r\\n                            </td>\\r\\n                            <td>&nbsp;</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>                \\r\\n            </div>            \\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalHistorialCliente let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Historial de {{clienteObj.nombre}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"height: 650px; overflow-y:auto; \\\">\\r\\n        <small>\\r\\n            <div class=\\\"card\\\" *ngFor=\\\"let histo of histoCliente\\\">\\r\\n                <div class=\\\"card-header font-weight-bold\\\">{{histo.fecha | date:'dd/MM/yyyy'}}</div>\\r\\n                <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\r\\n                    <table style=\\\"width: 100%; border-collapse:collapse; border: solid 0.1em lightgray\\\">\\r\\n                        <tr style=\\\"background-color: #FFFEE0\\\" *ngFor=\\\"let det of histo.detallecomanda\\\">\\r\\n                            <td>\\r\\n                                <table style=\\\"width: 100%; border-collapse:collapse;\\\">\\r\\n                                    <tr>\\r\\n                                        <td>{{det.cantidad}} {{det.descripcion}}</td>\\r\\n                                    </tr>\\r\\n                                    <tr *ngFor=\\\"let compo of det.componentes\\\">\\r\\n                                        <td style=\\\"padding-left: 1.5em\\\">\\r\\n                                            <table style=\\\"width: 100%; border-collapse:collapse;\\\">\\r\\n                                                <tr>\\r\\n                                                    <td>{{compo.descripcion}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let ext of compo.extrasnotas\\\">\\r\\n                                                    <td style=\\\"padding-left: 1.5em\\\">\\r\\n                                                        <span *ngIf=\\\"ext.esextra\\\">\\r\\n                                                            <strong style=\\\"font-size: 12pt\\\">+</strong> {{ext.descripcion}}\\r\\n                                                        </span>\\r\\n                                                        <p *ngIf=\\\"!ext.esextra\\\">\\r\\n                                                            <strong>N:</strong> {{ext.notas}}\\r\\n                                                        </p>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer text-right\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"c(histo)\\\">Duplicar</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </small>        \\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalComponentes let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Componentes de {{detalleComanda[detalleComanda.length - 1].descripcion}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">            \\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-outline-secondary btn-sm\\\" *ngFor=\\\"let cim of componentesItemMenu; let i = index\\\" (click)=\\\"toggleComponente(null, cim.idcomponente)\\\" \\r\\n                    [disabled]=\\\"detalleComanda[this.detalleComanda.length - 1].componentes.length == detalleComanda[detalleComanda.length - 1].limitecomponentes\\\">\\r\\n                    {{cim.idcomponente.descripcion}}\\r\\n                </button>\\r\\n                <!--\\r\\n                <table class=\\\"table table-hover table-sm\\\">\\r\\n                    <tr *ngFor=\\\"let cim of componentesItemMenu; let i = index\\\">\\r\\n                        <td>{{cim.idcomponente.descripcion}}</td>\\r\\n                        <td>\\r\\n                            <input #cb id=\\\"chkCompo_{{i}}\\\" name=\\\"chkCompo_{{i}}\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" \\r\\n                                (change)=\\\"toggleComponente($event, cim.idcomponente)\\\"\\r\\n                                [disabled]=\\\"!cb.checked && detalleComanda[this.detalleComanda.length - 1].componentes.length == detalleComanda[detalleComanda.length - 1].limitecomponentes\\\"/>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\" [disabled]=\\\"detalleComanda[detalleComanda.length - 1].componentes.length == 0\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalEditaComponentes let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Componentes de {{detcom.descripcion}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-outline-secondary btn-sm\\\" *ngFor=\\\"let cim of componentesItemMenu; let i = index\\\"\\r\\n                    (click)=\\\"toggleComponenteEdit(null, cim.idcomponente)\\\" [disabled]=\\\"detcom.componentes.length == detcom.limitecomponentes\\\">\\r\\n                    {{cim.idcomponente.descripcion}}\\r\\n                </button>\\r\\n                <!--\\r\\n                <table class=\\\"table table-hover table-sm\\\">\\r\\n                    <tr *ngFor=\\\"let cim of componentesItemMenu; let i = index\\\">\\r\\n                        <td>{{cim.idcomponente.descripcion}}</td>\\r\\n                        <td>\\r\\n                            <input #cbe id=\\\"chkCompoE_{{i}}\\\" name=\\\"chkCompoE_{{i}}\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" (change)=\\\"toggleComponenteEdit($event, cim.idcomponente)\\\"\\r\\n                                [disabled]=\\\"!cbe.checked && detcom.componentes.length == detcom.limitecomponentes\\\"\\r\\n                            />\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\" [disabled]=\\\"detcom.componentes.length == 0\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalExtras let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Extras</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <table class=\\\"table table-hover table-sm\\\">\\r\\n                    <tr *ngFor=\\\"let ext of lstComposExtras; let i = index\\\">\\r\\n                        <td>{{ext.descripcion}}</td>\\r\\n                        <td>\\r\\n                            <input #cbext id=\\\"chkExt_{{i}}\\\" name=\\\"chkExt_{{i}}\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" (change)=\\\"toggleExtras($event, ext)\\\"/>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalNotas let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Nota</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <textarea #txtDetCompoNotas id=\\\"txtDetCompoNotas\\\" name=\\\"txtDetCompoNotas\\\" class=\\\"form-control\\\" style=\\\"height: 100%\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c(txtDetCompoNotas.value)\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalExtrasProducto let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Extras</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <table class=\\\"table table-hover table-sm\\\">\\r\\n                    <tr *ngFor=\\\"let ext of lstComposExtras; let i = index\\\">\\r\\n                        <td>{{ext.descripcion}}</td>\\r\\n                        <td>\\r\\n                            <input #cbextprod id=\\\"chkExtProd_{{i}}\\\" name=\\\"chkExtProd_{{i}}\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" (change)=\\\"toggleExtrasProducto($event, ext)\\\"\\r\\n                            />\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalNotasProducto let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Nota del producto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <textarea #txtNotProd id=\\\"txtNotProd\\\" name=\\\"txtNotProd\\\" class=\\\"form-control\\\" style=\\\"height: 100%\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c(txtNotProd.value)\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalNotasPedido let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Notas del pedido</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 350px; overflow-y:auto; padding: 0 !important; \\\">\\r\\n                <textarea #txtNotPedido=\\\"ngModel\\\" [(ngModel)]=\\\"comanda.notas\\\" id=\\\"txtNotPedido\\\" name=\\\"txtNotPedido\\\" class=\\\"form-control\\\" style=\\\"height: 100%\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('')\\\">Terminar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalPagar let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Datos de facturación</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 600px; overflow-y:auto; padding: 0.2em !important; \\\">\\r\\n                <table style=\\\"width: 100%; border-collapse: collapse\\\">\\r\\n                    <tr>                        \\r\\n                        <td>\\r\\n                            <ul class=\\\"list-group list-group-flush\\\">\\r\\n                                <li class=\\\"list-group-item text-center\\\">\\r\\n                                    <span style=\\\"padding-right: 1px !important; padding-top: 1px !important\\\" *ngFor=\\\"let fps of lstFormasPago\\\">\\r\\n                                        <button class=\\\"btn btn-sm btn-outline-primary\\\" style=\\\"font-weight: bold;\\\" (click)=\\\"addFormaPago(fps)\\\" [disabled]=\\\"+saldocomanda == 0\\\">\\r\\n                                            {{fps.descripcion}}\\r\\n                                        </button>\\r\\n                                    </span>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let dcc of detallescobcom; let i = index\\\">\\r\\n                        <td *ngIf=\\\"dcc.detcobro.length > 0\\\">\\r\\n                            <table style=\\\"width: 100%; border-collapse:collapse\\\">\\r\\n                                <tr>\\r\\n                                    <td colspan=\\\"7\\\">\\r\\n                                        <strong>{{dcc.descripcion}}</strong>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr *ngIf=\\\"dcc.estarjeta\\\">\\r\\n                                    <th colspan=\\\"4\\\" class=\\\"small font-weight-bold\\\"></th>\\r\\n                                    <th colspan=\\\"2\\\" class=\\\"small font-weight-bold text-center\\\">Vencimiento</th>                                    \\r\\n                                    <th class=\\\"small font-weight-bold\\\"></th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th class=\\\"small font-weight-bold\\\">Monto</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\">%</th>                                    \\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"!dcc.estarjeta && !dcc.condocumento && !dcc.escortesia\\\">Vuelto para</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"!dcc.estarjeta && !dcc.condocumento && !dcc.escortesia\\\">Vuelto</th>                                    \\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"dcc.estarjeta\\\">Emisor</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"dcc.estarjeta\\\">No.</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"dcc.estarjeta\\\">Mes</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"dcc.estarjeta\\\">Año</th>\\r\\n                                    <th class=\\\"small font-weight-bold\\\" *ngIf=\\\"dcc.estarjeta\\\">Nombre</th>\\r\\n                                </tr>                                \\r\\n                                <tr *ngFor=\\\"let detc of dcc.detcobro; let j = index\\\">\\r\\n                                    <td>                                        \\r\\n                                        <input type=\\\"number\\\" #txtMonto=\\\"ngModel\\\" [(ngModel)]=\\\"detc.monto\\\" id=\\\"txtMonto_{{j}}\\\" name=\\\"txtMonto_{{j}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                                            (change)=\\\"recalcPorcentaje(txtMonto, txtPorcentaje, i, j)\\\" (blur)=\\\"recalcPorcentaje(txtMonto, txtPorcentaje, i, j)\\\" \\r\\n                                            placeholder=\\\"Monto\\\" [style.width]=\\\"detc.estarjeta ? '90px' : ''\\\"/>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <input type=\\\"number\\\" #txtPorcentaje=\\\"ngModel\\\" [(ngModel)]=\\\"detc.porcentaje\\\" id=\\\"txtPorcentaje_{{j}}\\\" name=\\\"txtPorcentaje_{{j}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                                            (change)=\\\"recalcMonto(txtMonto, txtPorcentaje, i, j)\\\" (blur)=\\\"recalcMonto(txtMonto, txtPorcentaje, i, j)\\\" placeholder=\\\"Porcentaje del monto\\\" \\r\\n                                            max=\\\"100.00\\\" [style.width]=\\\"detc.estarjeta ? '75px' : ''\\\"/>\\r\\n                                    </td>\\r\\n                                    <!-- Inicia columnas para cuando es efectivo -->\\r\\n                                    <td *ngIf=\\\"!detc.estarjeta && !detc.condocumento && !detc.escortesia\\\">\\r\\n                                        <input type=\\\"text\\\" #vueltoPara=\\\"ngModel\\\" [(ngModel)]=\\\"detc.vueltopara\\\" id=\\\"selVlt_{{j}}\\\" name=\\\"selVlt_{{j}}\\\"\\r\\n                                            class=\\\"form-control form-control-sm\\\" (change)=\\\"calcVuelto(i, j)\\\" placeholder=\\\"Vuelto para\\\"/>\\r\\n                                        <!--    \\r\\n                                        <select name=\\\"selVlt_{{j}}\\\" id=\\\"selVlt_{{j}}\\\" [(ngModel)]=\\\"detc.vueltopara\\\" class=\\\"form-control form-control-sm\\\" #vueltoPara\\r\\n                                            [required]=\\\"!detc.estarjeta && !detc.condocumento && !detc.escortesia\\\" (change)=\\\"calcVuelto(i, j)\\\">\\r\\n                                            <option *ngFor=\\\"let v of vlts\\\" value=\\\"{{v.valor}}\\\">{{v.descripcion}}</option>\\r\\n                                        </select>\\r\\n                                        -->\\r\\n                                    </td>\\r\\n                                    <td [colSpan]=\\\"!detc.estarjeta && !detc.condocumento && !detc.escortesia ? 3 : 1\\\" *ngIf=\\\"!detc.estarjeta && !detc.condocumento && !detc.escortesia\\\">\\r\\n                                        <input type=\\\"number\\\" #txtVuelto=\\\"ngModel\\\" [(ngModel)]=\\\"detc.vuelto\\\" id=\\\"txtVuelto_{{j}}\\\" name=\\\"txtVuelto_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"Vuelto\\\" disabled=\\\"true\\\"/>\\r\\n                                    </td>\\r\\n                                    <!-- Fin de columnas para cuando es efectivo -->\\r\\n                                    <!--Inicia columnas para cuando es tarjeta-->\\r\\n                                    <td *ngIf=\\\"detc.estarjeta\\\">                                        \\r\\n                                        <select name=\\\"selEmisor_{{j}}\\\" id=\\\"selEmisor_{{j}}\\\" [(ngModel)]=\\\"detc.idemisor\\\" class=\\\"form-control form-control-sm\\\" #selEmisor \\r\\n                                            style=\\\"width: 100%\\\" [required]=\\\"detc.estarjeta\\\">\\r\\n                                            <option *ngFor=\\\"let etcd of lstEmisoresTarjeta\\\" value=\\\"{{etcd._id}}\\\">{{etcd.nombre}}</option>\\r\\n                                        </select>\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"detc.estarjeta\\\">                                        \\r\\n                                        <input type=\\\"number\\\" #txtNumT=\\\"ngModel\\\" [(ngModel)]=\\\"detc.numero\\\" id=\\\"txtNumT_{{j}}\\\" name=\\\"txtNumT_{{j}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                                            style=\\\"width: 170px\\\" placeholder=\\\"No. de tarjeta\\\" [required]=\\\"detc.estarjeta\\\" (keyup)=\\\"checkLength(detc)\\\"/>\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"detc.estarjeta\\\">                                        \\r\\n                                        <input type=\\\"number\\\" #txtMesVT=\\\"ngModel\\\" [(ngModel)]=\\\"detc.mesvence\\\" id=\\\"txtMesVT_{{j}}\\\" name=\\\"txtMesVT_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"Mes\\\" min=\\\"1\\\" max=\\\"12\\\" [required]=\\\"detc.estarjeta\\\"/>\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"detc.estarjeta\\\">                                        \\r\\n                                        <input type=\\\"number\\\" #txtAnioVT=\\\"ngModel\\\" [(ngModel)]=\\\"detc.aniovence\\\" id=\\\"txtAnioVT_{{j}}\\\" name=\\\"txtAnioVT_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"Año\\\" [required]=\\\"detc.estarjeta\\\" min=\\\"0\\\" max=\\\"99\\\"/>\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"detc.estarjeta\\\">\\r\\n                                        <input type=\\\"Text\\\" #txtNomT=\\\"ngModel\\\" [(ngModel)]=\\\"detc.nombretarjeta\\\" id=\\\"txtNomT_{{j}}\\\" name=\\\"txtNomT_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"Nombre en tarjeta\\\" [required]=\\\"detc.estarjeta\\\" />\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-nowrap\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"addDetTarjeta(i, j)\\\" *ngIf=\\\"j == 0 && detc.estarjeta\\\" [disabled]=\\\"+saldocomanda == 0\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delDetTarjeta(i, j)\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <!--Fin de columnas para cuando es tarjeta-->\\r\\n                                    <!-- Cuando es con documento -->\\r\\n                                    <td *ngIf=\\\"detc.condocumento\\\">\\r\\n                                        <input type=\\\"text\\\" #txtNoDoc=\\\"ngModel\\\" [(ngModel)]=\\\"detc.numdocumento\\\" id=\\\"txtNoDoc_{{j}}\\\" name=\\\"txtNoDoc_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"No. de documento\\\" [required]=\\\"detc.condocumento\\\" minlength=\\\"1\\\" />\\r\\n                                    </td>\\r\\n                                    <!-- Fin de cuando es con documento -->\\r\\n                                    <!--Cuando es cortesía-->\\r\\n                                    <td *ngIf=\\\"detc.escortesia\\\">\\r\\n                                        <input type=\\\"text\\\" #txtNoDoc=\\\"ngModel\\\" [(ngModel)]=\\\"detc.aprobadopor\\\" id=\\\"txtNoDoc_{{j}}\\\" name=\\\"txtNoDoc_{{j}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                                            placeholder=\\\"Aprobado por\\\" [required]=\\\"detc.escortesia\\\" minlength=\\\"1\\\" />\\r\\n                                    </td>\\r\\n                                    <!--Fin de cuando es cortesía-->\\r\\n                                </tr>\\r\\n                            </table>                            \\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>                \\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\" *ngIf=\\\"false\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"height: 250px; overflow-y:auto; padding: 0.2em !important; \\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6\\\" style=\\\"padding: 0 !important;\\\">                        \\r\\n                        <div class=\\\"card-header font-weight-bold\\\">¿A quién facturar?</div>\\r\\n                        <ul class=\\\"list-group list-group-flush\\\">\\r\\n                            <li class=\\\"list-group-item\\\" *ngFor=\\\"let dfact of datosfactCliente\\\" (click)=\\\"addFacturarA(dfact)\\\">\\r\\n                                <!-- [style.pointer-events]=\\\"+saldofacta == 0 ? 'none' : 'auto'\\\" -->\\r\\n                                <span class=\\\"font-weight-bold\\\">{{dfact.nombre}}</span> / <span>{{dfact.nit}}</span><br/>\\r\\n                                <small>\\r\\n                                    <span>{{dfact.direccion}}</span>\\r\\n                                </small>                                    \\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\" style=\\\"padding-top: 0 !important; padding-bottom: 0 !important; padding-left: 0 !important;\\\">\\r\\n                        <div class=\\\"card-header font-weight-bold\\\">Facturar a</div>\\r\\n                        <table class=\\\"table table-hover table-sm\\\">\\r\\n                            <tr *ngFor=\\\"let dfc of comanda.detfacturara; let i = index\\\">\\r\\n                                <td>{{dfc.nombre}}</td>\\r\\n                                <td>{{dfc.nit}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"number\\\" #txtMontoFA=\\\"ngModel\\\" [(ngModel)]=\\\"dfc.monto\\\" id=\\\"txtMontoFA_{{i}}\\\" name=\\\"txtMontoFA_{{i}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                                        (change)=\\\"recalcSaldoFactA()\\\" (blur)=\\\"recalcSaldoFactA()\\\" placeholder=\\\"Monto\\\" disabled=\\\"true\\\"/>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delDetFactA(i)\\\">\\r\\n                                        <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <table style=\\\"width: 100%; border-collapse:collapse\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"font-weight-bold text-right\\\" [style.color]=\\\"+saldocomanda == 0 ? '#58FA58': '#FA5858'\\\">\\r\\n                    Saldo pendiente de pedido:\\r\\n                </td>\\r\\n                <td class=\\\"font-weight-bold text-right\\\" [style.color]=\\\"+saldocomanda == 0 ? '#58FA58': '#FA5858'\\\">\\r\\n                    {{saldocomanda | number:'1.2-2'}}\\r\\n                </td>\\r\\n                <!--\\r\\n                <td class=\\\"font-weight-bold text-right\\\" [style.color]=\\\"+saldofacta == 0 ? '#58FA58': '#FA5858'\\\">\\r\\n                    Saldo pendiente de facturar a:\\r\\n                </td>\\r\\n                <td class=\\\"font-weight-bold text-right\\\" [style.color]=\\\"+saldofacta == 0 ? '#58FA58': '#FA5858'\\\">\\r\\n                    {{saldofacta | number:'1.2-2'}}\\r\\n                </td>\\r\\n                -->\\r\\n                <td class=\\\"text-right\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Terminar pedido.')\\\" [disabled]=\\\"+saldocomanda > 0\\\">Terminar pedido</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalConfirmEnd let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Terminar pedido</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n            <span class=\\\"font-weight-bold\\\">¿Seguro(a) de finalizar el pedido?</span>\\r\\n        </div>        \\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cancelar')\\\">Cancelar</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"c('Terminar')\\\">Aceptar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalSelFacturarA let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">¿A quién desea facturar?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important; \\\">\\r\\n                <table class=\\\"table table-hover table-sm table-bordered\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtNomFact\\\" id=\\\"txtNomFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #nombreFacturaCliente=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"datofactClienteObj.nombre\\\" placeholder=\\\"Nombre\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtNit\\\" id=\\\"txtNit\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #nitCliente=\\\"ngModel\\\" [(ngModel)]=\\\"datofactClienteObj.nit\\\"\\r\\n                                    placeholder=\\\"N.I.T.\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtDirFact\\\" id=\\\"txtDirFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #direccionFacturaCliente=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"datofactClienteObj.direccion\\\" placeholder=\\\"Dirección\\\" />\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoFacturarA(); c(null);\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngFor=\\\"let fa of datosfactCliente\\\" (click)=\\\"c(fa)\\\">\\r\\n                            <td>{{fa.nombre}}</td>\\r\\n                            <td>{{fa.nit}}</td>\\r\\n                            <td>{{fa.direccion}}</td>\\r\\n                            <td>&nbsp;</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalSelTelefono let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">¿Qué teléfono desea usar?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" style=\\\"padding: 0 !important; \\\">\\r\\n                <table class=\\\"table table-hover table-sm table-bordered\\\">\\r\\n                    <tbody>                        \\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <input name=\\\"txtTelCli\\\" id=\\\"txtTelCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #telCliObj=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"telCli.telefono\\\" placeholder=\\\"Teléfono\\\" />\\r\\n                            </td>                            \\r\\n                            <td>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoTelCli(); c(null);\\\" [disabled]=\\\"!telCli.telefono\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>                        \\r\\n                        <tr *ngFor=\\\"let tel of telefonosCliente\\\" (click)=\\\"c(tel)\\\">\\r\\n                            <td colspan=\\\"2\\\">{{tel.telefono}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/comanda/comanda.component.html\n// module id = ./src/app/components/comanda/comanda.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\n// Modelos\r\nimport { Cliente } from '../../models/cliente';\r\nimport { TelefonoCliente } from '../../models/telefonocliente';\r\nimport { DireccionCliente } from '../../models/direccioncliente';\r\nimport { TipoDireccion } from '../../models/tipodireccion';\r\nimport { Restaurante } from '../../models/restaurante';\r\nimport { DatoFacturaCliente } from '../../models/datosfactcliente';\r\nimport { MenuRestaurante } from '../../models/menurest';\r\nimport { MenuRestComponente } from '../../models/menurestcomponente';\r\nimport { Comanda } from '../../models/comanda';\r\nimport { DetalleComanda } from '../../models/detallecomanda';\r\nimport { DetalleComponenteDetalleComanda } from '../../models/detcompdetcomanda';\r\nimport { ExtrasNotasComanda } from '../../models/extrasnotascomanda';\r\nimport { Componente } from '../../models/componente';\r\nimport { FormaPago } from '../../models/formapago';\r\nimport { DetalleCobroComanda } from '../../models/detcobrocomanda';\r\nimport { DetalleCobro } from '../../models/detcobro';\r\nimport { EmisorTarjeta } from '../../models/emisortarjeta';\r\nimport { DetalleFacturarA } from '../../models/detfacturara';\r\nimport { TipoComanda } from '../../models/tipocomanda';\r\nimport { Banner } from '../../models/banner';\r\nimport { Vuelto } from '../../models/vuelto';\r\nimport { RazonCortesia } from '../../models/razoncortesia';\r\nimport { TiempoEntrega } from '../../models/tiempoentrega';\r\n\r\n// Servicios\r\nimport { GLOBAL, EstatusComanda } from '../../services/global';\r\nimport { ClienteService } from '../../services/cliente.service';\r\nimport { TipoDireccionService } from '../../services/tipodireccion.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { RestauranteService } from '../../services/restaurante.service';\r\nimport { MenuRestauranteService } from '../../services/menurest.service';\r\nimport { MenuRestComponenteService } from '../../services/menurestcomponente.service';\r\nimport { ComponenteService } from '../../services/componente.service';\r\nimport { FormaPagoService } from '../../services/formapago.service';\r\nimport { EmisorTarjetaService } from '../../services/emisortarjeta.service';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { TipoComandaService } from '../../services/tipocomanda.service';\r\nimport { BannerService } from '../../services/banner.service';\r\nimport { VueltoService } from '../../services/vuelto.service';\r\nimport { RazonCortesiaService } from '../../services/razoncortesia.service';\r\nimport { TiempoEntregaService } from '../../services/tiempoentrega.service';\r\nimport { GoogleApiService } from '../../services/gapi.service';\r\n\r\n\r\n// Otros\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-comanda',\r\n    templateUrl: './comanda.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        ClienteService, LocalStorageService, TipoDireccionService, RestauranteService, MenuRestauranteService,\r\n        MenuRestComponenteService, ComponenteService, FormaPagoService, EmisorTarjetaService, ComandaService,\r\n        TipoComandaService, BannerService, VueltoService, RazonCortesiaService, TiempoEntregaService, GoogleApiService\r\n    ],\r\n    styles: [`.modal-size .modal-content { width: 850px } .modal-size-pago .modal-content { width: 850px }`]\r\n})\r\nexport class ComandaComponent implements OnInit {\r\n    public clienteObj: Cliente;\r\n    public telefonosCliente: Array<TelefonoCliente>;\r\n    public direccionesCliente: Array<DireccionCliente>;\r\n    public datosfactCliente: Array<DatoFacturaCliente>;\r\n    public detallesComponente: Array<DetalleComponenteDetalleComanda>;\r\n    public extrasNotas: Array<ExtrasNotasComanda>;\r\n    public telefonoClienteObj: TelefonoCliente;\r\n    public telCli: TelefonoCliente;\r\n    public direccionClienteObj: DireccionCliente;\r\n    public direccionClienteNueva: DireccionCliente;\r\n    public datofactClienteObj: DatoFacturaCliente;\r\n    public detcompo: DetalleComponenteDetalleComanda;\r\n    public extra: ExtrasNotasComanda;\r\n    public carta: Array<any>;\r\n    public comanda: Comanda;\r\n    public detalleComanda: Array<DetalleComanda>;\r\n    public detcom: DetalleComanda;\r\n    public detallescobcom: Array<DetalleCobroComanda>;\r\n    public detcobcom: DetalleCobroComanda;\r\n    public detscobro: Array<DetalleCobro>;\r\n    public detcobro: DetalleCobro;\r\n    public histoCliente: Array<Comanda>;\r\n    public lstTiposComanda: Array<TipoComanda>;\r\n    public bans: Array<Banner>;\r\n    public vlts: Array<Vuelto>;\r\n    public rcorts: Array<RazonCortesia>;\r\n    public tiempos: Array<TiempoEntrega>;\r\n    public lblTipoComanda: string;\r\n    public eshistorica: boolean;\r\n    public restaurantes: Array<Restaurante>;\r\n    private toasterService: ToasterService;\r\n    private token: string;\r\n    private tiposDireccion: Array<TipoDireccion>;\r\n    private componentesItemMenu: Array<MenuRestComponente>;\r\n    private lstComposExtras: Array<Componente>;\r\n    private lstFormasPago: Array<FormaPago>;\r\n    private lstEmisoresTarjeta: Array<EmisorTarjeta>;\r\n    private idxDetCom: number;\r\n    private idxDetSel: number;\r\n    private idxCompoSel: number;\r\n    private parametros = { idcliente: null, telefono: null, idcomanda: null };\r\n    private saldocomanda: number;\r\n    private porcpend: number;\r\n    private saldofacta: number;\r\n    private nivelActual: number;\r\n    private comandaOriginal: any;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _clienteService: ClienteService,\r\n        private _ls: LocalStorageService,\r\n        private _tipoDireccionService: TipoDireccionService,\r\n        private _restauranteService: RestauranteService,\r\n        private _menuRestauranteService: MenuRestauranteService,\r\n        private _menuRestCompoService: MenuRestComponenteService,\r\n        private _componenteService: ComponenteService,\r\n        private _formaPagoService: FormaPagoService,\r\n        private _emisorTarjetaService: EmisorTarjetaService,\r\n        private _comandaService: ComandaService,\r\n        private _tipoComandaService: TipoComandaService,\r\n        private _bannerService: BannerService,\r\n        private _vueltoService: VueltoService,\r\n        private _razonCortesiaService: RazonCortesiaService,\r\n        private _tiempoEntregaService: TiempoEntregaService,\r\n        private _gapiService: GoogleApiService,\r\n        private modalService: NgbModal,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.parametros = { idcliente: null, telefono: null, idcomanda: null };\r\n        this.clienteObj = new Cliente(null, null, [], null, null, false, [], false);\r\n        this.telefonoClienteObj = new TelefonoCliente(null, null, null, false);\r\n        this.direccionClienteObj = new DireccionCliente(null, null, null, null, null, null, null, null, false);\r\n        this.carta = new Array();\r\n        this.comanda = new Comanda(\r\n            null, null, null, null, null, null, null, null, null, null, null,\r\n            null, 0, 0, [], [], [], null, null, null, null, [], null, null, false\r\n        );\r\n        this.detalleComanda = [];\r\n        this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false);\r\n        this.detcompo = new DetalleComponenteDetalleComanda(null, null, [], false);\r\n        this.extra = new ExtrasNotasComanda(null, false, null, null, null, false);\r\n        this.detallesComponente = [];\r\n        this.extrasNotas = [];\r\n        this.lstComposExtras = [];\r\n        this.idxDetCom = null;\r\n        this.idxDetSel = null;\r\n        this.idxCompoSel = null;\r\n        this.lstFormasPago = [];\r\n        this.lstEmisoresTarjeta = [];\r\n        this.lstTiposComanda = [];\r\n        this.detallescobcom = [];\r\n        this.detcobcom = new DetalleCobroComanda(null, null, false, [], false, false, false);\r\n        this.detscobro = [];\r\n        this.detcobro = new DetalleCobro(\r\n            null, null, null, null, null, false, null, null, null, null, null, false, null, false, null, false\r\n        );\r\n        this.saldocomanda = 0.00;\r\n        this.porcpend = 0.00;\r\n        this.lblTipoComanda = '';\r\n        this.histoCliente = [];\r\n        this.vlts = [];\r\n        this.rcorts = [];\r\n        this.tiempos = [];\r\n        this.restaurantes = [];\r\n        this.eshistorica = false;\r\n        this.datofactClienteObj = new DatoFacturaCliente(null, null, null, null, null, false);\r\n        this.direccionClienteNueva = new DireccionCliente(null, null, null, null, null, null, null, null, false);\r\n        this.nivelActual = 0;\r\n        this.telefonosCliente = [];\r\n        this.telCli = new TelefonoCliente(null, null, null, false);\r\n        this.comandaOriginal = {};\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({ positionClass: 'toast-bottom-full-width' });\r\n\r\n    private loadDireccionesCliente(asignar: boolean = true) {\r\n        this._clienteService.getDireccionesCliente(this.comanda.idcliente, this.token).subscribe(\r\n            response => {\r\n              if (response.lista) {\r\n                  this.direccionesCliente = response.lista;\r\n                  // console.log('Direcciones: ', this.direccionesCliente);\r\n                  if (asignar && this.direccionesCliente.length > 0) {\r\n                      this.direccionClienteObj = this.direccionesCliente[0];\r\n                      this.comanda.iddireccioncliente = this.direccionClienteObj._id;\r\n                      this.comanda.idrestaurante = response.lista[0].idrestaurante ? response.lista[0].idrestaurante._id : null;\r\n                  }\r\n              }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTelefonosCliente() {\r\n        this._clienteService.getTelefonosCliente(this.comanda.idcliente, this.token).subscribe(\r\n            response => {\r\n                this.telefonosCliente = response.lista;\r\n                // console.log(this.telefonosCliente);\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadComponentesItemMenu(idmnurest: string) {\r\n        this._menuRestCompoService.listaMenuRestComponente(this.token, idmnurest).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.componentesItemMenu = response.lista;\r\n                    // console.log(this.componentesItemMenu);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadExtras() {\r\n        this._componenteService.listaExtras(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstComposExtras = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadFormasPago () {\r\n        this._formaPagoService.listaFormasPago(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstFormasPago = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadEmisoresTarjeta() {\r\n        this._emisorTarjetaService.listaEmisoresTarjeta(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstEmisoresTarjeta = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadDatosFactCliente(asignar: boolean = true) {\r\n        this._clienteService.getDatosFacturaCliente(this.comanda.idcliente, this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.datosfactCliente = response.lista;\r\n                    if (asignar) {\r\n                        this.comanda.detfacturara.push(\r\n                            new DetalleFacturarA(\r\n                                this.datosfactCliente[0].nombre,\r\n                                this.datosfactCliente[0].nit,\r\n                                this.datosfactCliente[0].direccion,\r\n                                this.comanda.totalcomanda\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiposComanda() {\r\n        this._tipoComandaService.listaTiposComanda(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstTiposComanda = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadHistorial() {\r\n        this._comandaService.histoComandasCliente(this.token, this.comanda.idcliente).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    response.lista.forEach((histo) => {\r\n                        histo.fecha = moment(histo.fecha).format('YYYY-MM-DD HH:mm:ss');\r\n                    });\r\n                    this.histoCliente = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadBanners() {\r\n        this._bannerService.listaBannersFecha(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    response.lista.forEach((item) => {\r\n                        if (!item.espermanente) {\r\n                            item.fechadel = moment(item.fechadel).format('YYYY-MM-DD');\r\n                            item.fechaal = moment(item.fechaal).format('YYYY-MM-DD');\r\n                        }\r\n                    });\r\n                    this.bans = response.lista;\r\n                    // console.log(this.bans);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadVueltos(monto: number) {\r\n        this._vueltoService.vueltosMayoresQue(this.token, monto).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.vlts = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRazonesCortesia() {\r\n        this._razonCortesiaService.listaRazonesCortesia(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.rcorts = response.lista;\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiemposEntrega() {\r\n        this._tiempoEntregaService.listaTiemposEntrega(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.tiempos = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRestaurantes(idToSet: string = null) {\r\n        this._restauranteService.listaRestaurantes(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.restaurantes = response.lista;\r\n                    if (idToSet) {\r\n                        this.comanda.idrestaurante = idToSet;\r\n                    }\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiposDireccion() {\r\n        this._tipoDireccionService.listaTiposDeDireccion(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.tiposDireccion = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private cleanVars() {\r\n        this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false);\r\n        this.carta.splice(1);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this._route.params.subscribe(params => {\r\n            if (params['idcomanda']) {\r\n                this.parametros.idcomanda = params['idcomanda'];\r\n                this._comandaService.getComanda(this.parametros.idcomanda, this.token).subscribe(\r\n                    response => {\r\n                        if (response.entidad) {\r\n                            this.comandaOriginal = response.entidad;\r\n                            // console.log('Comanda existente: ', this.comandaOriginal);\r\n                            // this.loadTiposComanda();\r\n                            // this.loadTiemposEntrega();\r\n                            this.loadRestaurantes(this.comandaOriginal.idrestaurante);\r\n                            // this.loadTiposDireccion();\r\n                            this.setTipoComanda(this.comandaOriginal.idtipocomanda);\r\n                            this.comanda.detallecomanda = this.comandaOriginal.detallecomanda;\r\n                            this.detalleComanda = this.comanda.detallecomanda;\r\n                            this.calculaTotales();\r\n                            this.comanda._id = this.comandaOriginal._id;\r\n                            this.comanda.idestatuscomanda = this.comandaOriginal.idestatuscomanda.idestatuscomanda;\r\n                        }\r\n                    },\r\n                    error => {\r\n                        const respuesta = JSON.parse(error._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (params['idcliente']) {\r\n                this.parametros.idcliente = params['idcliente'];\r\n                this._clienteService.getClienteById(this.parametros.idcliente, this.token).subscribe(\r\n                    response => {\r\n                        if ( !response.entidad ) {\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                        } else {\r\n                            this.clienteObj = response.entidad;\r\n                            // console.log(this.clienteObj);\r\n                            this.comanda.fecha = !this.eshistorica ? moment().toDate() : null;\r\n                            this.comanda.idcliente = this.clienteObj._id;\r\n                            this.comanda.fechainitoma = moment().toDate();\r\n                            this.comanda.idusuario = this._ls.get('restouchusr')._id;\r\n                            // this.loadTelefonosCliente();\r\n                            // this.loadDireccionesCliente();\r\n                            // this.loadDatosFactCliente();\r\n                            this.loadTiposComanda();\r\n                            // this.loadHistorial();\r\n                            this.loadTiemposEntrega();\r\n                            if (!this.parametros.idcomanda) { this.loadRestaurantes(); }\r\n                            // this.loadTiposDireccion();\r\n                        }\r\n                    },\r\n                    error => {\r\n                        const respuesta = JSON.parse(error._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (params['telefono']) {\r\n                this.parametros.telefono = params['telefono'];\r\n                this._clienteService.getTelefonoClienteNumtel(this.parametros.idcliente, this.parametros.telefono, this.token).subscribe(\r\n                    response => {\r\n                        if (!response.entidad) {\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                        } else {\r\n                            this.telefonoClienteObj = response.entidad;\r\n                            this.comanda.idtelefonocliente = this.telefonoClienteObj._id;\r\n                        }\r\n                    },\r\n                    error => {\r\n                        const respuesta = JSON.parse(error._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    }\r\n                );\r\n            }\r\n\r\n            if ( params['historica'] ) {\r\n                this.eshistorica = +params['historica'] === 0 ? false : true;\r\n            }\r\n\r\n            // console.log('En memoria:', this.comanda);\r\n\r\n            this.loadCarta(null, 0);\r\n            this.loadBanners();\r\n        });\r\n    }\r\n\r\n    cancelaPedido() {\r\n        this.comanda = new Comanda(\r\n            null, null, null, null, null, null, null, null, null, null,\r\n            null, null, 0, 0, [], [], [], null, null, null, null, [], null, null, false\r\n        );\r\n        this._router.navigate(['/comandas']);\r\n    }\r\n\r\n    selectDireccionesCliente(modalSelDireccionCliente) {\r\n        this.modalService.open(modalSelDireccionCliente, { windowClass: 'modal-size' }).result.then(\r\n            result => {\r\n                if (result) {\r\n                    this.direccionClienteObj = result;\r\n                    this.comanda.iddireccioncliente = this.direccionClienteObj._id;\r\n                    this.comanda.idrestaurante = result.idrestaurante._id;\r\n                }\r\n            },\r\n            reason => {\r\n                // console.log(reason);\r\n            }\r\n        );\r\n    }\r\n\r\n    selectTelefonoCliente(modalSelTelefono) {\r\n        this.modalService.open(modalSelTelefono).result.then(\r\n            result => {\r\n                if (result) {\r\n                    this.telefonoClienteObj = result;\r\n                    this.comanda.idtelefonocliente = this.telefonoClienteObj._id;\r\n                }\r\n            },\r\n            reason => {\r\n                // console.log(reason);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevaDireccionEntrega() {\r\n        this.direccionClienteNueva.idcliente = this.comanda.idcliente;\r\n        this._clienteService.crearDireccion(this.direccionClienteNueva, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.direccionClienteObj = response.entidad;\r\n                    this.comanda.iddireccioncliente = this.direccionClienteObj._id;\r\n                    this.comanda.idrestaurante = this.direccionClienteObj.idrestaurante;\r\n                    this.direccionClienteNueva = new DireccionCliente(null, null, null, null, null, null, null, null, false);\r\n                    this.loadDireccionesCliente(false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    setFacturarA(modalSelFacturarA) {\r\n        this.modalService.open(modalSelFacturarA, { windowClass: 'modal-size' }).result.then(\r\n            result => {\r\n                if (result) {\r\n                    if (this.comanda.detfacturara && this.comanda.detfacturara.length > 0) {\r\n                        this.comanda.detfacturara.splice(0);\r\n                    }\r\n                    this.comanda.detfacturara.push(\r\n                        new DetalleFacturarA(result.nombre, result.nit, result.direccion, this.comanda.totalcomanda)\r\n                    );\r\n                }\r\n            },\r\n            reason => {\r\n                // console.log(reason);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoFacturarA() {\r\n        this.datofactClienteObj.idcliente = this.comanda.idcliente;\r\n        this._clienteService.crearDatoFacturaCliente(this.datofactClienteObj, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    if (this.comanda.detfacturara && this.comanda.detfacturara.length > 0) {\r\n                        this.comanda.detfacturara.splice(0);\r\n                    }\r\n                    this.comanda.detfacturara.push(\r\n                        new DetalleFacturarA(\r\n                            response.entidad.nombre, response.entidad.nit, response.entidad.direccion, this.comanda.totalcomanda\r\n                        )\r\n                    );\r\n                    this.datofactClienteObj = new DatoFacturaCliente(null, null, null, null, null, false);\r\n                    this.loadDatosFactCliente(false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoTelCli() {\r\n        this.telCli.idcliente = this.comanda.idcliente;\r\n        // console.log(this.telCli);\r\n        this._clienteService.crearTelefono(this.telCli, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.telefonoClienteObj = response.entidad;\r\n                    this.comanda.idtelefonocliente = this.telefonoClienteObj._id;\r\n                    this.telCli = new TelefonoCliente(null, null, null, false);\r\n                    this.loadTelefonosCliente();\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    verHistorialCliente(modalHistorialCliente) {\r\n        this.modalService.open(modalHistorialCliente, { windowClass: 'modal-size' }).result.then(\r\n            result => {\r\n                this.comanda.detallecomanda = result.detallecomanda;\r\n                this.detalleComanda = this.comanda.detallecomanda;\r\n                this.calculaTotales();\r\n                // console.log(this.comanda);\r\n            },\r\n            reason => {\r\n                // console.log(reason);\r\n            }\r\n        );\r\n    }\r\n\r\n    setTipoComanda(tcom) {\r\n        this.comanda.idtipocomanda = tcom._id;\r\n        this.lblTipoComanda = tcom.descripcion;\r\n    }\r\n\r\n    setDetTemp(nivel: number, itemMenu: MenuRestaurante) {\r\n        if (nivel <= this.nivelActual) {\r\n            const tmpdesc = this.detcom.descripcion.split('-');\r\n            this.detcom.descripcion = '';\r\n            for (let i = 0; i < nivel; i++) {\r\n                if (this.detcom.descripcion !== '') { this.detcom.descripcion += '-'; }\r\n                this.detcom.descripcion += tmpdesc[i] ? tmpdesc[i].trim() : '';\r\n            }\r\n        }\r\n        this.nivelActual = nivel;\r\n\r\n        if (nivel > 1) {\r\n            if (this.detcom.descripcion !== '') { this.detcom.descripcion += '-'; }\r\n            this.detcom.descripcion += itemMenu.descripcion;\r\n        } else if (itemMenu) {\r\n            this.detcom.descripcion = itemMenu.descripcion;\r\n        }\r\n\r\n        if (itemMenu && itemMenu.precio) { this.detcom.precio = itemMenu.precio; }\r\n    }\r\n\r\n    loadCarta(modalComponentes, nivel, idpadre = null, itemMenu: MenuRestaurante = null) {\r\n        this._menuRestauranteService.getCarta(this.token, nivel, idpadre).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    const tmp = [];\r\n                    response.lista.forEach(element => {\r\n                        tmp.push(element);\r\n                    });\r\n                    this.carta.splice(nivel);\r\n                    this.carta.push(tmp);\r\n                    this.setDetTemp(nivel, itemMenu);\r\n                } else {\r\n                    if (!itemMenu.espromocion) {\r\n                        this.setDetTemp(nivel, itemMenu);\r\n                        this.agregaADetalleComanda(itemMenu, this.detcom, modalComponentes);\r\n                    } else {\r\n                        // console.log(itemMenu);\r\n                        this.addANotaPedido('Promoción: ' + itemMenu.descripcion);\r\n                        const precioPromo = itemMenu.precio;\r\n                        itemMenu.itemspromo.forEach((ip, i) => {\r\n                            this.detalleComanda.push(\r\n                                new DetalleComanda(\r\n                                    ip.idmenurest, ip.cantidad, (i !== 0 ? 0 : precioPromo), null, ip.descripcion, [], [],\r\n                                    ip.limitecomponentes, ip.tieneextras, ip.precioextra, false\r\n                                )\r\n                            );\r\n                        });\r\n                        this.calculaTotales();\r\n                    }\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    pideComponentes(itemMenu: MenuRestaurante, detalleCom: DetalleComanda, modalComponentes) {\r\n        this.loadComponentesItemMenu(itemMenu._id);\r\n        this.modalService.open(modalComponentes).result.then(\r\n            result => {\r\n                this.cleanVars();\r\n            },\r\n            reason => { this.cleanVars(); }\r\n        );\r\n    }\r\n\r\n    editaComponentes(dc, i, modalEditaComponentes) {\r\n        this.detcom = dc;\r\n        this.detcom.componentes = [];\r\n        this.loadComponentesItemMenu(dc.idmenurest);\r\n        this.modalService.open(modalEditaComponentes).result.then(\r\n            result => { this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false); },\r\n            reason => { this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false); }\r\n        );\r\n        /*if (dc.componentes && (dc.componentes.length > 0 || +dc.limitecomponentes > 0)) {\r\n            this.detcom.componentes = [];\r\n            this.loadComponentesItemMenu(dc.idmenurest);\r\n            this.modalService.open(modalEditaComponentes).result.then(\r\n                result => { this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false); },\r\n                reason => { this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false); }\r\n            );\r\n        }*/\r\n    }\r\n\r\n    toggleComponente(e, obj) {\r\n        this.detalleComanda[this.detalleComanda.length - 1].componentes.push(\r\n            new DetalleComponenteDetalleComanda(obj._id, obj.descripcion, [], false)\r\n        );\r\n        /*\r\n        if (e.target.checked) {\r\n            this.detalleComanda[this.detalleComanda.length - 1].componentes.push(\r\n                new DetalleComponenteDetalleComanda(obj._id, obj.descripcion, [], false)\r\n            );\r\n        } else {\r\n            for (let i = 0; i < this.detalleComanda[this.detalleComanda.length - 1].componentes.length; i++) {\r\n                if (this.detalleComanda[this.detalleComanda.length - 1].componentes[i].idcomponente === obj._id) {\r\n                    this.detalleComanda[this.detalleComanda.length - 1].componentes.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    toggleComponenteEdit(e, obj) {\r\n        this.detcom.componentes.push(\r\n            new DetalleComponenteDetalleComanda(obj._id, obj.descripcion, [], false)\r\n        );\r\n        /*\r\n        if (e.target.checked) {\r\n            this.detcom.componentes.push(\r\n                new DetalleComponenteDetalleComanda(obj._id, obj.descripcion, [], false)\r\n            );\r\n        } else {\r\n            for (let i = 0; i < this.detcom.componentes.length; i++) {\r\n                if (this.detcom.componentes[i].idcomponente === obj._id) {\r\n                    this.detcom.componentes.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    pideExtras(modalExtras, idxdet, idxcompo) {\r\n        this.idxDetSel = idxdet;\r\n        this.idxCompoSel = idxcompo;\r\n        this.loadExtras();\r\n        this.modalService.open(modalExtras).result.then(\r\n            result => {\r\n                this.cleanVars();\r\n            },\r\n            reason => { this.cleanVars(); }\r\n        );\r\n    }\r\n\r\n    pideExtrasProducto(modalExtrasProducto, idx) {\r\n        this.idxDetCom = idx;\r\n        this.loadExtras();\r\n        this.modalService.open(modalExtrasProducto).result.then(\r\n            result => { this.cleanVars(); },\r\n            reason => { this.cleanVars(); }\r\n        );\r\n    }\r\n\r\n    toggleExtras(e, extraItem) {\r\n        if (e.target.checked) {\r\n            this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas.push(\r\n                new ExtrasNotasComanda(\r\n                    extraItem._id, true,\r\n                    extraItem.secobra ?\r\n                    parseFloat((\r\n                        this.detalleComanda[this.idxDetSel].precioextra / (this.detalleComanda[this.idxDetSel].limitecomponentes ?\r\n                            this.detalleComanda[this.idxDetSel].limitecomponentes :\r\n                            1)\r\n                    ).toFixed(2)) : 0,\r\n                    null, extraItem.descripcion, false\r\n                )\r\n            );\r\n        } else {\r\n            for (let i = 0; i < this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas.length; i++) {\r\n                if (this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas[i].idcomponente === extraItem._id) {\r\n                    this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        this.calculaTotales();\r\n    }\r\n\r\n    toggleExtrasProducto(e, extraItem) {\r\n        if (e.target.checked) {\r\n            if (!this.detalleComanda[this.idxDetCom].extrasnotas) { this.detalleComanda[this.idxDetCom].extrasnotas = []; }\r\n            this.detalleComanda[this.idxDetCom].extrasnotas.push(\r\n                new ExtrasNotasComanda(\r\n                    extraItem._id, true,\r\n                    extraItem.secobra ? this.detalleComanda[this.idxDetCom].precioextra : 0,\r\n                    null, extraItem.descripcion, false\r\n                )\r\n            );\r\n        } else {\r\n            if (this.detalleComanda[this.idxDetCom].extrasnotas) {\r\n                for (let i = 0; i < this.detalleComanda[this.idxDetCom].extrasnotas.length; i++) {\r\n                    if (this.detalleComanda[this.idxDetCom].extrasnotas[i].idcomponente === extraItem._id) {\r\n                        this.detalleComanda[this.idxDetCom].extrasnotas.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.calculaTotales();\r\n    }\r\n\r\n    removeExtraNota(i, j, k) {\r\n        this.detalleComanda[i].componentes[j].extrasnotas.splice(k, 1);\r\n        this.calculaTotales();\r\n    }\r\n\r\n    addANotaPedido(texto: string) {\r\n        if (texto != null && texto !== undefined && texto.trim() !== '') {\r\n            if (this.comanda.notas == null || this.comanda.notas === undefined) { this.comanda.notas = ''; }\r\n            if (this.comanda.notas !== '') { this.comanda.notas += '; '; }\r\n            this.comanda.notas += texto.trim();\r\n        }\r\n    }\r\n\r\n    pideNotas(modalNotas, idxdet, idxcompo) {\r\n        this.idxDetSel = idxdet;\r\n        this.idxCompoSel = idxcompo;\r\n        if (!this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas) {\r\n            this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas = [];\r\n        }\r\n        this.modalService.open(modalNotas).result.then(\r\n            result => {\r\n                this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].extrasnotas.push(\r\n                    new ExtrasNotasComanda(null, false, null, result, null, false)\r\n                );\r\n                this.addANotaPedido(\r\n                    this.detalleComanda[this.idxDetSel].descripcion + '-' +\r\n                    this.detalleComanda[this.idxDetSel].componentes[this.idxCompoSel].descripcion + ': ' +\r\n                    result\r\n                );\r\n                this.cleanVars();\r\n            },\r\n            reason => { this.cleanVars(); }\r\n        );\r\n    }\r\n\r\n    pideNotasPedido(modalNotasPedido) {\r\n        this.modalService.open(modalNotasPedido).result.then(\r\n            result => { },\r\n            reason => { }\r\n        );\r\n    }\r\n\r\n    pideNotasProducto(modalNotasProducto, idxdet) {\r\n        this.idxDetCom = idxdet;\r\n        this.modalService.open(modalNotasProducto).result.then(\r\n            result => {\r\n                this.detalleComanda[this.idxDetCom].extrasnotas.push(\r\n                    new ExtrasNotasComanda(null, false, null, result, null, false)\r\n                );\r\n                this.addANotaPedido(\r\n                    this.detalleComanda[this.idxDetCom].descripcion + ': ' + result\r\n                );\r\n            },\r\n            reason => { }\r\n        );\r\n    }\r\n\r\n    agregaADetalleComanda(itemMenu: MenuRestaurante, detalleTemp: DetalleComanda, modalComponentes) {\r\n        // console.log(itemMenu);\r\n        this.detalleComanda.push(\r\n            new DetalleComanda(\r\n                itemMenu._id, 1, detalleTemp.precio, null, detalleTemp.descripcion, [], [],\r\n                itemMenu.limitecomponentes, itemMenu.tieneextras, itemMenu.precioextra, false\r\n            )\r\n        );\r\n        this.calculaTotales();\r\n        if (itemMenu.tienecomponentes) {\r\n            this.pideComponentes(itemMenu, this.detalleComanda[this.detalleComanda.length - 1], modalComponentes);\r\n        } else { this.cleanVars(); }\r\n    }\r\n\r\n    removeItemPedido(idx: number) {\r\n        this.detalleComanda.splice(idx, 1);\r\n        this.calculaTotales();\r\n    }\r\n\r\n    removeExtraNotaProd(i, l) {\r\n        this.detalleComanda[i].extrasnotas.splice(l, 1);\r\n        this.calculaTotales();\r\n    }\r\n\r\n    calculaTotales() {\r\n        this.comanda.cantidaditems = this.detalleComanda.length;\r\n        this.comanda.totalcomanda = 0;\r\n        if (this.detalleComanda) {\r\n            this.detalleComanda.forEach(item => {\r\n                this.comanda.totalcomanda += (item.cantidad * item.precio);\r\n                if (item.extrasnotas) {\r\n                    item.extrasnotas.forEach((en) => {\r\n                        if (en.esextra && en.precio && en.precio !== 0) {\r\n                            this.comanda.totalcomanda += (item.cantidad * en.precio);\r\n                        }\r\n                    });\r\n                }\r\n                if (item.componentes) {\r\n                    item.componentes.forEach(compo => {\r\n                        compo.extrasnotas.forEach(ext => {\r\n                            if (ext.esextra && ext.precio && ext.precio !== 0) {\r\n                                this.comanda.totalcomanda += (item.cantidad * ext.precio);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        this.saldocomanda = this.comanda.totalcomanda;\r\n        this.porcpend = 100.00;\r\n        this.saldofacta = this.comanda.totalcomanda;\r\n    }\r\n\r\n    terminarPedido(modalPagar, modalConfirmEnd) {\r\n        this.loadFormasPago();\r\n        this.loadEmisoresTarjeta();\r\n        // this.loadDatosFactCliente();\r\n        this.loadRazonesCortesia();\r\n        this.saldofacta = this.comanda.totalcomanda;\r\n        if (this.comanda.detfacturara && this.comanda.detfacturara.length > 0) {\r\n            this.comanda.detfacturara[0].monto = this.comanda.totalcomanda;\r\n        }\r\n\r\n        this.modalService.open(modalPagar, { windowClass: 'modal-size-pago' }).result.then(\r\n            result => {\r\n                this.comanda.detallecomanda = this.detalleComanda;\r\n                this.comanda.detcobrocomanda = this.detallescobcom;\r\n                this.modalService.open(modalConfirmEnd).result.then(\r\n                    res => {\r\n                        this.comanda.idestatuscomanda = '59fea7304218672b285ab0e2';\r\n                        this.comanda.fechafintoma = moment().toDate();\r\n                        this._comandaService.crearComanda(this.comanda, this.token).subscribe(\r\n                            response => {\r\n                                if (!response.entidad) {\r\n                                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                                } else {\r\n                                    this.comanda = null;\r\n                                    this._router.navigate(['/comandas']);\r\n                                }\r\n                            },\r\n                            error => {\r\n                                const respuesta = JSON.parse(error._body);\r\n                                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                            }\r\n                        );\r\n                    },\r\n                    reason => {}\r\n                );\r\n            },\r\n            reason => { }\r\n        );\r\n    }\r\n\r\n    addFormaPago(fpago) {\r\n        const idfpago = fpago._id;\r\n        this.detcobcom = new DetalleCobroComanda(idfpago, null, false, [], false, false, false);\r\n        this.detcobcom.descripcion = fpago.descripcion;\r\n        this.detcobcom.estarjeta = fpago.estarjeta;\r\n        this.detcobcom.escortesia = fpago.escortesia;\r\n        this.detcobcom.condocumento = fpago.condocumento;\r\n        this.detcobcom.detcobro.push(\r\n            new DetalleCobro(\r\n                this.saldocomanda, this.porcpend, null, null, null, fpago.estarjeta, null, null, null, null, null,\r\n                fpago.condocumento, null, fpago.escortesia, null, false\r\n            )\r\n        );\r\n        this.detallescobcom.push(this.detcobcom);\r\n\r\n        if (!fpago.estarjeta && !fpago.condocumento && !fpago.escortesia) {\r\n            this.loadVueltos(this.saldocomanda);\r\n        }\r\n\r\n        this.recalculaSaldoComanda();\r\n    }\r\n\r\n    addDetTarjeta(i, j) {\r\n        this.detallescobcom[i].detcobro.push(\r\n            new DetalleCobro(\r\n                this.saldocomanda, this.porcpend, null, null, null, true, null, null, null, null, null, false, null, false, null, false\r\n            )\r\n        );\r\n        this.recalculaSaldoComanda();\r\n    }\r\n\r\n    delDetTarjeta(i, j) {\r\n        this.detallescobcom[i].detcobro.splice(j, 1);\r\n        if (!this.detallescobcom[i].estarjeta) {\r\n            this.detallescobcom.splice(i, 1);\r\n        } else {\r\n            if (this.detallescobcom[i].detcobro && this.detallescobcom[i].detcobro.length === 0) {\r\n                this.detallescobcom.splice(i, 1);\r\n            }\r\n        }\r\n        this.recalculaSaldoComanda();\r\n    }\r\n\r\n    checkLength(detalletc) {\r\n        const numtc: string = detalletc.numero.toString().trim();\r\n        if (numtc) {\r\n            if (numtc.length > 16) {\r\n                detalletc.numero = +numtc.substring(0, 16);\r\n            }\r\n        }\r\n    }\r\n\r\n    recalculaSaldoComanda() {\r\n        let tmpTot = 0.00, tmpPor = 0.00;\r\n        this.detallescobcom.forEach(detcc => {\r\n            detcc.detcobro.forEach(item => {\r\n                tmpTot += item.monto;\r\n                tmpPor += item.porcentaje;\r\n            });\r\n        });\r\n        this.saldocomanda = this.comanda.totalcomanda - tmpTot;\r\n        this.porcpend = 100.00 - tmpPor;\r\n    }\r\n\r\n    recalcPorcentaje(txtMonto, txtPorcentaje, i, j) {\r\n        this.detallescobcom[i].detcobro[j].porcentaje = parseFloat((txtMonto.value * 100 / this.comanda.totalcomanda).toFixed(2));\r\n        this.recalculaSaldoComanda();\r\n        this.loadVueltos(parseFloat(txtMonto.value));\r\n    }\r\n\r\n    recalcMonto(txtMonto, txtPorcentaje, i, j) {\r\n        this.detallescobcom[i].detcobro[j].monto = parseFloat((txtPorcentaje.value * this.comanda.totalcomanda / 100).toFixed(2));\r\n        this.recalculaSaldoComanda();\r\n        this.loadVueltos(this.detallescobcom[i].detcobro[j].monto);\r\n    }\r\n\r\n    recalcSaldoFactA() {\r\n        let tmpTot = 0.00;\r\n        this.comanda.detfacturara.forEach(item => {\r\n            tmpTot += item.monto;\r\n        });\r\n        this.saldofacta = this.comanda.totalcomanda - tmpTot;\r\n    }\r\n\r\n    addFacturarA(dfact) {\r\n        if (this.comanda.detfacturara && this.comanda.detfacturara.length > 0 ) {\r\n            // console.log(this.comanda.detfacturara);\r\n            this.comanda.detfacturara.splice(0);\r\n        }\r\n        this.comanda.detfacturara.push(\r\n            // new DetalleFacturarA(dfact.nombre, dfact.nit, dfact.direccion, this.saldofacta)\r\n            new DetalleFacturarA(dfact.nombre, dfact.nit, dfact.direccion, this.comanda.totalcomanda)\r\n        );\r\n        this.recalcSaldoFactA();\r\n    }\r\n\r\n    delDetFactA(i) {\r\n        this.comanda.detfacturara.splice(i, 1);\r\n        this.recalcSaldoFactA();\r\n    }\r\n\r\n    calcVuelto(i, j) {\r\n        if (this.detallescobcom[i].detcobro[j].vueltopara > 0) {\r\n            this.detallescobcom[i].detcobro[j].vuelto =\r\n                this.detallescobcom[i].detcobro[j].vueltopara - this.detallescobcom[i].detcobro[j].monto;\r\n        } else {\r\n            this.detallescobcom[i].detcobro[j].vuelto = 0.00;\r\n        }\r\n    }\r\n\r\n    private printComanda(trackingNo: number, idcomanda: string) {\r\n        this._gapiService.updGoogleToken().subscribe(\r\n            respUpd => {\r\n                this._gapiService.print(trackingNo, this.token).subscribe(\r\n                    respPrint => {\r\n                        this.toasterService.pop('info', 'Imprimiendo', 'Imprimiendo Orden No: ' + trackingNo);\r\n                        this._router.navigate(['/comandas']);\r\n                    },\r\n                    errorPrint => {\r\n                        const respuesta = JSON.parse(errorPrint._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    },\r\n                    () => {\r\n                        this._comandaService.cambiarEstatus(idcomanda, EstatusComanda.Produccion).subscribe(\r\n                            resUpdEst => { }, errUpdEst => { }\r\n                        );\r\n                    }\r\n                );\r\n            },\r\n            errUpd => {\r\n                const respuesta = JSON.parse(errUpd._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    guardarComanda() {\r\n        if (this.comandaOriginal && this.comandaOriginal._id && this.comandaOriginal._id.trim() !== '') {\r\n            this.comanda._id = this.comandaOriginal._id;\r\n            this.comanda.fecha = this.comandaOriginal.fecha;\r\n            this.comanda.fechainitoma = this.comandaOriginal.fecha;\r\n            this.comanda.fechafintoma = this.comandaOriginal.fecha;\r\n            this.comanda.tracking = this.comandaOriginal.tracking;\r\n        }\r\n        this.comanda.detallecomanda = this.detalleComanda;\r\n        this.comanda.idestatuscomanda = '59fea7524218672b285ab0e3';\r\n        this.comanda.iddatosfacturacliente =\r\n        this.comandaOriginal.iddatosfacturacliente ? this.comandaOriginal.iddatosfacturacliente._id : null;\r\n        this.comanda.totalcomanda = 0.00;\r\n        // console.log(this.comanda);\r\n        this.comanda.fechafintoma = moment().toDate();\r\n\r\n        if (this.comandaOriginal && this.comandaOriginal._id && this.comandaOriginal._id.trim() !== '') {\r\n            this._comandaService.modificarComanda(this.comanda, this.token).subscribe(\r\n                response => {\r\n                    if (!response.entidad) {\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                    } else {\r\n                        const trackingNo = response.entidad.tracking;\r\n                        const idcomanda = response.entidad._id;\r\n                        this.comanda = new Comanda(\r\n                            null, null, null, null, null, null, null, null, null, null,\r\n                            null, null, 0, 0, [], [], [], null, null, null, null, [], null, null, false\r\n                        );\r\n                        this.printComanda(trackingNo, idcomanda);\r\n                    }\r\n                },\r\n                error => {\r\n                    const respuesta = JSON.parse(error._body);\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                }\r\n            );\r\n        } else {\r\n            this._comandaService.crearComanda(this.comanda, this.token).subscribe(\r\n                response => {\r\n                    if (!response.entidad) {\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                    } else {\r\n                        const trackingNo = response.entidad.tracking;\r\n                        const idcomanda = response.entidad._id;\r\n                        this.comanda = new Comanda(\r\n                            null, null, null, null, null, null, null, null, null, null,\r\n                            null, null, 0, 0, [], [], [], null, null, null, null, [], null, null, false\r\n                        );\r\n                        this.printComanda(trackingNo, idcomanda);\r\n                    }\r\n                },\r\n                error => {\r\n                    const respuesta = JSON.parse(error._body);\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    //#region Historico\r\n    guardarHistorica() {\r\n        this.comanda.idestatuscomanda = '59fea7f34218672b285ab0e8';\r\n        this.comanda.detallecomanda = this.detalleComanda;\r\n        this._comandaService.crearComanda(this.comanda, this.token).subscribe(\r\n            response => {\r\n                if (!response.entidad) {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                } else {\r\n                    const idcliente = this.comanda.idcliente;\r\n                    this.comanda = null;\r\n                    this._router.navigate(['/clientes', idcliente]);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/comanda/comanda.component.ts","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top: 10px\\\">\\r\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"false\\\">\\r\\n        <div class=\\\"col-6 text-center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-block btn-lg\\\" (click)=\\\"nuevoPedido(modalNuevoPedido)\\\">AGREGAR PEDIDO</button>\\r\\n           <!--<input id=\\\"srchCli\\\" type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\" pattern=\\\"[0-9]+\\\" (keyup.enter)=\\\"buscarCliente(modalSelCliente, modalNuevoCliente)\\\" \\r\\n                #srchCli=\\\"ngModel\\\" [(ngModel)]=\\\"telABuscar\\\" placeholder=\\\"Teléfono del cliente...\\\"/>-->\\r\\n        </div>\\r\\n    </div>    \\r\\n    <hr *ngIf=\\\"false\\\"/>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"false\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div>                \\r\\n                <span style=\\\"padding-right: 2px !important\\\" *ngFor=\\\"let cnt of contadores\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" [style.background-color]=\\\"cnt._id.color\\\" style=\\\"color: lightgray; font-weight: bold\\\" (click)=\\\"loadComandasEnhanced(cnt._id._id)\\\">\\r\\n                        {{cnt._id.descripcion}}\\r\\n                        <span class=\\\"badge badge-dark badge-pill\\\">{{cnt.count}}</span>\\r\\n                    </button>\\r\\n                </span>\\r\\n                \\r\\n                <span style=\\\"padding-right: 2px !important\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"color: lightgray; font-weight: bold\\\" (click)=\\\"loadComandasEnhanced()\\\" *ngIf=\\\"contadores.length > 0\\\">\\r\\n                        Todas\\r\\n                    </button>\\r\\n                </span>                \\r\\n            </div>            \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row justify-content-center\\\" style=\\\"padding-top: 10px;\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" #fltrCliente=\\\"ngModel\\\" [(ngModel)]=\\\"filtroCliente\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Buscar comanda por nombre de cliente...\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 text-right font-weight-bold\\\">Del:</div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" #fltrFDel=\\\"ngModel\\\" [(ngModel)]=\\\"fdel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Del\\\" required/>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 text-right font-weight-bold\\\">Al:</div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" #fltrFAl=\\\"ngModel\\\" [(ngModel)]=\\\"fal\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Al\\\" required/>\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"loadComandasEnhanced(); loadContadores()\\\">\\r\\n                        <span class=\\\"oi oi-magnifying-glass\\\" title=\\\"Filtrar por fechas\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                </span>\\r\\n            </div>            \\r\\n        </div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\" *ngFor=\\\"let cmd of listaComandas | filterList:'idcliente.nombre':filtroCliente; let i = index\\\">\\r\\n        <div class=\\\"col-2\\\">\\r\\n            <table style=\\\"width: 100%; border-collapse: collapse;\\\">\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <span class=\\\"font-weight-bold\\\" style=\\\"font-size: 1.5em !important;\\\">\\r\\n                             {{cmd.fechafintoma | date:'HH:mm:ss'}}\\r\\n                        </span>                        \\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>{{cmd.fechafintoma | date:'dd/MM/yyyy'}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>                        \\r\\n                        <img class=\\\"rounded\\\" src=\\\"../../../assets/{{cmd.idtipocomanda.imagen}}\\\" alt=\\\"{{cmd.idtipocomanda.descripcion}}\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"false\\\">\\r\\n                    <td class=\\\"text-center font-weight-bold\\\" style=\\\"padding-top: 1em; font-size: 1.25em\\\">\\r\\n                        Total: Q {{cmd.totalcomanda | number:'1.2-2'}}<br/>\\r\\n                        <img class=\\\"rounded\\\" *ngFor=\\\"let ifp of cmd.imgpago\\\" src=\\\"../../../assets/{{ifp}}.png\\\" alt=\\\"FP\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-10\\\">            \\r\\n            <table style=\\\"width: 100%; border-collapse: collapse;\\\">\\r\\n                <tr>\\r\\n                    <td colspan=\\\"2\\\">\\r\\n                        <h4>\\r\\n                            Orden No. {{cmd.tracking | number:'1.0-0'}} a nombre de {{cmd.idcliente.nombre}}&nbsp;\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" (click)=\\\"verDetCobro(cmd, modalDetCobroComanda)\\\" *ngIf=\\\"cmd.detcobrocomanda && cmd.detcobrocomanda.length > 0\\\">Detalle de cobro</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary btn-sm\\\" (click)=\\\"goToUrl(cmd)\\\" *ngIf=\\\"cmd.idestatuscomanda._id != '59fea7bc4218672b285ab0e6'\\\">Editar</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\" (click)=\\\"printComanda(cmd.tracking, cmd._id)\\\">IMPRIMIR</button>\\r\\n                        </h4>                        \\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top\\\">Transcurrido:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top; font-weight: bold;\\\">{{cmd.fechafintoma | amTimeAgo:true}}</td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"false\\\">\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top\\\">Teléfono:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">{{cmd.idtelefonocliente.telefono}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Atendió:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">{{cmd.idusuario.nombre}}</td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"cmd.iddireccioncliente && cmd.idtipocomanda == '59fff327596e572d9cdac917'\\\">\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Entregar en:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">\\r\\n                         {{cmd.iddireccioncliente.direccion}}, zona {{cmd.iddireccioncliente.zona}}, colonia {{cmd.iddireccioncliente.colonia}} \\r\\n                         {{cmd.iddireccioncliente.codigoacceso ? (', código de acceso: ' + cmd.iddireccioncliente.codigoacceso) : ''}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Restaurante:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">\\r\\n                        {{cmd.idrestaurante ? cmd.idrestaurante.nombre : (cmd.iddireccioncliente ? cmd.iddireccioncliente.idrestaurante.nombre : '')}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Tiempo ofrecido:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">\\r\\n                        {{cmd.idtiempoentrega ? cmd.idtiempoentrega.tiempo : ''}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"cmd.iddireccioncliente && cmd.idtipocomanda == '59fff327596e572d9cdac917'\\\">\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Motorista:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">{{cmd.idmotorista ? cmd.idmotorista.nombre : ''}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" style=\\\"vertical-align: top;\\\">Observaciones:</td>\\r\\n                    <td style=\\\"padding-left: 0.15em; vertical-align: top;\\\">\\r\\n                        <p>{{cmd.notas || 'No tiene'}}</p>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"font-weight-bold\\\" colspan=\\\"2\\\" [style.color]=\\\"cmd.idestatuscomanda.color\\\">\\r\\n                        <h3>{{cmd.idestatuscomanda.descripcion}}</h3>\\r\\n                    </td>                    \\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td colspan=\\\"2\\\">                        \\r\\n                        <table style=\\\"width: 100%; border-collapse:collapse; border: solid 0.1em lightgray\\\">\\r\\n                            <tr style=\\\"background-color: #FFFEE0\\\" *ngFor=\\\"let det of cmd.detallecomanda\\\">\\r\\n                                <td>                                   \\r\\n                                    <table style=\\\"width: 100%; border-collapse:collapse;\\\">\\r\\n                                        <tr>                                            \\r\\n                                            <td>                                                \\r\\n                                                <table style=\\\"width: 100%; border-collapse: collapse;\\\">\\r\\n                                                    <tr>\\r\\n                                                        <td class=\\\"align-top\\\">{{det.cantidad}} {{det.descripcion}}</td>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let dce of det.extrasnotas\\\">\\r\\n                                                        <td class=\\\"align-top\\\" style=\\\"padding-left: 2em;\\\">\\r\\n                                                            <span *ngIf=\\\"dce.esextra\\\">\\r\\n                                                                <strong style=\\\"font-size: 12pt\\\">+</strong> {{dce.descripcion}}</span>\\r\\n                                                            <p *ngIf=\\\"!dce.esextra\\\">\\r\\n                                                                <strong>N:</strong> {{dce.notas}}</p>\\r\\n                                                        </td>                                                        \\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr *ngFor=\\\"let compo of det.componentes\\\">\\r\\n                                            <td style=\\\"padding-left: 2em\\\">\\r\\n                                                <table style=\\\"width: 100%; border-collapse:collapse;\\\">\\r\\n                                                    <tr>\\r\\n                                                        <td>{{compo.descripcion}}</td>                                                        \\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let ext of compo.extrasnotas\\\">\\r\\n                                                        <td style=\\\"padding-left: 1em\\\">\\r\\n                                                            <span *ngIf=\\\"ext.esextra\\\">\\r\\n                                                                <strong style=\\\"font-size: 12pt\\\">+</strong> {{ext.descripcion}}\\r\\n                                                            </span>\\r\\n                                                            <p *ngIf=\\\"!ext.esextra\\\">\\r\\n                                                                <strong>N:</strong> {{ext.notas}}\\r\\n                                                            </p>\\r\\n                                                        </td>                                                        \\r\\n                                                    </tr>\\r\\n                                                </table>                                                \\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </td>                                \\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #modalNuevoPedido let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">¿A nombre de quién está el pedido?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <input id=\\\"txtNombreDe\\\" name=\\\"txtNombreDe\\\" #nombreDe type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Nombre\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" aria-label=\\\"Close\\\" (click)=\\\"c(nombreDe.value)\\\">\\r\\n            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalSelCliente let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">¿Quién está llamando?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">                 \\r\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let cli of listaClientes\\\" (click)=\\\"c(cli._id)\\\">{{cli.nombre}}</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>    \\r\\n</ng-template>\\r\\n<ng-template #modalDetCobroComanda let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Detalles de cobro</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"height: 700px; overflow-y:auto\\\">\\r\\n        <table class=\\\"table table-hover table-sm table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th colspan=\\\"3\\\">Formas de pago</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <th class=\\\"text-right\\\" colspan=\\\"2\\\">Total de comanda:</th>\\r\\n                    <th class=\\\"text-right\\\" style=\\\"border-bottom: double 0.25em lightgray !important;\\\">{{comandaSelected.totalcomanda | number:'1.2-2'}}</th>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let fp of resumenCobro\\\">\\r\\n                    <td>\\r\\n                        <img class=\\\"rounded\\\" src=\\\"{{fp.imagen}}\\\" alt=\\\"{{fp.descripcion}}\\\">\\r\\n                    </td>\\r\\n                    <td>{{fp.descripcion}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{fp.monto | number:'1.2-2'}}</td>\\r\\n                </tr>                \\r\\n            </tbody>\\r\\n        </table>\\r\\n        <hr/>\\r\\n        <table class=\\\"table table-hover table-sm table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th colspan=\\\"3\\\">Facturar a</th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th>N.I.T.</th>\\r\\n                    <th>Nombre</th>\\r\\n                    <th class=\\\"text-right\\\">Monto</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <th colspan=\\\"2\\\" class=\\\"text-right\\\">Total de comanda:</th>\\r\\n                    <th class=\\\"text-right\\\" style=\\\"border-bottom: double 0.25em lightgray !important;\\\">{{comandaSelected.totalcomanda | number:'1.2-2'}}</th>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let facta of comandaSelected.detfacturara\\\">\\r\\n                    <td>{{facta.nit}}</td>\\r\\n                    <td>{{facta.nombre}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{facta.monto | number:'1.2-2'}}</td>\\r\\n                </tr>                \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #modalNuevoCliente let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Datos de cliente</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Nombre y teléfono:</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-8\\\">\\r\\n                        <input id=\\\"txtNombreCliente\\\" name=\\\"txtNombreCliente\\\" #nombreCliente=\\\"ngModel\\\" [(ngModel)]=\\\"clienteNuevo.nombre\\\" type=\\\"text\\\"\\r\\n                            class=\\\"form-control form-control-sm\\\" placeholder=\\\"Nombre\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <input id=\\\"txtTelefonoCliente\\\" name=\\\"txtTelefonoCliente\\\" #telefonoCliente=\\\"ngModel\\\" [(ngModel)]=\\\"telefonoNuevo.telefono\\\"\\r\\n                            type=\\\"text\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Teléfono\\\"/>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        </div>        \\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Dirección:</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtDirCli\\\">Dirección:</label>\\r\\n                            <input name=\\\"txtDirCli\\\" id=\\\"txtDirCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #direccionCliente=\\\"ngModel\\\" [(ngModel)]=\\\"direccionNueva.direccion\\\"\\r\\n                                placeholder=\\\"Dirección\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtZonaCli\\\">Zona:</label>\\r\\n                            <input name=\\\"txtZonaCli\\\" id=\\\"txtZonaCli\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" #zonaCliente=\\\"ngModel\\\" [(ngModel)]=\\\"direccionNueva.zona\\\"\\r\\n                                placeholder=\\\"Zona\\\" min=\\\"0\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtColoniaCli\\\">Colonia:</label>\\r\\n                            <input name=\\\"txtColoniaCli\\\" id=\\\"txtColoniaCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #coloniaCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"direccionNueva.colonia\\\" placeholder=\\\"Colonia\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtCodAccCli\\\">Código de acceso:</label>\\r\\n                            <input name=\\\"txtCodAccCli\\\" id=\\\"txtCodAccCli\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #codigoaccesoCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"direccionNueva.codigoacceso\\\" placeholder=\\\"Código de acceso\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"selTipoDirCli\\\">Tipo de dirección:</label>\\r\\n                            <select name=\\\"selTipoDirCli\\\" id=\\\"selTipoDirCli\\\" class=\\\"form-control form-control-sm\\\" #tipoDireccionCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"direccionNueva.idtipodireccion\\\">\\r\\n                                <option *ngFor=\\\"let td of tiposDireccion\\\" [ngValue]=\\\"td._id\\\">{{td.descripcion}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"selRestCli\\\">Atiende:</label>\\r\\n                            <select name=\\\"selRestCli\\\" id=\\\"selRestCli\\\" class=\\\"form-control form-control-sm\\\" #restauranteCliente=\\\"ngModel\\\" [(ngModel)]=\\\"direccionNueva.idrestaurante\\\">\\r\\n                                <option *ngFor=\\\"let rest of restaurantes\\\" [ngValue]=\\\"rest._id\\\">{{rest.nombre}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Datos de facturación:</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtNit\\\">N.I.T.:</label>\\r\\n                            <input name=\\\"txtNit\\\" id=\\\"txtNit\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #nitCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"facturaNueva.nit\\\" placeholder=\\\"N.I.T.\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtNomFact\\\">Nombre:</label>\\r\\n                            <input name=\\\"txtNomFact\\\" id=\\\"txtNomFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #nombreFacturaCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"facturaNueva.nombre\\\" placeholder=\\\"Nombre\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtDirFact\\\">Dirección:</label>\\r\\n                            <input name=\\\"txtDirFact\\\" id=\\\"txtDirFact\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #direccionFacturaCliente=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"facturaNueva.direccion\\\" placeholder=\\\"Dirección\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer justify-content-end\\\">\\r\\n        <div class=\\\"btn-group-sm\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-warning\\\" (click)=\\\"d('')\\\">Cancelar</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-success\\\" (click)=\\\"c('')\\\">Guardar y continuar...</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/comanda/lstcomandas.component.html\n// module id = ./src/app/components/comanda/lstcomandas.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { DecimalPipe } from '@angular/common';\r\n// Modelos\r\nimport { Cliente } from '../../models/cliente';\r\nimport { TelefonoCliente } from '../../models/telefonocliente';\r\nimport { DireccionCliente } from '../../models/direccioncliente';\r\nimport { DatoFacturaCliente } from '../../models/datosfactcliente';\r\nimport { Comanda } from '../../models/comanda';\r\nimport { TipoDireccion } from '../../models/tipodireccion';\r\nimport { Restaurante } from '../../models/restaurante';\r\n// Servicios\r\nimport { GLOBAL, EstatusComanda } from '../../services/global';\r\nimport { ClienteService } from '../../services/cliente.service';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { TipoDireccionService } from '../../services/tipodireccion.service';\r\nimport { RestauranteService } from '../../services/restaurante.service';\r\nimport { MintService } from '../../services/mint.service';\r\nimport { GoogleApiService } from '../../services/gapi.service';\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// Otros\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\nimport * as moment from 'moment';\r\nimport { MomentModule } from 'angular2-moment';\r\nimport 'moment/locale/es';\r\n\r\n@Component({\r\n    selector: 'app-lista-comandas',\r\n    templateUrl: './lstcomandas.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        ClienteService, LocalStorageService, ComandaService, TipoDireccionService, RestauranteService, MintService, GoogleApiService\r\n    ],\r\n    styles: [`.modal-size .modal-content { width: 600px }`]\r\n})\r\nexport class ListaComandasComponent implements OnInit, OnDestroy {\r\n    public telABuscar: string;\r\n    public listaClientes: Array<Cliente>;\r\n    public listaComandas: Array<Comanda>;\r\n    public comandaSelected: Comanda;\r\n    public contadores: Array<any>;\r\n    public filtroCliente: string;\r\n    public fdel: string;\r\n    public fal: string;\r\n    public clienteNuevo: Cliente;\r\n    public telefonoNuevo: TelefonoCliente;\r\n    public direccionNueva: DireccionCliente;\r\n    public facturaNueva: DatoFacturaCliente;\r\n    public tiposDireccion: Array<TipoDireccion>;\r\n    public restaurantes: Array<Restaurante>;\r\n    public mintOrders: Array<any>;\r\n    private token: string;\r\n    private toasterService: ToasterService;\r\n    private idclienteSelected: string;\r\n    private resumenCobro: Array<any>;\r\n    private repetidor;\r\n    private restaurantesUsuario: Array<string>;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _clienteService: ClienteService,\r\n        private _ls: LocalStorageService,\r\n        private _comandaService: ComandaService,\r\n        private _tipoDireccionService: TipoDireccionService,\r\n        private _restauranteService: RestauranteService,\r\n        private _mintService: MintService,\r\n        private _gapiService: GoogleApiService,\r\n        private modalService: NgbModal,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.telABuscar = null;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.idclienteSelected = null;\r\n        this.listaComandas = [];\r\n        this.comandaSelected = new Comanda(\r\n            null, null, null, null, null, null, null, null, null, null, null, null,\r\n            null, null, [], [], [], null, null, null, null, [], null, null, false\r\n        );\r\n        this.resumenCobro = [];\r\n        this.contadores = [];\r\n        this.filtroCliente = null;\r\n        this.fdel = moment().format('YYYY-MM-DD');\r\n        // this.fdel = moment('2018-04-26').format('YYYY-MM-DD');\r\n        this.fal = moment().format('YYYY-MM-DD');\r\n        this.restaurantesUsuario = [];\r\n        this.mintOrders = [];\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({ positionClass: 'toast-bottom-full-width' });\r\n\r\n    public loadComandas(idestatus: string = '') {\r\n        const fdstr = moment(this.fdel).format('YYYY-MM-DD');\r\n        const fastr = moment(this.fal).format('YYYY-MM-DD');\r\n        this._comandaService.listaComandas(this.token, idestatus, fdstr, fastr).subscribe(\r\n            result => {\r\n                if (result.lista) {\r\n                    this.listaComandas = result.lista;\r\n                } else {\r\n                    this.listaComandas = [];\r\n                    // this.toasterService.pop('info', 'Información', 'Información: ' + result.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    public loadComandasEnhanced(idestatus: string = '') {\r\n        this._mintService.listaPedidos(\r\n            this.token, moment(this.fdel).format('YYYY-MM-DD'), moment(this.fal).format('YYYY-MM-DD')\r\n        ).subscribe(\r\n            resMint => {\r\n                this._mintService.crearPedidos(resMint.lista, this.token).then((res) => {\r\n                    if (this.restaurantesUsuario.length > 0) { this.restaurantesUsuario = []; }\r\n                    this._ls.get('restouchusr').restaurante.forEach((rst) => { this.restaurantesUsuario.push(rst._id); });\r\n                    const parametros = {\r\n                        fdel: moment(this.fdel).format('YYYY-MM-DD'),\r\n                        fal: moment(this.fal).format('YYYY-MM-DD'),\r\n                        idestatuscomanda: idestatus,\r\n                        restaurantes: this.restaurantesUsuario\r\n                    };\r\n\r\n                    this._comandaService.listaComandasPost(this.token, parametros).subscribe(\r\n                        result => {\r\n                            if (result.lista) {\r\n                                this.listaComandas = result.lista;\r\n                            } else {\r\n                                this.listaComandas = [];\r\n                            }\r\n                        },\r\n                        error => {\r\n                            const respuesta = JSON.parse(error._body);\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                        }\r\n                    );\r\n                });\r\n            },\r\n            errMint => {\r\n                const respuesta = JSON.parse(errMint._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    public loadContadores() {\r\n        const fdstr = moment(this.fdel).format('YYYY-MM-DD');\r\n        const fastr = moment(this.fal).format('YYYY-MM-DD');\r\n        this._comandaService.contadorPorEstatus(this.token, fdstr, fastr).subscribe(\r\n            result => {\r\n                if (result.lista) {\r\n                    this.contadores = result.lista;\r\n                    // console.log(this.contadores);\r\n                } else {\r\n                    this.contadores = [];\r\n                    // this.toasterService.pop('info', 'Información', 'Información: ' + result.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiposDireccion() {\r\n        this._tipoDireccionService.listaTiposDeDireccion(this.token).subscribe(\r\n            response => {\r\n                this.tiposDireccion = response.lista;\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRestaurantes() {\r\n        this._restauranteService.listaRestaurantes(this.token).subscribe(\r\n            response => {\r\n                this.restaurantes = response.lista;\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private resetClienteNuevo() {\r\n        this.clienteNuevo = new Cliente(null, null, [], null, null, null, [], false);\r\n        this.telefonoNuevo = new TelefonoCliente(null, null, this.telABuscar.trim(), false);\r\n        this.direccionNueva = new DireccionCliente(null, null, null, null, null, null, null, null, false);\r\n        this.facturaNueva = new DatoFacturaCliente(null, null, null, null, null, false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadComandasEnhanced();\r\n        // this.loadContadores();\r\n        this.repetidor = Observable.interval(1000 * 10).subscribe(tick => {\r\n            this.loadComandasEnhanced();\r\n            // this.loadContadores();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.repetidor.unsubscribe();\r\n        // console.log('Timer detenido...');\r\n    }\r\n\r\n    private clienteNoEncontrado(modalNuevoCliente) {\r\n        this.resetClienteNuevo();\r\n        this.loadTiposDireccion();\r\n        this.loadRestaurantes();\r\n        this.modalService.open(modalNuevoCliente, { windowClass: 'modal-size' }).result.then(\r\n            result => {\r\n                this._clienteService.crearPaqueteCliente(\r\n                    this.clienteNuevo, this.telefonoNuevo, this.direccionNueva, this.facturaNueva, this.token\r\n                ).subscribe(\r\n                    response => {\r\n                        if (response.entidad) {\r\n                            this._router.navigate(['/comanda', response.entidad.idcliente, response.entidad.telefono]);\r\n                        } else {\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                        }\r\n                    },\r\n                    error => {\r\n                        const respuesta = JSON.parse(error._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    });\r\n            },\r\n            reason => { }\r\n        );\r\n    }\r\n\r\n    buscarCliente(modalSelCliente, modalNuevoCliente) {\r\n        document.getElementById('srchCli').blur();\r\n        this._clienteService.getClienteByTelefono(this.telABuscar, this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.listaClientes = response.lista;\r\n                    if (this.listaClientes.length === 1) {\r\n                        this._router.navigate(['/comanda', this.listaClientes[0]._id, this.telABuscar]);\r\n                    } else if (this.listaClientes.length > 1) {\r\n                        this.modalService.open(modalSelCliente).result.then(\r\n                            result => {\r\n                                this._router.navigate(['/comanda', result, this.telABuscar]);\r\n                            },\r\n                            reason => {\r\n                                // console.log(reason);\r\n                            }\r\n                        );\r\n                    }\r\n                } else {\r\n                    this.toasterService.pop('info', 'Clientes', response.mensaje);\r\n                    this.clienteNoEncontrado(modalNuevoCliente);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    verDetCobro(cmd, modalDetCobroComanda) {\r\n        this.comandaSelected = cmd;\r\n        this.resumenCobro = [];\r\n        this.comandaSelected.detcobrocomanda.forEach(item => {\r\n            let tmpTot = 0.00;\r\n            item.detcobro.forEach(element => { tmpTot += element.monto; });\r\n            this.resumenCobro.push(\r\n                {\r\n                    descripcion: item.descripcion,\r\n                    monto: tmpTot,\r\n                    imagen: '../../../assets/' + (item.estarjeta ? 'tarjeta' : 'efectivo') + '.png'\r\n                }\r\n            );\r\n        });\r\n\r\n        this.modalService.open(modalDetCobroComanda, { windowClass: 'modal-size' }).result.then(\r\n            result => { },\r\n            reason => { }\r\n        );\r\n\r\n    }\r\n\r\n    nuevoPedido(modalNuevoPedido) {\r\n        this.modalService.open(modalNuevoPedido).result.then(\r\n            result => {\r\n                // console.log(result);\r\n                this.clienteNuevo = new Cliente(null, result, [], null, null, false, [], false);\r\n                this._clienteService.crear(this.clienteNuevo, this.token).subscribe(\r\n                    response => {\r\n                        if (response.entidad) {\r\n                            this._router.navigate(['/comanda', response.entidad._id]);\r\n                        } else {\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                        }\r\n                    },\r\n                    error => {\r\n                        const respuesta = JSON.parse(error._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    }\r\n                );\r\n            },\r\n            reason => {}\r\n        );\r\n    }\r\n\r\n    goToUrl(obj: any) {\r\n        this._router.navigate(['/comanda', obj.idcliente._id, '', 0, obj._id ]);\r\n    }\r\n\r\n    printComanda(trackingNo: number, idcomanda: string) {\r\n        this._gapiService.updGoogleToken().subscribe(\r\n            respUpd => {\r\n                this._gapiService.print(trackingNo, this.token).subscribe(\r\n                    respPrint => {\r\n                        this.toasterService.pop('info', 'Imprimiendo', 'Imprimiendo Orden No: ' + trackingNo);\r\n                        this._router.navigate(['/comandas']);\r\n                    },\r\n                    errorPrint => {\r\n                        const respuesta = JSON.parse(errorPrint._body);\r\n                        this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                    },\r\n                    () => {\r\n                        this._comandaService.cambiarEstatus(idcomanda, EstatusComanda.Produccion).subscribe(\r\n                            resUpdEst => { }, errUpdEst => { }\r\n                        );\r\n                    }\r\n                );\r\n            },\r\n            errUpd => {\r\n                const respuesta = JSON.parse(errUpd._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/comanda/lstcomandas.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <table class=\\\"table table-bordered table-hover table-sm\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Ruta</th>\\r\\n                <th>Prod./Comp.</th>\\r\\n                <th>Id MINT</th>\\r\\n                <th>Id fox</th>\\r\\n                <th>Detalle</th>\\r\\n                <th>Power</th>\\r\\n                <th>Id partición</th>\\r\\n                <th>Id tipo precio</th>\\r\\n                <th></th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let df of dictfox; let i = index\\\">\\r\\n                <td style=\\\"white-space: nowrap;\\\">\\r\\n                    {{df.descripcion}}\\r\\n                </td>\\r\\n                <td>{{df.idmongodb ? 'P' : 'C'}}</td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtIdMint=\\\"ngModel\\\" [(ngModel)]=\\\"df.idmint\\\" id=\\\"txtIdMint_{{i}}\\\" name=\\\"txtIdMint_{{i}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                        placeholder=\\\"Id MINT\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtIdFox=\\\"ngModel\\\" [(ngModel)]=\\\"df.idfox\\\" id=\\\"txtIdFox_{{i}}\\\" name=\\\"txtIdFox_{{i}}\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Id Fox\\\"/>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtDetalle=\\\"ngModel\\\" [(ngModel)]=\\\"df.detalle\\\" id=\\\"txtDetalle_{{i}}\\\" name=\\\"txtDetalle_{{i}}\\\" class=\\\"form-control form-control-sm\\\" \\r\\n                        min=\\\"0\\\" max=\\\"1\\\" placeholder=\\\"Detalle\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtPower=\\\"ngModel\\\" [(ngModel)]=\\\"df.power\\\" id=\\\"txtPower_{{i}}\\\" name=\\\"txtPower_{{i}}\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                        min=\\\"0\\\" max=\\\"1\\\" placeholder=\\\"Power\\\" />                    \\r\\n                </td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtIdPart=\\\"ngModel\\\" [(ngModel)]=\\\"df.idparticion\\\" id=\\\"txtIdPart_{{i}}\\\" name=\\\"txtIdPart_{{i}}\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Id partición\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                    <input type=\\\"number\\\" #txtIdTP=\\\"ngModel\\\" [(ngModel)]=\\\"df.idtipoprecio\\\" id=\\\"txtIdTP_{{i}}\\\" name=\\\"txtIdTP_{{i}}\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Id tipo precio\\\" />\\r\\n                </td>\\r\\n                <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"saveDictFox(df)\\\">\\r\\n                        <span class=\\\"oi oi-check\\\" title=\\\"Guardar {{df.descripcion}}\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/diccionariofox/diccionariofox.component.html\n// module id = ./src/app/components/diccionariofox/diccionariofox.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { DiccionarioFox } from '../../models/diccionariofox';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { DiccionarioFoxService } from '../../services/diccionariofox.service';\r\n\r\n// Otros\r\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster';\r\n\r\n@Component({\r\n    selector: 'app-diccionario-fox',\r\n    templateUrl: './diccionariofox.component.html',\r\n    providers: [LocalStorageService, DiccionarioFoxService]\r\n})\r\nexport class DiccionarioFoxComponent implements OnInit {\r\n    private toasterService: ToasterService;\r\n    private token = null;\r\n    public dictfox: Array<DiccionarioFox>;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _ls: LocalStorageService,\r\n        private _diccionarioFoxService: DiccionarioFoxService,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.dictfox = [];\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({ positionClass: 'toast-bottom-full-width' });\r\n\r\n    ngOnInit() {\r\n        this.loadDiccionarioFox();\r\n    }\r\n\r\n    private loadDiccionarioFox() {\r\n        this._diccionarioFoxService.listaDiccionarioFox(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.dictfox = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    saveDictFox(obj) {\r\n        this._diccionarioFoxService.modificar(obj, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/diccionariofox/diccionariofox.component.ts","module.exports = \"<div class=\\\"container-fluid justify-content-center\\\" style=\\\"margin-top: 50px; \\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <img class=\\\"card-img-top\\\" src=\\\"../../../assets/logors.svg\\\" width=\\\"100\\\" height=\\\"70\\\" alt=\\\"RTG Lite\\\">\\r\\n                <div class=\\\"card-header text-center\\\">\\r\\n                    <h3>\\r\\n                        <img class=\\\"rounded\\\" src=\\\"../../../assets/logo.png\\\" width=\\\"50\\\" height=\\\"40\\\" alt=\\\"Jake's\\\">\\r\\n                    </h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtUsuario\\\"><strong>Usuario:</strong></label>\\r\\n                            <input name=\\\"txtUsuario\\\" id=\\\"txtUsuario\\\" #usr=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.usuario\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Ingrese su usuario\\\" required/>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtPass\\\"><strong>Contraseña:</strong></label>\\r\\n                            <input name=\\\"txtPass\\\" id=\\\"txtPass\\\" #contrasenia=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.contrasenia\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Contraseña\\\" required/>\\r\\n                        </div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!loginForm.form.valid\\\">Ingresar</button>\\r\\n                    </form>                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Usuario } from '../../models/usuario';\r\nimport { GLOBAL } from '../../services/global';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { MintService } from '../../services/mint.service';\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\n\r\n@Component({\r\n    selector: 'app-log-in',\r\n    templateUrl: './login.component.html',\r\n    providers: [UsuarioService, LocalStorageService, MintService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    public usuario: Usuario;\r\n    private toasterService: ToasterService;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _usuarioService: UsuarioService,\r\n        private _ls: LocalStorageService,\r\n        private _mintService: MintService,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.usuario = new Usuario(null, null, null, null, null, [], [], false);\r\n        this.toasterService = toasterService;\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({positionClass: 'toast-bottom-full-width'});\r\n\r\n    ngOnInit() {\r\n        // console.log('login.component cargado...');\r\n    }\r\n\r\n    onSubmit() {\r\n        this._usuarioService.signup(this.usuario).subscribe(\r\n            response => {\r\n                if (response.token) {\r\n                    response.entidad.token = response.token;\r\n                    this._ls.set('restouchusr', response.entidad);\r\n                    this.toasterService.pop('success', 'Login', response.mensaje);\r\n                    this._mintService.getMintToken().subscribe(\r\n                        respMint => {\r\n                            this._ls.set('m1nt', respMint.entidad);\r\n                        },\r\n                        errMint => {\r\n                            const respuesta = JSON.parse(errMint._body);\r\n                            this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n                        },\r\n                        () => {\r\n                            this._router.navigate(['/comandas']);\r\n                        });\r\n                }else {\r\n                    this._ls.clearAll();\r\n                    this.toasterService.pop('warning', 'Denegado', response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                this._ls.clearAll();\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <ngb-tabset>\\r\\n        <ngb-tab title=\\\"Restaurantes\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmRestaurante=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRest()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtNomRest\\\" id=\\\"txtNomRest\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\" \\r\\n                                        #nombreRest=\\\"ngModel\\\" [(ngModel)]=\\\"restaurante.nombre\\\" placeholder=\\\"Nombre del restaurante\\\" required [disabled]=\\\"restaurante.debaja\\\" />                                    \\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRestaurante.form.valid || restaurante.debaja\\\" *ngIf=\\\"!restaurante._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRestaurante.form.valid || restaurante.debaja\\\" *ngIf=\\\"restaurante._id\\\" (click)=\\\"updRestaurante()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"restaurante.debaja\\\" *ngIf=\\\"restaurante._id\\\" (click)=\\\"delRestaurante()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"restaurante._id\\\" (click)=\\\"nuevoRestaurante()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th>De baja</th>                            \\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of restaurantes\\\" (click)=\\\"getRestaurante(r._id)\\\">\\r\\n                            <td>{{r.nombre}}</td>\\r\\n                            <td>{{r.debaja ? 'Sí' : ''}}</td>                            \\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Tipos de dirección\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmTipoDir=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitTipoDireccion()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtDescTDir\\\" id=\\\"txtDescTDir\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\" \\r\\n                                        #tipoDir=\\\"ngModel\\\" [(ngModel)]=\\\"tipoDireccion.descripcion\\\" placeholder=\\\"Descripción del tipo de dirección\\\" required [disabled]=\\\"tipoDireccion.debaja\\\" />\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmTipoDir.form.valid || tipoDireccion.debaja\\\" *ngIf=\\\"!tipoDireccion._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmTipoDir.form.valid || tipoDireccion.debaja\\\" *ngIf=\\\"tipoDireccion._id\\\" (click)=\\\"updTipoDireccion()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"tipoDireccion.debaja\\\" *ngIf=\\\"tipoDireccion._id\\\" (click)=\\\"delTipoDireccion()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"tipoDireccion._id\\\" (click)=\\\"nuevoTipoDireccion()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Descripción</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let td of tiposDireccion\\\" (click)=\\\"getTipoDireccion(td._id)\\\">\\r\\n                            <td>{{td.descripcion}}</td>\\r\\n                            <td>{{td.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Componentes\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmCompo=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitComponente()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtDescCompo\\\" id=\\\"txtDescCompo\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\"\\r\\n                                        #compoDesc=\\\"ngModel\\\" [(ngModel)]=\\\"compo.descripcion\\\" placeholder=\\\"Descripción del componente\\\"\\r\\n                                        required [disabled]=\\\"compo.debaja\\\" />\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkComoExt\\\" id=\\\"chkComoExt\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #comoExtraMnu=\\\"ngModel\\\" [(ngModel)]=\\\"compo.comoextra\\\" [disabled]=\\\"compo.debaja\\\"/> Como extra\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkSeCobra\\\" id=\\\"chkSeCobra\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #seCobra=\\\"ngModel\\\" [(ngModel)]=\\\"compo.secobra\\\"\\r\\n                                                    [disabled]=\\\"compo.debaja\\\" /> ¿Se cobra?\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmCompo.form.valid || compo.debaja\\\" *ngIf=\\\"!compo._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmCompo.form.valid || compo.debaja\\\" *ngIf=\\\"compo._id\\\"\\r\\n                                            (click)=\\\"updComponente()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"compo.debaja\\\" *ngIf=\\\"compo._id\\\" (click)=\\\"delComponente()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"compo._id\\\" (click)=\\\"nuevoComponente()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Descripción</th>\\r\\n                            <th>Como extra</th>\\r\\n                            <th>¿Se cobra?</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let cmp of compos\\\" (click)=\\\"getComponente(cmp._id)\\\">\\r\\n                            <td>{{cmp.descripcion}}</td>\\r\\n                            <td>{{cmp.comoextra ? 'Sí' : ''}}</td>\\r\\n                            <td>{{cmp.secobra ? 'Sí' : ''}}</td>\\r\\n                            <td>{{cmp.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Formas de pago\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmFP=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitFormaPago()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtDescFP\\\" id=\\\"txtDescFP\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 30%\\\"\\r\\n                                        #fPDesc=\\\"ngModel\\\" [(ngModel)]=\\\"formaPago.descripcion\\\" placeholder=\\\"Descripción de la forma de pago\\\"\\r\\n                                        required [disabled]=\\\"formaPago.debaja\\\" />\\r\\n                                    <input name=\\\"txtOrdenFP\\\" id=\\\"txtOrdenFP\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 10%\\\"\\r\\n                                        #fpOrden=\\\"ngModel\\\" [(ngModel)]=\\\"formaPago.orden\\\" placeholder=\\\"Orden\\\" required [disabled]=\\\"formaPago.debaja\\\"/>\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkEsTFP\\\" id=\\\"chkEsTFP\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #fpT=\\\"ngModel\\\" [(ngModel)]=\\\"formaPago.estarjeta\\\" \\r\\n                                                    [disabled]=\\\"formaPago.debaja\\\"/> Es tarjeta\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkEsCort\\\" id=\\\"chkEsCort\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #esCort=\\\"ngModel\\\" [(ngModel)]=\\\"formaPago.escortesia\\\"\\r\\n                                                    [disabled]=\\\"formaPago.debaja\\\"/> Es cortesia\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkEsConDoc\\\" id=\\\"chkEsConDoc\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #esConDoc=\\\"ngModel\\\" [(ngModel)]=\\\"formaPago.condocumento\\\"\\r\\n                                                    [disabled]=\\\"formaPago.debaja\\\" /> Con documento\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmFP.form.valid || formaPago.debaja\\\" *ngIf=\\\"!formaPago._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmFP.form.valid || formaPago.debaja\\\" *ngIf=\\\"formaPago._id\\\" (click)=\\\"updFormaPago()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"formaPago.debaja\\\" *ngIf=\\\"formaPago._id\\\" (click)=\\\"delFormaPago()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"formaPago._id\\\" (click)=\\\"nuevaFormaPago()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Descripción</th>\\r\\n                            <th>Orden</th>\\r\\n                            <th>Tarjeta</th>\\r\\n                            <th>Cortesía</th>\\r\\n                            <th>Documento</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let fp of formasPago\\\" (click)=\\\"getFormaPago(fp._id)\\\">\\r\\n                            <td>{{fp.descripcion}}</td>\\r\\n                            <td>{{fp.orden}}</td>\\r\\n                            <td>{{fp.estarjeta ? 'Sí' : ''}}</td>\\r\\n                            <td>{{fp.escortesia ? 'Sí' : ''}}</td>\\r\\n                            <td>{{fp.condocumento ? 'Sí' : ''}}</td>\\r\\n                            <td>{{fp.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Emisores de tarjetas\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmET=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitEmisorTarjeta()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtNomET\\\" id=\\\"txtNomET\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\"\\r\\n                                        #nomET=\\\"ngModel\\\" [(ngModel)]=\\\"emisor.nombre\\\" placeholder=\\\"Nombre del emisor de la tarjeta\\\"\\r\\n                                        required [disabled]=\\\"emisor.debaja\\\" />                                    \\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmET.form.valid || emisor.debaja\\\" *ngIf=\\\"!emisor._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmET.form.valid || emisor.debaja\\\" *ngIf=\\\"emisor._id\\\"\\r\\n                                            (click)=\\\"updEmisorTarjeta()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"emisor.debaja\\\" *ngIf=\\\"emisor._id\\\" (click)=\\\"delEmisorTarjeta()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"emisor._id\\\" (click)=\\\"nuevoEmisorTarjeta()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>                            \\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let et of emisores\\\" (click)=\\\"getEmisorTarjeta(et._id)\\\">\\r\\n                            <td>{{et.nombre}}</td>                            \\r\\n                            <td>{{et.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Recordatorios al operador\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmBan=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitBanner()\\\" class=\\\"form-inline\\\">\\r\\n                                    <div class=\\\"col-auto\\\">\\r\\n                                        <div class=\\\"form-check mb-2 mb-sm-0\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input name=\\\"chkEsPermanente\\\" id=\\\"chkEsPermanente\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" #esPermanente=\\\"ngModel\\\" [(ngModel)]=\\\"ban.espermanente\\\"\\r\\n                                                    [disabled]=\\\"ban.debaja\\\" /> Es permanente\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <input name=\\\"txtBanFDel\\\" id=\\\"txtBanFDel\\\" type=\\\"date\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" \\r\\n                                        #banFDel=\\\"ngModel\\\" [(ngModel)]=\\\"ban.fechadel\\\" placeholder=\\\"Del\\\" *ngIf=\\\"!ban.espermanente\\\" [disabled]=\\\"ban.debaja\\\" /><br *ngIf=\\\"ban.espermanente\\\"/>\\r\\n                                    <input name=\\\"txtBanFAl\\\" id=\\\"txtBanFAl\\\" type=\\\"date\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" #banFAl=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"ban.fechaal\\\" placeholder=\\\"Al\\\" *ngIf=\\\"!ban.espermanente\\\" [disabled]=\\\"ban.debaja\\\" /><br *ngIf=\\\"!ban.espermanente\\\" />\\r\\n                                    <textarea name=\\\"txtBanStr\\\" id=\\\"txtBanStr\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" #banStr=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"ban.banner\\\" placeholder=\\\"Recordatorios...\\\" style=\\\"width: 75%\\\" rows=\\\"2\\\" maxlength=\\\"5000\\\" [disabled]=\\\"ban.debaja\\\">\\r\\n                                    </textarea>\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmBan.form.valid || ban.debaja\\\" *ngIf=\\\"!ban._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmBan.form.valid || ban.debaja\\\" *ngIf=\\\"ban._id\\\" (click)=\\\"updBanner()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"ban.debaja\\\" *ngIf=\\\"ban._id\\\" (click)=\\\"delBanner()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"ban._id\\\" (click)=\\\"nuevoBanner()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Creado</th>\\r\\n                            <th>Permanente</th>\\r\\n                            <th>Del</th>\\r\\n                            <th>Al</th>\\r\\n                            <th>Recordatorio</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let obj of bans\\\" (click)=\\\"getBanner(obj._id)\\\">\\r\\n                            <td>{{obj.fechacrea | date:'dd/MM/yyyy HH:mm:ss'}} por {{obj.idusrcrea.nombre}}</td>\\r\\n                            <td>{{obj.espermanente ? 'Sí': ''}}</td>\\r\\n                            <td>{{(obj.fechadel | date:'dd/MM/yyyy') || ''}}</td>\\r\\n                            <td>{{(obj.fechaal | date:'dd/MM/yyyy') || ''}}</td>\\r\\n                            <td>\\r\\n                                <p>\\r\\n                                    {{obj.banner}}\\r\\n                                </p>\\r\\n                            </td>\\r\\n                            <td>{{obj.debaja ? 'Sí': ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Vueltos\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmVlt=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitVuelto()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtDescV\\\" id=\\\"txtDescV\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\"\\r\\n                                        #descVuelto=\\\"ngModel\\\" [(ngModel)]=\\\"vlt.descripcion\\\" placeholder=\\\"Descripción del vuelto\\\" required [disabled]=\\\"vlt.debaja\\\" />\\r\\n                                    <input name=\\\"txtValV\\\" id=\\\"txtValV\\\" type=\\\"number\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 25%\\\"\\r\\n                                        #valVuelto=\\\"ngModel\\\" [(ngModel)]=\\\"vlt.valor\\\" placeholder=\\\"Valor del vuelto\\\" required [disabled]=\\\"vlt.debaja\\\"/>\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmVlt.form.valid || vlt.debaja\\\" *ngIf=\\\"!vlt._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmVlt.form.valid || vlt.debaja\\\" *ngIf=\\\"vlt._id\\\" (click)=\\\"updVuelto()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"vlt.debaja\\\" *ngIf=\\\"vlt._id\\\" (click)=\\\"delVuelto()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"vlt._id\\\" (click)=\\\"nuevoVuelto()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Descripción</th>\\r\\n                            <th class=\\\"text-right\\\">Valor</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let v of vlts\\\" (click)=\\\"getVuelto(v._id)\\\">\\r\\n                            <td>{{v.descripcion}}</td>\\r\\n                            <td class=\\\"text-right\\\">{{v.valor | number:'1.2-2'}}</td>\\r\\n                            <td>{{v.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Razones de cortesía\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmRCort=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRCort()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtRazon\\\" id=\\\"txtDescV\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\"\\r\\n                                        #razonCort=\\\"ngModel\\\" [(ngModel)]=\\\"rcort.razon\\\" placeholder=\\\"Razón de cortesía\\\" required [disabled]=\\\"rcort.debaja\\\" />\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRCort.form.valid || rcort.debaja\\\" *ngIf=\\\"!rcort._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRCort.form.valid || rcort.debaja\\\" *ngIf=\\\"rcort._id\\\" (click)=\\\"updRCort()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"rcort.debaja\\\" *ngIf=\\\"rcort._id\\\" (click)=\\\"delRCort()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"rcort._id\\\" (click)=\\\"nuevaRCort()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Razón de cortesía</th>                            \\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of rcorts\\\" (click)=\\\"getRCort(r._id)\\\">\\r\\n                            <td>{{r.razon}}</td>\\r\\n                            <td>{{r.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Tiempos de entrega\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmTE=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitTiempoEntrega()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtTE\\\" id=\\\"txtTE\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\"\\r\\n                                        #tiempoEnt=\\\"ngModel\\\" [(ngModel)]=\\\"tiempo.tiempo\\\" placeholder=\\\"Tiempo de entrega\\\" required [disabled]=\\\"tiempo.debaja\\\"\\r\\n                                    />\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmTE.form.valid || tiempo.debaja\\\" *ngIf=\\\"!tiempo._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmTE.form.valid || tiempo.debaja\\\" *ngIf=\\\"tiempo._id\\\" (click)=\\\"updTiempoEntrega()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"tiempo.debaja\\\" *ngIf=\\\"tiempo._id\\\" (click)=\\\"delTiempoEntrega()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"tiempo._id\\\" (click)=\\\"nuevoTiempoEntrega()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Tiempo de entrega</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let t of tiempos\\\" (click)=\\\"getTiempoEntrega(t._id)\\\">\\r\\n                            <td>{{t.tiempo}}</td>\\r\\n                            <td>{{t.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Roles de usuario\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"2\\\">\\r\\n                                <form #frmRol=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRol()\\\" class=\\\"form-inline\\\">\\r\\n                                    <input name=\\\"txtRol\\\" id=\\\"txtRol\\\" type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 50%\\\" #tiempoEnt=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"rol.descripcion\\\" placeholder=\\\"Rol de usuario\\\" required [disabled]=\\\"rol.debaja\\\"\\r\\n                                    />\\r\\n                                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRol.form.valid || rol.debaja\\\" *ngIf=\\\"!rol._id\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmRol.form.valid || rol.debaja\\\" *ngIf=\\\"rol._id\\\" (click)=\\\"updRol()\\\">\\r\\n                                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"rol.debaja\\\" *ngIf=\\\"rol._id\\\" (click)=\\\"delRol()\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"rol._id\\\" (click)=\\\"nuevoRol()\\\">\\r\\n                                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th>Rol de usuario</th>\\r\\n                            <th>De baja</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let rl of roles\\\" (click)=\\\"getRol(rl._id)\\\">\\r\\n                            <td>{{rl.descripcion}}</td>\\r\\n                            <td>{{rl.debaja ? 'Sí' : ''}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab title=\\\"Presupuesto de ventas\\\">\\r\\n        <ng-template ngbTabContent>\\r\\n            <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                <th colspan=\\\"2\\\">\\r\\n                    <form #frmPresV=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitPresVenta()\\\" class=\\\"form-inline\\\">\\r\\n                    <input name=\\\"txtMesPres\\\" id=\\\"txtMesPres\\\" type=\\\"number\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 20%\\\"\\r\\n                        #mesPresupuesto=\\\"ngModel\\\" [(ngModel)]=\\\"presventa.mes\\\" placeholder=\\\"Mes\\\" required [disabled]=\\\"presventa.debaja\\\" min=\\\"1\\\" max=\\\"12\\\"/>\\r\\n                    <input name=\\\"txtAnioPres\\\" id=\\\"txtAnioPres\\\" type=\\\"number\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 20%\\\"\\r\\n                        #anioPresupuesto=\\\"ngModel\\\" [(ngModel)]=\\\"presventa.anio\\\" placeholder=\\\"Año\\\" required [disabled]=\\\"presventa.debaja\\\" min=\\\"2017\\\"/>\\r\\n                    <input name=\\\"txtMontoPres\\\" id=\\\"txtMontoPres\\\" type=\\\"number\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0 form-control-sm\\\" style=\\\"width: 20%\\\"\\r\\n                        #montoPresupuesto=\\\"ngModel\\\" [(ngModel)]=\\\"presventa.presupuesto\\\" placeholder=\\\"Monto\\\" required [disabled]=\\\"presventa.debaja\\\"\\r\\n                    />\\r\\n                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmPresV.form.valid || presventa.debaja\\\" *ngIf=\\\"!presventa._id\\\">\\r\\n                        <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmPresV.form.valid || presventa.debaja\\\" *ngIf=\\\"presventa._id\\\" (click)=\\\"updPresVenta()\\\">\\r\\n                        <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" [disabled]=\\\"frmPresV.debaja\\\" *ngIf=\\\"presventa._id\\\" (click)=\\\"delPresVenta()\\\">\\r\\n                        <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf=\\\"presventa._id\\\" (click)=\\\"nuevoPresVenta()\\\">\\r\\n                        <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    </form>\\r\\n                </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                <th>Mes</th>\\r\\n                <th>Año</th>\\r\\n                <th>Monto</th>\\r\\n                <th>De baja</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let pvt of presventas\\\" (click)=\\\"getPresVenta(pvt._id)\\\">\\r\\n                <td>{{pvt.mes}}</td>\\r\\n                <td>{{pvt.anio | number: '1.0-0'}}</td>\\r\\n                <td>{{pvt.presupuesto | number: '1.2-2'}}</td>\\r\\n                <td>{{pvt.debaja ? 'Sí' : ''}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            </table>\\r\\n        </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n    </ngb-tabset>    \\r\\n</div>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/mntvarios/mntvarios.component.html\n// module id = ./src/app/components/mntvarios/mntvarios.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { TipoDireccion } from '../../models/tipodireccion';\r\nimport { Restaurante } from '../../models/restaurante';\r\nimport { Componente } from '../../models/componente';\r\nimport { FormaPago } from '../../models/formapago';\r\nimport { EmisorTarjeta } from '../../models/emisortarjeta';\r\nimport { Banner } from '../../models/banner';\r\nimport { Vuelto } from '../../models/vuelto';\r\nimport { RazonCortesia } from '../../models/razoncortesia';\r\nimport { TiempoEntrega } from '../../models/tiempoentrega';\r\nimport { RolUsuario } from '../../models/rolusuario';\r\nimport { PresupuestoVentas } from '../../models/presupuestoventas';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { TipoDireccionService } from '../../services/tipodireccion.service';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { RestauranteService } from '../../services/restaurante.service';\r\nimport { ComponenteService } from '../../services/componente.service';\r\nimport { FormaPagoService } from '../../services/formapago.service';\r\nimport { EmisorTarjetaService } from '../../services/emisortarjeta.service';\r\nimport { BannerService } from '../../services/banner.service';\r\nimport { VueltoService } from '../../services/vuelto.service';\r\nimport { RazonCortesiaService } from '../../services/razoncortesia.service';\r\nimport { TiempoEntregaService } from '../../services/tiempoentrega.service';\r\nimport { RolUsuarioService } from '../../services/rolusuario.service';\r\nimport { PresupuestoVentasService } from '../../services/presupuestoventas.service';\r\n\r\n// Otros\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-mnt-varios',\r\n    templateUrl: './mntvarios.component.html',\r\n    providers: [\r\n        LocalStorageService, TipoDireccionService, RestauranteService, ComponenteService, FormaPagoService, EmisorTarjetaService,\r\n        BannerService, VueltoService, RazonCortesiaService, TiempoEntregaService, RolUsuarioService, PresupuestoVentasService\r\n    ]\r\n})\r\nexport class MantenimientosVariosComponent implements OnInit {\r\n    private toasterService: ToasterService;\r\n    private token: String;\r\n    public tiposDireccion: TipoDireccion[];\r\n    public tipoDireccion: TipoDireccion;\r\n    public restaurantes: Restaurante[];\r\n    public restaurante: Restaurante;\r\n    public bans: Array<Banner>;\r\n    public ban: Banner;\r\n    public vlts: Array<Vuelto>;\r\n    public vlt: Vuelto;\r\n    public rcorts: Array<RazonCortesia>;\r\n    public rcort: RazonCortesia;\r\n    public tiempos: Array<TiempoEntrega>;\r\n    public tiempo: TiempoEntrega;\r\n    public roles: Array<RolUsuario>;\r\n    public rol: RolUsuario;\r\n    public presventas: Array<PresupuestoVentas>;\r\n    public presventa: PresupuestoVentas;\r\n    private compos: Array<Componente>;\r\n    private compo: Componente;\r\n    private formasPago: Array<FormaPago>;\r\n    private formaPago: FormaPago;\r\n    private emisor: EmisorTarjeta;\r\n    private emisores: Array<EmisorTarjeta>;\r\n    private usuario;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _ls: LocalStorageService,\r\n        private _tipoDireccionService: TipoDireccionService,\r\n        private _restauranteService: RestauranteService,\r\n        private _componenteService: ComponenteService,\r\n        private _formaPagoService: FormaPagoService,\r\n        private _emisorTarjetaService: EmisorTarjetaService,\r\n        private _bannerService: BannerService,\r\n        private _vueltoService: VueltoService,\r\n        private _razonCortesiaService: RazonCortesiaService,\r\n        private _tiempoEntregaService: TiempoEntregaService,\r\n        private _rolUsuarioService: RolUsuarioService,\r\n        private _presupuestoVentasService: PresupuestoVentasService,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.usuario = this._ls.get('restouchusr');\r\n        this.restaurante = new Restaurante(null, null, false);\r\n        this.tipoDireccion = new TipoDireccion(null, null, false);\r\n        this.compo = new Componente(null, null, false, false, false);\r\n        this.formaPago = new FormaPago(null, null, false, false, false, null, false);\r\n        this.emisor = new EmisorTarjeta(null, null, false);\r\n        this.ban = new Banner(null, null, false, null, null, null, null, null, null, false);\r\n        this.vlt = new Vuelto(null, null, null, false);\r\n        this.rcort = new RazonCortesia(null, null, false);\r\n        this.tiempo = new TiempoEntrega(null, null, false);\r\n        this.rol = new RolUsuario(null, null, false);\r\n        this.presventa = new PresupuestoVentas(null, null, null, null, false);\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({positionClass: 'toast-bottom-full-width'});\r\n\r\n    ngOnInit() {\r\n        this.loadRestaurantes();\r\n        this.loadTiposDireccion();\r\n        this.loadComponentes();\r\n        this.loadFormasPago();\r\n        this.loadEmisoresTarjeta();\r\n        this.loadBanners();\r\n        this.loadVueltos();\r\n        this.loadRazonesCortesia();\r\n        this.loadTiemposEntrega();\r\n        this.loadRolesUsuario();\r\n        this.loadPresupuestosVentas();\r\n    }\r\n\r\n    private loadRestaurantes() {\r\n        this._restauranteService.listaRestaurantes(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.restaurantes = response.lista;\r\n                }else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiposDireccion() {\r\n        this._tipoDireccionService.listaTiposDeDireccion(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.tiposDireccion = response.lista;\r\n                }else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadComponentes() {\r\n        this._componenteService.listaComponentes(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.compos = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadFormasPago() {\r\n        this._formaPagoService.listaFormasPago(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.formasPago = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadEmisoresTarjeta() {\r\n        this._emisorTarjetaService.listaEmisoresTarjeta(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.emisores = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadBanners() {\r\n        this._bannerService.listaBanners(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.bans = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadVueltos() {\r\n        this._vueltoService.listaVueltos(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.vlts = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRazonesCortesia() {\r\n        this._razonCortesiaService.listaRazonesCortesia(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.rcorts = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadTiemposEntrega() {\r\n        this._tiempoEntregaService.listaTiemposEntrega(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.tiempos = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRolesUsuario() {\r\n        this._rolUsuarioService.listaRolesUsuario(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.roles = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadPresupuestosVentas() {\r\n        this._presupuestoVentasService.listaPresupuestoVentas(this.token, '2').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.presventas = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    //#region Restaurantes\r\n\r\n    onSubmitRest() {\r\n        this._restauranteService.crear(this.restaurante, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadRestaurantes();\r\n                    this.restaurante = new Restaurante(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getRestaurante(idrestaurante) {\r\n        this._restauranteService.getRestaurante(idrestaurante, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.restaurante = response.entidad;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updRestaurante() {\r\n        this._restauranteService.modificar(this.restaurante, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.restaurante = response.entidad;\r\n                    this.loadRestaurantes();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delRestaurante() {\r\n        this._restauranteService.eliminar(this.restaurante._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.restaurante = new Restaurante(null, null, false);\r\n                    this.loadRestaurantes();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoRestaurante() {\r\n        this.restaurante = new Restaurante(null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Tipos de dirección\r\n\r\n    onSubmitTipoDireccion() {\r\n        this._tipoDireccionService.crear(this.tipoDireccion, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadTiposDireccion();\r\n                    this.tipoDireccion = new TipoDireccion(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getTipoDireccion(idtipodir) {\r\n        this._tipoDireccionService.getTipoDireccion(idtipodir, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tipoDireccion = response.entidad;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updTipoDireccion() {\r\n        this._tipoDireccionService.modificar(this.tipoDireccion, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tipoDireccion = response.entidad;\r\n                    this.loadTiposDireccion();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delTipoDireccion() {\r\n        this._tipoDireccionService.eliminar(this.tipoDireccion._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tipoDireccion = new TipoDireccion(null, null, false);\r\n                    this.loadTiposDireccion();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoTipoDireccion() {\r\n        this.tipoDireccion = new TipoDireccion(null, null, false);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Componentes\r\n    onSubmitComponente() {\r\n        this._componenteService.crear(this.compo, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadComponentes();\r\n                    this.compo = new Componente(null, null, false, false, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getComponente(idcompo) {\r\n        this._componenteService.getComponente(idcompo, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.compo = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updComponente() {\r\n        this._componenteService.modificar(this.compo, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.compo = response.entidad;\r\n                    this.loadComponentes();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delComponente() {\r\n        this._componenteService.eliminar(this.compo._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.compo = new Componente(null, null, false, false, false);\r\n                    this.loadComponentes();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoComponente() {\r\n        this.compo = new Componente(null, null, false, false, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Formas de pago\r\n    onSubmitFormaPago() {\r\n        this._formaPagoService.crear(this.formaPago, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadFormasPago();\r\n                    this.formaPago = new FormaPago(null, null, false, false, false, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getFormaPago(idfpago) {\r\n        this._formaPagoService.getFormaPago(idfpago, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.formaPago = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updFormaPago() {\r\n        this._formaPagoService.modificar(this.formaPago, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.formaPago = response.entidad;\r\n                    this.loadFormasPago();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delFormaPago() {\r\n        this._formaPagoService.eliminar(this.formaPago._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.formaPago = new FormaPago(null, null, false, false, false, null, false);\r\n                    this.loadFormasPago();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevaFormaPago() {\r\n        this.formaPago = new FormaPago(null, null, false, false, false, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Emisores de tarjeta\r\n    onSubmitEmisorTarjeta() {\r\n        this._emisorTarjetaService.crear(this.emisor, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadEmisoresTarjeta();\r\n                    this.emisor = new EmisorTarjeta(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getEmisorTarjeta(identidad) {\r\n        this._emisorTarjetaService.getEmisorTarjeta(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.emisor = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updEmisorTarjeta() {\r\n        this._emisorTarjetaService.modificar(this.emisor, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.emisor = response.entidad;\r\n                    this.loadEmisoresTarjeta();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delEmisorTarjeta() {\r\n        this._emisorTarjetaService.eliminar(this.emisor._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.emisor = new EmisorTarjeta(null, null, false);\r\n                    this.loadEmisoresTarjeta();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoEmisorTarjeta() {\r\n        this.emisor = new EmisorTarjeta(null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Banners\r\n    onSubmitBanner() {\r\n        this.ban.fechacrea = new Date();\r\n        this.ban.idusrcrea = this.usuario._id;\r\n        if (this.ban.espermanente) { this.ban.fechadel = null; this.ban.fechaal = null; }\r\n        this._bannerService.crear(this.ban, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadBanners();\r\n                    this.ban = new Banner(null, null, false, null, null, null, null, null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getBanner(identidad) {\r\n        this._bannerService.getBanner(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.ban = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updBanner() {\r\n        this.ban.fechamod = new Date();\r\n        this.ban.idusrmod = this.usuario._id;\r\n        if (this.ban.espermanente) { this.ban.fechadel = null; this.ban.fechaal = null; }\r\n        this._bannerService.modificar(this.ban, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.ban = response.entidad;\r\n                    this.loadBanners();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delBanner() {\r\n        this.ban.fechamod = new Date();\r\n        this.ban.idusrmod = this.usuario._id;\r\n        if (this.ban.espermanente) { this.ban.fechadel = null; this.ban.fechaal = null; }\r\n        this._bannerService.eliminar(this.ban._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.ban = new Banner(null, null, false, null, null, null, null, null, null, false);\r\n                    this.loadBanners();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoBanner() {\r\n        this.ban = new Banner(null, null, false, null, null, null, null, null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Vueltos\r\n    onSubmitVuelto() {\r\n        this._vueltoService.crear(this.vlt, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadVueltos();\r\n                    this.vlt = new Vuelto(null, null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getVuelto(identidad) {\r\n        this._vueltoService.getVuelto(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.vlt = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updVuelto() {\r\n        this._vueltoService.modificar(this.vlt, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.vlt = response.entidad;\r\n                    this.loadVueltos();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delVuelto() {\r\n        this._vueltoService.eliminar(this.vlt._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.vlt = new Vuelto(null, null, null, false);\r\n                    this.loadVueltos();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoVuelto() {\r\n        this.vlt = new Vuelto(null, null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Razones de cortesia\r\n    onSubmitRCort() {\r\n        this._razonCortesiaService.crear(this.rcort, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadRazonesCortesia();\r\n                    this.rcort = new RazonCortesia(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getRCort(identidad) {\r\n        this._razonCortesiaService.getRazonCortesia(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rcort = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updRCort() {\r\n        this._razonCortesiaService.modificar(this.rcort, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rcort = response.entidad;\r\n                    this.loadRazonesCortesia();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delRCort() {\r\n        this._razonCortesiaService.eliminar(this.rcort._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rcort = new RazonCortesia(null, null, false);\r\n                    this.loadRazonesCortesia();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevaRCort() {\r\n        this.rcort = new RazonCortesia(null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Tiempo de entrega\r\n    onSubmitTiempoEntrega() {\r\n        this._tiempoEntregaService.crear(this.tiempo, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadTiemposEntrega();\r\n                    this.tiempo = new TiempoEntrega(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getTiempoEntrega(identidad) {\r\n        this._tiempoEntregaService.getTiempoEntrega(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tiempo = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updTiempoEntrega() {\r\n        this._tiempoEntregaService.modificar(this.tiempo, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tiempo = response.entidad;\r\n                    this.loadTiemposEntrega();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delTiempoEntrega() {\r\n        this._tiempoEntregaService.eliminar(this.tiempo._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.tiempo = new TiempoEntrega(null, null, false);\r\n                    this.loadTiemposEntrega();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoTiempoEntrega() {\r\n        this.tiempo = new TiempoEntrega(null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Roles de usuario\r\n    onSubmitRol() {\r\n        this._rolUsuarioService.crear(this.rol, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadRolesUsuario();\r\n                    this.rol = new RolUsuario(null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getRol(identidad) {\r\n        this._rolUsuarioService.getRolUsuario(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rol = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updRol() {\r\n        this._rolUsuarioService.modificar(this.rol, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rol = response.entidad;\r\n                    this.loadRolesUsuario();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delRol() {\r\n        this._rolUsuarioService.eliminar(this.rol._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.rol = new RolUsuario(null, null, false);\r\n                    this.loadRolesUsuario();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoRol() {\r\n        this.rol = new RolUsuario(null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Presupuestos de venta\r\n    onSubmitPresVenta() {\r\n        this._presupuestoVentasService.crear(this.presventa, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.loadPresupuestosVentas();\r\n                    this.presventa = new PresupuestoVentas(null, null, null, null, false);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getPresVenta(identidad) {\r\n        this._presupuestoVentasService.getPresupuestoVenta(identidad, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.presventa = response.entidad;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updPresVenta() {\r\n        this._presupuestoVentasService.modificar(this.presventa, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.presventa = response.entidad;\r\n                    this.loadPresupuestosVentas();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delPresVenta() {\r\n        this._presupuestoVentasService.eliminar(this.presventa._id, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.presventa = new PresupuestoVentas(null, null, null, null, false);\r\n                    this.loadPresupuestosVentas();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoPresVenta() {\r\n        this.presventa = new PresupuestoVentas(null, null, null, null, false);\r\n    }\r\n    //#endregion\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/mntvarios/mntvarios.component.ts","module.exports = \"<style>\\r\\n.tree {\\r\\n  width: 300px;  \\r\\n}\\r\\n\\r\\n.node-content-wrapper {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: baseline;\\r\\n}\\r\\n\\r\\n.node-content-wrapper {\\r\\n  flex-grow: 1;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.pull-right {\\r\\n  position: absolute;\\r\\n  right: 10px;\\r\\n}    \\r\\n</style>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">Carta</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <ngb-tabset>\\r\\n                <ngb-tab title=\\\"Carta\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <form #frmMenuRest=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"txtDescripcion\\\">Descripción:</label>\\r\\n                                        <input name=\\\"txtDescripcion\\\" id=\\\"txtDescripcion\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Descripción\\\" #descrMnu=\\\"ngModel\\\"\\r\\n                                            [(ngModel)]=\\\"mnures.descripcion\\\" required/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"selPadre\\\">Padre:</label>\\r\\n                                        <select name=\\\"selPadre\\\" id=\\\"selPadre\\\" class=\\\"form-control\\\" #padreMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.idpadre\\\" (ngModelChange)=\\\"setMenuData($event)\\\">\\r\\n                                            <option *ngFor=\\\"let opc of listaCompletaMenu\\\" [value]=\\\"opc._id\\\">{{opc.descripcion}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"txtPrecio\\\">Precio:</label>\\r\\n                                        <input name=\\\"txtPrecio\\\" id=\\\"txtPrecio\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Precio (si aplica)\\\" #precioMnu=\\\"ngModel\\\"\\r\\n                                            [(ngModel)]=\\\"mnures.precio\\\" />\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"txtPrecioExtras\\\">Precio/extra:</label>\\r\\n                                        <input name=\\\"txtPrecioExtras\\\" id=\\\"txtPrecioExtras\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Precio por extra(si aplica)\\\" #precioExtMnu=\\\"ngModel\\\"\\r\\n                                            [(ngModel)]=\\\"mnures.precioextra\\\" />\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"chkConComp\\\">Con componentes:</label>\\r\\n                                        <input name=\\\"chkConComp\\\" id=\\\"chkConComp\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" #conCompMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.tienecomponentes\\\"\\r\\n                                        />\\r\\n                                    </div>\\r\\n                                </div>                                \\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"txtLimiCompo\\\">Máximo:</label>\\r\\n                                        <input name=\\\"txtLimiCompo\\\" id=\\\"txtLimiCompo\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Límite máximo de componentes...\\\"\\r\\n                                            #limiCompoMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.limitecomponentes\\\" [disabled]=\\\"!mnures.tienecomponentes\\\"/>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"chkConExt\\\">Con extras:</label>\\r\\n                                        <input name=\\\"chkConExt\\\" id=\\\"chkConExt\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" #conExtMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.tieneextras\\\"\\r\\n                                        />\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"chkPromo\\\">Promoción:</label>\\r\\n                                        <input name=\\\"chkPromo\\\" id=\\\"chkPromo\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" #promoMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.espromocion\\\"\\r\\n                                        />\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-1\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"chkDeBaja\\\">De baja:</label>\\r\\n                                        <input name=\\\"chkDeBaja\\\" id=\\\"chkDeBaja\\\" type=\\\"checkbox\\\" class=\\\"form-control\\\" #debajaMnu=\\\"ngModel\\\" [(ngModel)]=\\\"mnures.debaja\\\"\\r\\n                                        />\\r\\n                                    </div>\\r\\n                                </div>                                \\r\\n                            </div>\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!frmMenuRest.form.valid\\\" *ngIf=\\\"!mnures._id\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!frmMenuRest.form.valid\\\" *ngIf=\\\"mnures._id\\\" (click)=\\\"updMenuRest()\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!frmMenuRest.form.valid\\\" *ngIf=\\\"mnures._id && mnures.espromocion\\\" (click)=\\\"armarPromocion(modalPromo)\\\">\\r\\n                                    <span class=\\\"oi oi-cog\\\" title=\\\"Armar promoción\\\" aria-hidden=\\\"true\\\"></span>&nbsp;Armar promoción\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Componentes de {{mnures.descripcion}}\\\" *ngIf=\\\"mnures._id && mnures.tienecomponentes\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <hr/>\\r\\n                        <form #frmDetMenu=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitDetalle()\\\" class=\\\"form-inline\\\">\\r\\n                            <select name=\\\"selCompo\\\" id=\\\"selCompo\\\" class=\\\"form-control form-control-sm mb-2 mr-sm-2 mb-sm-0\\\" #compoMenu=\\\"ngModel\\\" style=\\\"width: 300px\\\"\\r\\n                                [(ngModel)]=\\\"menuRestComponente.idcomponente\\\" required>\\r\\n                                <option *ngFor=\\\"let cmp of lstComponentes\\\" [ngValue]=\\\"cmp._id\\\">{{cmp.descripcion}}</option>\\r\\n                            </select>\\r\\n                            <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmDetMenu.form.valid\\\">\\r\\n                                    <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </button>                                \\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <hr/>\\r\\n                        <table class=\\\"table table-sm table-striped table-hover\\\">\\r\\n                            <thead class=\\\"thead-light\\\">\\r\\n                                <tr>\\r\\n                                    <th>Componente</th>\\r\\n                                    <th>&nbsp;</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let det of lstMenuRestComponente\\\">\\r\\n                                    <td>{{det.idcomponente.descripcion}}</td>\\r\\n                                    <td>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"delDetalleMenu(det._id)\\\">\\r\\n                                            <span class=\\\"oi oi-trash\\\" title=\\\"Dar de baja\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n            </ngb-tabset>            \\r\\n        </div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div style=\\\"height: 700px; width: 400px;\\\">        \\r\\n        <tree-root [nodes]=\\\"arbolMenu\\\" [options]=\\\"options\\\">\\r\\n            <ng-template #treeNodeWrapperTemplate let-node let-index=\\\"index\\\">\\r\\n                <div class=\\\"node-wrapper\\\" [style.padding-left]=\\\"node.getNodePadding()\\\">\\r\\n                <tree-node-expander [node]=\\\"node\\\"></tree-node-expander>\\r\\n                <div class=\\\"node-content-wrapper\\\"\\r\\n                    [class.node-content-wrapper-active]=\\\"node.isActive\\\"\\r\\n                    [class.node-content-wrapper-focused]=\\\"node.isFocused\\\"\\r\\n                    (click)=\\\"node.mouseAction('click', $event)\\\"\\r\\n                    (dblclick)=\\\"node.mouseAction('dblClick', $event)\\\"\\r\\n                    (contextmenu)=\\\"node.mouseAction('contextMenu', $event)\\\"\\r\\n                    (treeDrop)=\\\"node.onDrop($event)\\\"\\r\\n                    [treeAllowDrop]=\\\"node.allowDrop\\\"\\r\\n                    [treeDrag]=\\\"node\\\"\\r\\n                    [treeDragEnabled]=\\\"node.allowDrag()\\\">\\r\\n                    <tree-node-content [node]=\\\"node\\\" [index]=\\\"index\\\"></tree-node-content>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"getItemMenu(node.id)\\\" style=\\\"font-size: 8pt !important;\\\">\\r\\n                        <span class=\\\"oi oi-pencil\\\" title=\\\"Editar {{ node.data.name }}\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </tree-root>\\r\\n    </div>    \\r\\n</div>\\r\\n<ng-template #modalPromo let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Armar promoción</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"height: 700px;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <h5 class=\\\"card-header\\\">Menú</h5>\\r\\n                    <div class=\\\"card-body\\\" style=\\\"padding: 0 !important;\\\">\\r\\n                        <ul class=\\\"list-group list-group-flush\\\">\\r\\n                            <li class=\\\"list-group-item\\\" *ngFor=\\\"let crt of carta\\\">\\r\\n                                <span style=\\\"padding-right: 1px !important; padding-top: 1px !important\\\" *ngFor=\\\"let btn of crt\\\">\\r\\n                                    <button class=\\\"btn btn-sm btn-outline-secondary\\\" style=\\\"font-weight: bold;\\\" (click)=\\\"loadCarta((btn.nivel + 1), btn._id, btn)\\\" *ngIf=\\\"!btn.espromocion\\\">\\r\\n                                        {{btn.descripcion}}\\r\\n                                    </button>\\r\\n                                </span>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">Promoción</div>\\r\\n                    <div class=\\\"card-body\\\" style=\\\"padding:0 !important;\\\">\\r\\n                        <small>\\r\\n                            <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let dp of mnures.itemspromo; let i = index\\\">\\r\\n                                        <td>{{dp.descripcion}}</td>\\r\\n                                        <td>\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" style=\\\"font-size: 8pt\\\" (click)=\\\"removeItemPromo(i)\\\">\\r\\n                                                <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </button>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('')\\\">Terminar y guardar</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/mnurest/mnurest.component.html\n// module id = ./src/app/components/mnurest/mnurest.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { MenuRestaurante } from '../../models/menurest';\r\nimport { MenuRestComponente } from '../../models/menurestcomponente';\r\nimport { Componente } from '../../models/componente';\r\nimport { DetalleComanda } from '../../models/detallecomanda';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { MenuRestauranteService } from '../../services/menurest.service';\r\nimport { MenuRestComponenteService } from '../../services/menurestcomponente.service';\r\nimport { ComponenteService } from '../../services/componente.service';\r\n\r\n// Otros\r\nimport {ToasterModule, ToasterService, ToasterConfig} from 'angular2-toaster';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n// import { TREE_ACTIONS, IActionMapping } from 'angular-tree-component';\r\n\r\n@Component({\r\n    selector: 'app-menu-rest',\r\n    templateUrl: './mnurest.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [MenuRestauranteService, LocalStorageService, MenuRestComponenteService, ComponenteService],\r\n    styles: [`.modal-size .modal-content { width: 950px }`]\r\n})\r\nexport class MenuRestauranteComponent implements OnInit {\r\n    private toasterService: ToasterService;\r\n    private token: string;\r\n    public options: object;\r\n    public mnures: MenuRestaurante;\r\n    public listaCompletaMenu: MenuRestaurante[];\r\n    public arbolMenu: any[];\r\n    public lstMenuRestComponente: Array<MenuRestComponente>;\r\n    public menuRestComponente: MenuRestComponente;\r\n    public lstComponentes: Array<Componente>;\r\n    public carta: Array<any>;\r\n    public detcom: DetalleComanda;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _menuRestauranteService: MenuRestauranteService,\r\n        private _ls: LocalStorageService,\r\n        private _menuRestComponenteService: MenuRestComponenteService,\r\n        private _componenteService: ComponenteService,\r\n        private modalService: NgbModal,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.mnures = new MenuRestaurante(null, null, null, 0, null, false, null, null, null, false, [], false);\r\n        this.menuRestComponente = new MenuRestComponente(null, null, null, false);\r\n        this.lstMenuRestComponente = [];\r\n        this.listaCompletaMenu = [];\r\n        this.lstComponentes = [];\r\n        this.listaCompletaMenu.push({\r\n            _id: null, descripcion: 'N/A', idpadre: null, nivel: null, precio: null, tienecomponentes: null,\r\n            precioextra: null, tieneextras: null, limitecomponentes: null, espromocion: false, itemspromo: [], debaja: null\r\n        });\r\n        this.options = {\r\n            useVirtualScroll: true,\r\n            nodeHeight: 50\r\n        };\r\n        this.carta = new Array();\r\n        this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false);\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({ positionClass: 'toast-bottom-full-width' });\r\n\r\n    private loadAllMenu() {\r\n        this._menuRestauranteService.listamenu(this.token).subscribe(\r\n            response => {\r\n                response.lista.forEach(element => {\r\n                    if (!element.tienecomponentes) {\r\n                        this.listaCompletaMenu.push(element);\r\n                    }\r\n                });\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadArbolMenu() {\r\n        this._menuRestauranteService.menurestaurante(this.token).subscribe(\r\n            response => {\r\n                this.arbolMenu = response.lista;\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadComponentes() {\r\n        this._componenteService.listaComponentes(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstComponentes = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllMenu();\r\n        this.loadArbolMenu();\r\n        this.loadComponentes();\r\n    }\r\n\r\n    setMenuData(idobj) {\r\n        this.listaCompletaMenu.forEach(item => {\r\n            if (item._id === idobj) {\r\n                this.mnures.nivel = item.nivel + 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this._menuRestauranteService.crear(this.mnures, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.mnures = new MenuRestaurante(null, null, null, 0, null, false, null, null, null, null, [], false);\r\n                    this.loadAllMenu();\r\n                    this.loadArbolMenu();\r\n                }else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getItemMenu(idmenu) {\r\n        // console.log(idmenu);\r\n        this._menuRestauranteService.getMenu(idmenu, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.mnures = response.entidad;\r\n                    this.loadDetalleMenu();\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updMenuRest() {\r\n        this._menuRestauranteService.modificar(this.mnures, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.mnures = response.entidad;\r\n                    this.loadAllMenu();\r\n                    this.loadArbolMenu();\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    //#region Detalle de componentes\r\n\r\n    private loadDetalleMenu() {\r\n        this._menuRestComponenteService.listaMenuRestComponente(this.token, this.mnures._id).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.lstMenuRestComponente = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    onSubmitDetalle() {\r\n        this.menuRestComponente.idmenurest = this.mnures._id;\r\n        this._menuRestComponenteService.crear(this.menuRestComponente, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.menuRestComponente = new MenuRestComponente(null, this.mnures._id, null, false);\r\n                    this.loadDetalleMenu();\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delDetalleMenu(idmenurest) {\r\n        this._menuRestComponenteService.eliminar(idmenurest, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.menuRestComponente = new MenuRestComponente(null, this.mnures._id, null, false);\r\n                    this.loadDetalleMenu();\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region Promociones\r\n    private cleanVars() {\r\n        this.detcom = new DetalleComanda(null, 1, null, null, '', [], [], null, null, null, false);\r\n        this.carta.splice(1);\r\n    }\r\n\r\n    agregaADetalleComanda(itemMenu: MenuRestaurante, detalleTemp: DetalleComanda) {\r\n        // console.log(itemMenu);\r\n        this.mnures.itemspromo.push(\r\n            new DetalleComanda(\r\n                itemMenu._id, 1, 0, null, detalleTemp.descripcion, [], [],\r\n                itemMenu.limitecomponentes, itemMenu.tieneextras, itemMenu.precioextra, false\r\n            )\r\n        );\r\n        this.cleanVars();\r\n        // console.log(this.mnures.itemspromo);\r\n    }\r\n\r\n    setDetTemp(nivel: number, itemMenu: MenuRestaurante) {\r\n        if (nivel > 0) {\r\n            if (this.detcom.descripcion !== '') { this.detcom.descripcion += '-'; }\r\n            this.detcom.descripcion += itemMenu.descripcion;\r\n        } else if (itemMenu) {\r\n            this.detcom.descripcion = itemMenu.descripcion;\r\n        }\r\n\r\n        if (itemMenu && itemMenu.precio) { this.detcom.precio = itemMenu.precio; }\r\n    }\r\n\r\n    loadCarta(nivel, idpadre = null, itemMenu: MenuRestaurante = null) {\r\n        this._menuRestauranteService.getCarta(this.token, nivel, idpadre).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    const tmp = [];\r\n                    response.lista.forEach(element => {\r\n                        tmp.push(element);\r\n                    });\r\n                    this.carta.splice(nivel);\r\n                    this.carta.push(tmp);\r\n                    this.setDetTemp(nivel, itemMenu);\r\n                } else {\r\n                    this.setDetTemp(nivel, itemMenu);\r\n                    this.agregaADetalleComanda(itemMenu, this.detcom);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    armarPromocion(modalPromo) {\r\n        this.loadCarta(0);\r\n        this.modalService.open(modalPromo, {windowClass : 'modal-size'}).result.then(\r\n            result => {\r\n                this.updMenuRest();\r\n            },\r\n            reason => { }\r\n        );\r\n    }\r\n\r\n    removeItemPromo(i) { \r\n        this.mnures.itemspromo.splice(i, 1); \r\n    }\r\n\r\n    //#endregion\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/mnurest/mnurest.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\"><h5>Reporte de ventas</h5></div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form #frmParams=\\\"ngForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtFDel\\\">Del:</label>\\r\\n                            <input name=\\\"txtFDel\\\" id=\\\"txtFDel\\\" type=\\\"date\\\" class=\\\"form-control form-control-sm\\\" #fDel=\\\"ngModel\\\" [(ngModel)]=\\\"params.fdel\\\" placeholder=\\\"Del\\\" required/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"txtFAl\\\">Al:</label>\\r\\n                            <input name=\\\"txtFAl\\\" id=\\\"txtFAl\\\" type=\\\"date\\\" class=\\\"form-control form-control-sm\\\" #fAl=\\\"ngModel\\\" [(ngModel)]=\\\"params.fal\\\" placeholder=\\\"Al\\\" required/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"selReporte\\\">Por:</label>\\r\\n                            <select name=\\\"selReporte\\\" id=\\\"selReporte\\\" class=\\\"form-control form-control-sm\\\" #tipoReporte=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"reporte\\\" required>\\r\\n                                <option value=\\\"SJRw1w88f\\\">Operador</option>\\r\\n                                <option value=\\\"r1ECnJdUG\\\">Restaurante</option>\\r\\n                                <option value=\\\"ryBWglOLf\\\">Tipo de pedido</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"btn-group btn-group-sm justify-content-end\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!frmParams.form.valid\\\" (click)=\\\"getReporte()\\\">\\r\\n                        <span class=\\\"oi oi-print\\\" title=\\\"Generar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>                    \\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-rpt-visor-pdf [content]=\\\"content\\\"></app-rpt-visor-pdf>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/reportes/ventas/ventasvarios.component.html\n// module id = ./src/app/components/reportes/ventas/ventasvarios.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../../services/global';\r\nimport { LocalStorageService } from '../../../services/localstorage.service';\r\nimport { JsReportService } from '../../../services/jsreport.service';\r\n\r\n// Otros\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-rpt-ventasvarios',\r\n    templateUrl: './ventasvarios.component.html',\r\n    providers: [LocalStorageService, JsReportService]\r\n})\r\nexport class VentasVariosComponent implements OnInit {\r\n    public params = {\r\n        fdel: moment().startOf('month').format('YYYY-MM-DD'),\r\n        fal: moment().endOf('month').format('YYYY-MM-DD'),\r\n        token: ''\r\n    };\r\n    public content = undefined;\r\n    public reporte = 'SJRw1w88f';\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _ls: LocalStorageService,\r\n        private _jsReport: JsReportService,\r\n        private _sanitizer: DomSanitizer\r\n    ) {\r\n        this.params.token = this._ls.get('restouchusr').token;\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    getReporte() {\r\n        this._jsReport.getPDFReport(this.reporte, this.params).then(res => { this.content = res; });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/reportes/ventas/ventasvarios.component.ts","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-rpt-visor-pdf',\r\n    template: `\r\n    <div class=\"row\">\r\n    <div class= \"col-12\">\r\n    <object [data]=\"content\" type=\"application/pdf\" style=\"width: 100%; height: 40em\"></object>\r\n    </div>\r\n    </div>`\r\n})\r\nexport class VisorPDFComponent {\r\n    @Input() content: any;\r\n\r\n    constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/reportes/visorpdf.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <ngb-tabset #t=\\\"ngbTabset\\\">\\r\\n        <ngb-tab id=\\\"tabListaUsuarios\\\" title=\\\"Lista de usuarios\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <table class=\\\"table table-striped table-hover table-sm\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th>Usuario</th>\\r\\n                            <th>Correo electrónico</th>                         \\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let usr of usuarios\\\" (click)=\\\"getUsuario(usr._id, t)\\\">\\r\\n                            <td>{{usr.nombre}}</td>\\r\\n                            <td>{{usr.usuario}}</td>\\r\\n                            <td>{{usr.correoe}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab id=\\\"tabUsuario\\\" title=\\\"Usuario\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n                <form #frmUsuario=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUsuario()\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"txtNomUsr\\\">Nombre:</label>\\r\\n                                <input name=\\\"txtNomUsr\\\" id=\\\"txtNomUsr\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #nombreUsr=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"usuario.nombre\\\" placeholder=\\\"Nombre completo\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"txtCorreoEUsr\\\">E-mail:</label>\\r\\n                                <input name=\\\"txtCorreoEUsr\\\" id=\\\"txtCorreoEUsr\\\" type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" #emailUsr=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"usuario.correoe\\\" placeholder=\\\"E-mail\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"txtUsuarioUsr\\\">Usuario:</label>\\r\\n                                <input name=\\\"txtUsuarioUsr\\\" id=\\\"txtUsuarioUsr\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" #usuarioUsr=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.usuario\\\" \\r\\n                                    placeholder=\\\"Usuario para la aplicación\\\" required/>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"txtPassUsr\\\">Contraseña:</label>\\r\\n                                <input name=\\\"txtPassUsr\\\" id=\\\"txtPassUsr\\\" type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" #passUsr=\\\"ngModel\\\" [(ngModel)]=\\\"contraseniaTemporal\\\"\\r\\n                                    placeholder=\\\"Contraseña de ingreso a la aplicación\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\"></div>\\r\\n                        <div class=\\\"col-4\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <table class=\\\"table table-light table-striped table-sm\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Roles</th>\\r\\n                                        <th>\\r\\n                                            <select #selRol class=\\\"form-control form-control-sm\\\" required>\\r\\n                                                <option *ngFor=\\\"let rl of roles\\\" value=\\\"{{rl._id}}\\\">{{rl.descripcion}}</option>\\r\\n                                            </select>                                            \\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"addRolUsr(selRol)\\\">\\r\\n                                                <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </button>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let ru of usuario.roles; let i = index\\\">\\r\\n                                        <td colspan=\\\"2\\\">{{ru.descripcion}}</td>\\r\\n                                        <td></td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                            <table class=\\\"table table-light table-striped table-sm\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Restaurantes</th>\\r\\n                                        <th>\\r\\n                                            <select #selRestaurante class=\\\"form-control form-control-sm\\\" required>\\r\\n                                                <option *ngFor=\\\"let rst of restaurantes\\\" value=\\\"{{rst._id}}\\\">{{rst.nombre}}</option>\\r\\n                                            </select>\\r\\n                                        </th>\\r\\n                                        <th>\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"addRestauranteUsr(selRestaurante)\\\">\\r\\n                                                <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </button>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let rest of usuario.restaurante; let i = index\\\">\\r\\n                                        <td colspan=\\\"2\\\">{{rest.nombre}}</td>\\r\\n                                        <td></td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmUsuario.form.valid\\\" *ngIf=\\\"!usuario._id\\\">\\r\\n                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" [disabled]=\\\"!frmUsuario.form.valid\\\" (click)=\\\"updUsuario()\\\" *ngIf=\\\"usuario._id\\\">\\r\\n                            <span class=\\\"oi oi-check\\\" title=\\\"Guardar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"delUsuario()\\\" *ngIf=\\\"usuario._id\\\">\\r\\n                            <span class=\\\"oi oi-trash\\\" title=\\\"Eliminar\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"nuevoUsuario()\\\" *ngIf=\\\"usuario._id\\\">\\r\\n                            <span class=\\\"oi oi-plus\\\" title=\\\"Nuevo\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n    </ngb-tabset>    \\r\\n</div>\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usuario/usuario.component.html\n// module id = ./src/app/components/usuario/usuario.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n// Modelos\r\nimport { Usuario } from '../../models/usuario';\r\nimport { RolUsuario } from '../../models/rolusuario';\r\nimport { Restaurante } from '../../models/restaurante';\r\n\r\n// Servicios\r\nimport { GLOBAL } from '../../services/global';\r\nimport { LocalStorageService } from '../../services/localstorage.service';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { RolUsuarioService } from '../../services/rolusuario.service';\r\nimport { RestauranteService } from '../../services/restaurante.service';\r\n\r\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster';\r\n// import * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-mnt-usuario',\r\n    templateUrl: './usuario.component.html',\r\n    providers: [UsuarioService, RolUsuarioService, RestauranteService]\r\n})\r\nexport class UsuarioComponent implements OnInit {\r\n    public usuarios: Array<Usuario>;\r\n    public usuario: Usuario;\r\n    public roles: Array<RolUsuario>;\r\n    public restaurantes: Array<Restaurante>;\r\n    public contraseniaTemporal: string;\r\n\r\n    private token: string;\r\n    private toasterService: ToasterService;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _ls: LocalStorageService,\r\n        private _usuarioService: UsuarioService,\r\n        private _rolUsuarioService: RolUsuarioService,\r\n        private _restauranteService: RestauranteService,\r\n        toasterService: ToasterService\r\n    ) {\r\n        this.toasterService = toasterService;\r\n        this.token = this._ls.get('restouchusr').token;\r\n        this.usuario = new Usuario(null, null, null, null, null, [], [], false);\r\n        this.contraseniaTemporal = null;\r\n        this.restaurantes = [];\r\n    }\r\n\r\n    public toasterconfig: ToasterConfig = new ToasterConfig({ positionClass: 'toast-bottom-full-width' });\r\n\r\n    ngOnInit() {\r\n        this.loadUsuarios();\r\n        this.loadRoles();\r\n        this.loadRestaurantes();\r\n    }\r\n\r\n    private loadUsuarios() {\r\n        this._usuarioService.listaUsuarios(this.token).subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.usuarios = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRoles() {\r\n        this._rolUsuarioService.listaRolesUsuario(this.token, '0').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.roles = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadRestaurantes() {\r\n        this._restauranteService.listaRestaurantes(this.token, '0').subscribe(\r\n            response => {\r\n                if (response.lista) {\r\n                    this.restaurantes = response.lista;\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    getUsuario(idusuario, t) {\r\n        this._usuarioService.getUsuario(idusuario, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.usuario = response.entidad;\r\n                    this.loadRoles();\r\n                    t.select('tabUsuario');\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    onSubmitUsuario() {\r\n        if (this.contraseniaTemporal && this.contraseniaTemporal.trim() !== '') { this.usuario.contrasenia = this.contraseniaTemporal; }\r\n        this._usuarioService.crear(this.usuario, this.token).subscribe(\r\n            response => {\r\n                if (response.entidad) {\r\n                    this.usuario = response.entidad;\r\n                    this.loadUsuarios();\r\n                    this.loadRoles();\r\n                    this.loadRestaurantes();\r\n                    this.toasterService.pop('success', 'Creación', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    updUsuario() {\r\n        if (this.contraseniaTemporal && this.contraseniaTemporal.trim() !== '') { this.usuario.contrasenia = this.contraseniaTemporal; }\r\n        this._usuarioService.modificar(this.usuario, this.token).subscribe(\r\n            response => {\r\n                if (response.usr) {\r\n                    this.usuario = response.usr;\r\n                    this.loadUsuarios();\r\n                    this.loadRoles();\r\n                    this.loadRestaurantes();\r\n                    this.toasterService.pop('success', 'Actualización', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    delUsuario() {\r\n        this._usuarioService.eliminar(this.usuario._id, this.token).subscribe(\r\n            response => {\r\n                if (response.usr) {\r\n                    this.usuario = new Usuario(null, null, null, null, null, [], [], false);\r\n                    this.loadUsuarios();\r\n                    this.loadRoles();\r\n                    this.loadRestaurantes();\r\n                    this.toasterService.pop('success', 'Dado de baja', response.mensaje);\r\n                } else {\r\n                    this.toasterService.pop('error', 'Error', 'Error: ' + response.mensaje);\r\n                }\r\n            },\r\n            error => {\r\n                const respuesta = JSON.parse(error._body);\r\n                this.toasterService.pop('error', 'Error', 'Error: ' + respuesta.mensaje);\r\n            }\r\n        );\r\n    }\r\n\r\n    nuevoUsuario() {\r\n        this.usuario = new Usuario(null, null, null, null, null, [], [], false);\r\n    }\r\n\r\n    addRolUsr(obj) {\r\n        // console.log(obj.value + ' - ' + obj.options[obj.selectedIndex].innerText);\r\n        if (!this.usuario.roles) { this.usuario.roles = []; }\r\n        this.usuario.roles.push(\r\n            new RolUsuario(obj.value, obj.options[obj.selectedIndex].innerText, false)\r\n        );\r\n    }\r\n\r\n    addRestauranteUsr(obj) {\r\n        if (!this.usuario.restaurante) { this.usuario.restaurante = []; }\r\n        this.usuario.restaurante.push(\r\n            new Restaurante(obj.value, obj.options[obj.selectedIndex].innerText, false)\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usuario/usuario.component.ts","export class Banner {\r\n    constructor(\r\n        public _id: string,\r\n        public banner: string,\r\n        public espermanente: boolean,\r\n        public fechadel: Date,\r\n        public fechaal: Date,\r\n        public fechacrea: Date,\r\n        public idusrcrea: string,\r\n        public fechamod: Date,\r\n        public idusrmod: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/banner.ts","export class BitacoraEstatus {\r\n    constructor(\r\n        public idestatuscomanda: string,\r\n        public estatus: string,\r\n        public fecha: Date\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/bitacoraestatus.ts","import { NotasCliente } from './notascliente';\r\nimport { RangoEdades } from './rangoedades';\r\n\r\nexport class Cliente {\r\n    constructor(\r\n        public _id: string,\r\n        public nombre: string,\r\n        public notascliente: Array<NotasCliente>,\r\n        public cumpleanios: Date,\r\n        public correoelectronico: string,\r\n        public tienehijos: Boolean,\r\n        public rangoedadeshijos: Array<RangoEdades>,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/cliente.ts","import { DetalleComanda } from './detallecomanda';\r\nimport { DetalleCobroComanda } from './detcobrocomanda';\r\nimport { DetalleFacturarA } from './detfacturara';\r\nimport { BitacoraEstatus } from './bitacoraestatus';\r\n\r\nexport class Comanda {\r\n    constructor(\r\n        public _id: string,\r\n        public idcliente: string,\r\n        public idtelefonocliente: string,\r\n        public iddireccioncliente: string,\r\n        public iddatosfacturacliente: string,\r\n        public fecha: Date,\r\n        public idtipocomanda: string,\r\n        public idusuario: string,\r\n        public fechainitoma: Date,\r\n        public fechafintoma: Date,\r\n        public idestatuscomanda: string,\r\n        public notas: string,\r\n        public cantidaditems: number,\r\n        public totalcomanda: number,\r\n        public detallecomanda: Array<DetalleComanda>,\r\n        public detcobrocomanda: Array<DetalleCobroComanda>,\r\n        public detfacturara: Array<DetalleFacturarA>,\r\n        public idtiempoentrega: string,\r\n        public idrestaurante: string,\r\n        public idmotorista: string,\r\n        public imgpago: Array<string>,\r\n        public bitacoraestatus: Array<BitacoraEstatus>,\r\n        public tracking: number,\r\n        public noorden: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/comanda.ts","export class Componente {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public comoextra: boolean,\r\n        public secobra: boolean,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/componente.ts","export class DatoFacturaCliente {\r\n    constructor(\r\n        public _id: string,\r\n        public idcliente: string,\r\n        public nit: string,\r\n        public nombre: string,\r\n        public direccion: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/datosfactcliente.ts","import { DetalleComponenteDetalleComanda } from './detcompdetcomanda';\r\nimport { ExtrasNotasComanda } from './extrasnotascomanda';\r\n\r\nexport class DetalleComanda {\r\n    constructor(\r\n        public idmenurest: string,\r\n        public cantidad: number,\r\n        public precio: number,\r\n        public notas: string,\r\n        public descripcion: string,\r\n        public componentes: Array<DetalleComponenteDetalleComanda>,\r\n        public extrasnotas: Array<ExtrasNotasComanda>,\r\n        public limitecomponentes: number,\r\n        public tieneextras: boolean,\r\n        public precioextra: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/detallecomanda.ts","export class DetalleCobro {\r\n    constructor(\r\n        public monto: number,\r\n        public porcentaje: number,\r\n        public vueltopara: number,\r\n        public vuelto: number,\r\n        public idemisor: string,\r\n        public estarjeta: boolean,\r\n        public numero: string,\r\n        public mesvence: number,\r\n        public aniovence: number,\r\n        public nombretarjeta: string,\r\n        public aprobadopor: string,\r\n        public condocumento: boolean,\r\n        public numdocumento: string,\r\n        public escortesia: boolean,\r\n        public razoncortesia: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/detcobro.ts","import { DetalleCobro } from './detcobro';\r\n\r\nexport class DetalleCobroComanda {\r\n    constructor(\r\n        public idformapago: string,\r\n        public descripcion: string,\r\n        public estarjeta: boolean,\r\n        public detcobro: Array<DetalleCobro>,\r\n        public condocumento: boolean,\r\n        public escortesia: boolean,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/detcobrocomanda.ts","import { ExtrasNotasComanda } from './extrasnotascomanda';\r\n\r\nexport class DetalleComponenteDetalleComanda {\r\n    constructor(\r\n        public idcomponente: string,\r\n        public descripcion: string,\r\n        public extrasnotas: Array<ExtrasNotasComanda>,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/detcompdetcomanda.ts","export class DetalleFacturarA {\r\n    constructor(\r\n        public nombre: string,\r\n        public nit: string,\r\n        public direccion: string,\r\n        public monto: number\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/detfacturara.ts","export class DireccionCliente {\r\n    constructor(\r\n        public _id: string,\r\n        public idcliente: string,\r\n        public idrestaurante: string,\r\n        public idtipodireccion: string,\r\n        public direccion: string,\r\n        public zona: number,\r\n        public colonia: string,\r\n        public codigoacceso: string,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/direccioncliente.ts","export class EmisorTarjeta {\r\n    constructor(\r\n        public _id: string,\r\n        public nombre: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/emisortarjeta.ts","export class ExtrasNotasComanda {\r\n    constructor (\r\n        public idcomponente: string,\r\n        public esextra: boolean,\r\n        public precio: number,\r\n        public notas: string,\r\n        public descripcion: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/extrasnotascomanda.ts","export class FormaPago {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public estarjeta: boolean,\r\n        public escortesia: boolean,\r\n        public condocumento: boolean,\r\n        public orden: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/formapago.ts","import { DetalleComanda } from './detallecomanda';\r\n\r\nexport class MenuRestaurante {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public idpadre: string,\r\n        public nivel: number,\r\n        public precio: number,\r\n        public tienecomponentes: boolean,\r\n        public precioextra: number,\r\n        public tieneextras: boolean,\r\n        public limitecomponentes: number,\r\n        public espromocion: boolean,\r\n        public itemspromo: Array<DetalleComanda>,\r\n        public debaja: boolean,\r\n        public descripcionfull?: string\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/menurest.ts","export class MenuRestComponente {\r\n    constructor(\r\n        public _id: string,\r\n        public idmenurest: string,\r\n        public idcomponente: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/menurestcomponente.ts","export class NotasCliente {\r\n    constructor(\r\n        public fecha: Date,\r\n        public notas: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/notascliente.ts","export class PresupuestoVentas {\r\n    constructor(\r\n        public _id: string,\r\n        public mes: number,\r\n        public anio: number,\r\n        public presupuesto: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/presupuestoventas.ts","export class RangoEdades {\r\n    constructor(\r\n        public de: number,\r\n        public a: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/rangoedades.ts","export class RazonCortesia {\r\n    constructor(\r\n        public _id: string,\r\n        public razon: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/razoncortesia.ts","export class Restaurante {\r\n    constructor(\r\n        public _id: string,\r\n        public nombre: string,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/restaurante.ts","export class RolUsuario {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/rolusuario.ts","export class TelefonoCliente {\r\n    constructor(\r\n        public _id: string,\r\n        public idcliente: string,\r\n        public telefono: string,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/telefonocliente.ts","export class TiempoEntrega {\r\n    constructor(\r\n        public _id: string,\r\n        public tiempo: string,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/tiempoentrega.ts","export class TipoDireccion {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/tipodireccion.ts","import { RolUsuario } from './rolusuario';\r\nimport { Restaurante } from './restaurante';\r\n\r\nexport class Usuario {\r\n    constructor(\r\n        public _id: string,\r\n        public nombre: string,\r\n        public usuario: string,\r\n        public correoe: string,\r\n        public contrasenia: string,\r\n        public roles: Array<RolUsuario>,\r\n        public restaurante: Array<Restaurante>,\r\n        public debaja: boolean\r\n    ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/usuario.ts","export class Vuelto {\r\n    constructor(\r\n        public _id: string,\r\n        public descripcion: string,\r\n        public valor: number,\r\n        public debaja: boolean\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/vuelto.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filterList',\r\n    pure: false\r\n})\r\nexport class FilterListPipe implements PipeTransform {\r\n    transform(items: any[], campo: String, filter: String): any {\r\n        if (!items || !filter) { return items; }\r\n        // filter items array, items which match and return true will be kept, false will be filtered out\r\n        return items.filter(item => {\r\n            let pertenece = false;\r\n            eval('pertenece = item.' + campo + '.toLowerCase().indexOf(\"' + filter.toLocaleLowerCase() + '\") !== -1;');\r\n            return pertenece;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/filterlist.pipe.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class BannerService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'ban/'; }\r\n\r\n    listaBanners(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstban/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    listaBannersFecha(token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstbanfec', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getBanner(idbanner, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getban/' + idbanner, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/banner.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\nimport { Cliente } from '../models/cliente';\r\nimport { TelefonoCliente } from '../models/telefonocliente';\r\n\r\n@Injectable()\r\nexport class ClienteService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url + 'cli/';\r\n    }\r\n\r\n    listaClientes(token, pagina?: number, buscar?: String) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(\r\n            this.url + 'lstclientes' + (pagina ? ('/' + pagina) : '/1') + (buscar ? ('/' + buscar) : ''),\r\n            { headers: headers }).map(res => res.json()\r\n        );\r\n    }\r\n\r\n    crear(clienteNuevo, token) {\r\n        const params = JSON.stringify(clienteNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async crearAsync(clienteNuevo, token) {\r\n        const params = JSON.stringify(clienteNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response = await this._http.post(this.url + 'c', params, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.entidad) {\r\n                return null;\r\n            }\r\n            return res.entidad;\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    crearPaqueteCliente(cliente, telefono, direccion, factura, token) {\r\n        const params = {\r\n            cliente: cliente,\r\n            telefono: telefono,\r\n            direccion: direccion,\r\n            factura: factura\r\n        };\r\n\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cp', JSON.stringify(params), { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async crearPaqueteClienteAsync(cliente, telefono, direccion, factura, token): Promise<any> {\r\n        const params = {\r\n            cliente: cliente,\r\n            telefono: telefono,\r\n            direccion: direccion,\r\n            factura: factura\r\n        };\r\n\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response = await this._http.post(this.url + 'cp', JSON.stringify(params), { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.entidad) {\r\n                return null;\r\n            }\r\n            return res.entidad;\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    modificar(cliente, token) {\r\n        const params = JSON.stringify(cliente);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + cliente._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(cliente, token) {\r\n        const params = JSON.stringify(cliente);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'd/' + cliente._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getClienteById(idcliente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getcliente/' + idcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getClienteByTelefono(telcliente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getclibytel/' + telcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async getCliByTelAsync(telcliente: string, token: string): Promise<Cliente> {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response = await this._http.get(this.url + 'getclibytel/' + telcliente, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.lista || res.lista.length === 0) {\r\n                return null;\r\n            }\r\n            return res.lista[0];\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    // Teléfonos del cliente\r\n    crearTelefono(telefonoNuevo, token) {\r\n        const params = JSON.stringify(telefonoNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'ctel', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getTelefonosCliente(idcliente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettelscli/' + idcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getTelefonoClienteNumtel(idcliente, telefono, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettelbyidclinum/' + idcliente + '/' + telefono, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async getTelefonoClienteNumtelAsync(idcliente, telefono, token): Promise<TelefonoCliente> {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response =\r\n            await this._http.get(this.url + 'gettelbyidclinum/' + idcliente + '/' + telefono, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.entidad) {\r\n                return null;\r\n            }\r\n            return res.entidad;\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    getTelefonoCliente(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettelcli/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarTelefonoCliente(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'utel/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarTelefonoCliente(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'dtel/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    // Direcciones del cliente\r\n    crearDireccion(direccionNueva, token) {\r\n        const params = JSON.stringify(direccionNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cdir', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDireccionesCliente(idcliente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdirscli/' + idcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDireccionCliente(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdircli/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarDireccionCliente(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'udir/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarDireccionCliente(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'ddir/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    // Datos de facturación del cliente\r\n    crearDatoFacturaCliente(datofactNuevo, token) {\r\n        const params = JSON.stringify(datofactNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cdfact', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDatosFacturaCliente(idcliente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdfact/' + idcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDatoFacturaCliente(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdf/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarDatoFacturaCliente(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'udfact/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarDatoFacturaCliente(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'ddfact/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/cliente.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/interval';\r\n\r\n@Injectable()\r\nexport class ClockService {\r\n\r\n    private clock: Observable<Date>;\r\n\r\n    constructor() {\r\n        this.clock = Observable.interval(1000).map(tick => new Date()).share();\r\n    }\r\n\r\n    getClock(): Observable<Date> {\r\n        return this.clock;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/clock.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\nimport { Comanda } from '../models/comanda';\r\n\r\n@Injectable()\r\nexport class ComandaService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'com/'; }\r\n\r\n    // Comanda\r\n    listaComandas(token, idestatuscomanda = '', fdelstr = '', falstr = '') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(\r\n            this.url + 'lstcomandas/' + fdelstr + '/' + falstr + '/' + idestatuscomanda, { headers: headers }).map(res => res.json()\r\n        );\r\n    }\r\n\r\n    listaComandasPost(token, parametros) {\r\n        const params = JSON.stringify(parametros);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'lstcomandas', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getComanda(idcomanda, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getcomanda/' + idcomanda, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async getComandaByTrackingNo(trackingNo: number, token: string): Promise<any> {\r\n        const headers = new Headers({ 'Content-Type': 'application/json', 'Authorization': token });\r\n\r\n        try {\r\n            const response = await this._http.get(this.url + 'getbytrackno/' + trackingNo, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.lista || res.lista.length === 0) {\r\n                return null;\r\n            }\r\n            return res.lista[0];\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    histoComandasCliente(token, idcliente) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstcomcli/' + idcliente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crearComanda(comandaNueva, token) {\r\n        const params = JSON.stringify(comandaNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async crearComandaAsync(comandaNueva, token): Promise<Comanda> {\r\n        const params = JSON.stringify(comandaNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response = await this._http.post(this.url + 'c', params, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.entidad) {\r\n                return null;\r\n            }\r\n            return res.entidad;\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n    }\r\n\r\n    modificarComanda(comandaObj, token) {\r\n        const params = JSON.stringify(comandaObj);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + comandaObj._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarComanda(idcomanda, token) {\r\n        const params = JSON.stringify({ debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + idcomanda, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    contadorPorEstatus(token, fdel = '', fal = '') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'contporest/' + fdel + '/' + fal, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    cambiarEstatus(idcomanda: string, estatus: string) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n\r\n        return this._http.get(this.url + estatus + '/' + idcomanda, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    // Detalle comanda\r\n    listaDetalleComanda(token, idcomanda) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstdetcomanda/' + idcomanda, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDetalleComanda(token, iddetcom) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdetcomanda/' + iddetcom, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crearDetalleComanda(detComNvo, token) {\r\n        const params = JSON.stringify(detComNvo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cd', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarDetalleComanda(detComObj, token) {\r\n        const params = JSON.stringify(detComObj);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'ud/' + detComObj._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarDetalleComanda(iddetcom, token) {\r\n        const params = JSON.stringify({ debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'dd/' + iddetcom, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    // Detalle de componentes de comanda\r\n    listaDetalleComponentes(token, identidad) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstdetcompdetcom/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDetalleComponente(token, identidad) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdetcompdetcom/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crearDetalleComponente(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cdc', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarDetalleComponente(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'udc/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarDetalleComponente(identidad, token) {\r\n        const params = JSON.stringify({ debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'ddc/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    // Extras/notas de comanda\r\n    listaExtrasNotas(token, iddetcom = null, iddetcompdetcom = null) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstextnot/' + iddetcom + '/' + iddetcompdetcom, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getExtraNota(token, identidad) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getextnot/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crearExtraNota(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'cde', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificarExtraNota(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'ude/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminarExtraNota(identidad, token) {\r\n        const params = JSON.stringify({ debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'dde/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/comanda.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class ComponenteService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'compo/'; }\r\n\r\n    listaComponentes(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstcomponentes/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    listaExtras(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstextras/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getComponente(idcomponente, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getcomponente/' + idcomponente, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(compoNuevo, token) {\r\n        const params = JSON.stringify(compoNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(compo, token) {\r\n        const params = JSON.stringify(compo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + compo._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(idcompo, token) {\r\n        const params = JSON.stringify({ _id: idcompo, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + idcompo, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/componente.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\nimport { MenuRestaurante } from '../models/menurest';\r\n\r\n@Injectable()\r\nexport class DiccionarioFoxService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'diccf/'; }\r\n\r\n    listaDiccionarioFox(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstdiccf/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getDiccionarioFox(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getdiccf/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async getProductoMint(idmint: number, token: string): Promise<MenuRestaurante> {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        try {\r\n            const response = await this._http.get(this.url + 'getprodidmint/' + idmint, { headers: headers }).toPromise();\r\n            const res = response.json();\r\n            if (!res.entidad) {\r\n                return null;\r\n            }\r\n            return res.entidad;\r\n        } catch (error) {\r\n            await console.log('ERROR: ', error);\r\n        }\r\n\r\n        // return this._http.get(this.url + 'getprodidmint/' + idmint, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/diccionariofox.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class EmisorTarjetaService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'et/'; }\r\n\r\n    listaEmisoresTarjeta(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstet/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getEmisorTarjeta(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getet/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/emisortarjeta.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class FormaPagoService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'fp/'; }\r\n\r\n    listaFormasPago(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstfp/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getFormaPago(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getfp/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/formapago.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class GoogleApiService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'gapi/'; }\r\n\r\n    getURLAuth(token: string = '') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'googleurl', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getToken(codigo: string = '', token: string = '') {\r\n        const params = JSON.stringify({code: codigo});\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'googletoken', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    updGoogleToken(token: string = '') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'updgtoken', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    print(trackingNo: number, token: string = '') {\r\n        const params = JSON.stringify({ tracking: trackingNo });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'print', params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/gapi.service.ts","export let GLOBAL = {\r\n    url: 'http://' + window.location.hostname + ':3789/api/'\r\n    // url: 'http://' + window.location.hostname + ':4200/api/'\r\n};\r\n\r\nexport enum EstatusComanda {\r\n    RecibidaRestaurante = 'confcom',\r\n    ConfirmadaEncargado = 'confcomenc',\r\n    CobroAprobado = 'comaprob',\r\n    CobroRechazado = 'comrech',\r\n    Produccion = 'comprod',\r\n    EnCamino = 'comencamino',\r\n    Entregada = 'comentregada',\r\n    ConError = 'comerror'\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/global.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class JsReportService {\r\n    public url: string;\r\n\r\n    constructor(private _http: HttpClient, private _sanitizer: DomSanitizer) {\r\n        this.url = 'http://' + window.location.hostname + ':5489/api/report'; // servidor de produccion\r\n    }\r\n\r\n    getPDFReport(shortid: string, obj) {\r\n        const props = { 'template': { 'shortid': shortid }, 'data': obj };\r\n        const headers = new Headers({ 'Content-Type': 'application/json' });\r\n        return this._http.post(this.url, props, { responseType: 'arraybuffer' }).toPromise().then(res => {\r\n            const file = new Blob([res], { type: 'application/pdf' });\r\n            const fileURL = URL.createObjectURL(file);\r\n            return this._sanitizer.bypassSecurityTrustResourceUrl(fileURL);\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/jsreport.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n\r\n    constructor() {    }\r\n\r\n    set(indice, objeto, esObjeto = true) {\r\n        if (esObjeto) {\r\n            localStorage.setItem(indice, JSON.stringify(objeto));\r\n        }else {\r\n            localStorage.setItem(indice, objeto);\r\n        }\r\n    }\r\n\r\n    get(indice, esObjeto = true) {\r\n        if (esObjeto) {\r\n            return JSON.parse(localStorage.getItem(indice));\r\n        }else {\r\n            return localStorage.getItem(indice);\r\n        }\r\n    }\r\n\r\n    clear(indice) { localStorage.removeItem(indice); }\r\n\r\n    clearAll() { localStorage.clear(); }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/localstorage.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class MenuService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'mnu/'; }\r\n\r\n    getMenuUsuario(idusuario, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstmnuusr/' + idusuario, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/menu.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class MenuRestauranteService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'mnurest/'; }\r\n\r\n    menurestaurante(token: string, cuales: string = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstmenurest/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    listamenu(token: string, cuales: number = 0) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstallmenu/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getCarta(token: string, nivel: number, idpadre: string = null) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getcarta/' + nivel + (!idpadre ? '' : ('/' + idpadre)), { headers: headers })\r\n        .map(res => res.json());\r\n    }\r\n\r\n    crear(mnurestNvo, token: string) {\r\n        const params = JSON.stringify(mnurestNvo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(mnurestUpd, token: string) {\r\n        const params = JSON.stringify(mnurestUpd);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + mnurestUpd._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getMenu(idmenu, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getmenu/' + idmenu, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/menurest.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class MenuRestComponenteService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'mnurstcompo/'; }\r\n\r\n    listaMenuRestComponente(token, idmenurest) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstmnurstcompo/' + idmenurest, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getMenuRestComponente(idmenurestcompo, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getmnurstcompo/' + idmenurestcompo, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/menurestcomponente.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\nimport { ComandaService } from './comanda.service';\r\nimport { DiccionarioFoxService } from './diccionariofox.service';\r\nimport { ClienteService } from './cliente.service';\r\nimport { LocalStorageService } from './localstorage.service';\r\n\r\nimport { Comanda } from '../models/comanda';\r\nimport { DetalleComanda } from '../models/detallecomanda';\r\nimport { BitacoraEstatus } from '../models/bitacoraestatus';\r\nimport { Cliente } from '../models/cliente';\r\nimport { TelefonoCliente } from '../models/telefonocliente';\r\nimport { DireccionCliente } from '../models/direccioncliente';\r\nimport { DatoFacturaCliente } from '../models/datosfactcliente';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class MintService {\r\n    private url: string;\r\n    private datosEjemplo: string;\r\n    private uid: string;\r\n    private token: string;\r\n\r\n    private getTestData() {\r\n        return `[\r\n{\r\n      \"cliente\":{\r\n         \"apellidos\":\"Ejemplo\",\r\n         \"correoElectronico\":\"ejemplo@ejemplo.com\",\r\n         \"idCliente\":123,\r\n         \"nit\":\"C/F\",\r\n         \"nombres\":\"Ejemplo\",\r\n         \"razonSocial\":\"Ejemplo S.A.\",\r\n         \"telefono\":\"12340000\"\r\n      },\r\n      \"codigoAuorizacionCashless\":79147,\r\n      \"detalle\":[\r\n         {\r\n            \"cantidad\":1,\r\n            \"descripcion\":\"Producto 1\",\r\n            \"idOrdenDetalle\":76485,\r\n            \"idProducto\":200,\r\n            \"precio\":25.00,\r\n            \"total\":25.00\r\n         },\r\n         {\r\n            \"cantidad\":1,\r\n            \"descripcion\":\"Producto 2\",\r\n            \"idOrdenDetalle\":76486,\r\n            \"idProducto\":230,\r\n            \"precio\":25.00,\r\n            \"total\":25.00\r\n         }\r\n      ],\r\n      \"fecha\":\"2018-01-26T15:24:40.17\",\r\n      \"idComercio\":24,\r\n      \"idOrden\":58365,\r\n      \"idTransaccionCashless\":185835,\r\n      \"idUsuario\":\"3052ff59-9cc0-4afa-a4d5-72a4e851d944\",\r\n      \"nombreComercio\":\"Comercio Ejemplo\",\r\n      \"total\":50.00\r\n   },\r\n   {\r\n      \"cliente\":{\r\n         \"apellidos\":\"Test\",\r\n         \"correoElectronico\":\"Testtestest@gmail.com\",\r\n         \"idCliente\":3948,\r\n         \"nit\":\"C/F\",\r\n         \"nombres\":\"Test\",\r\n         \"razonSocial\":\"Test Test\",\r\n         \"telefono\":\"12340000\"\r\n      },\r\n      \"codigoAuorizacionCashless\":98020,\r\n      \"detalle\":[\r\n         {\r\n            \"cantidad\":1,\r\n            \"descripcion\":\"Producto Especial 3\",\r\n            \"idOrdenDetalle\":76484,\r\n            \"idProducto\":1034,\r\n            \"precio\":20.00,\r\n            \"total\":20.00\r\n         }\r\n      ],\r\n      \"fecha\":\"2018-01-26T15:23:42.497\",\r\n      \"idComercio\":20,\r\n      \"idOrden\":58364,\r\n      \"idTransaccionCashless\":185828,\r\n      \"idUsuario\":\"45074c9a-49cf-4ab7-a80c-65fe166a21db\",\r\n      \"nombreComercio\":\"Comercio Test\",\r\n      \"total\":20.00\r\n   },\r\n   {\r\n      \"cliente\":{\r\n         \"apellidos\":\"Aragón Sánchez\",\r\n         \"correoElectronico\":\"jaragon@spcdatapro.com\",\r\n         \"idCliente\":3949,\r\n         \"nit\":\"4829032-7\",\r\n         \"nombres\":\"Javier Antonio\",\r\n         \"razonSocial\":\"Javier Aragón\",\r\n         \"telefono\":\"30223231\"\r\n      },\r\n      \"codigoAuorizacionCashless\":98020,\r\n      \"detalle\":[\r\n         {\r\n            \"cantidad\":3,\r\n            \"descripcion\":\"Quesoburguesa doble\",\r\n            \"idOrdenDetalle\":76484,\r\n            \"idProducto\":200,\r\n            \"precio\":20.00,\r\n            \"total\":60.00\r\n         }\r\n      ],\r\n      \"fecha\":\"2018-04-26T09:32:42.497\",\r\n      \"idComercio\":20,\r\n      \"idOrden\":58366,\r\n      \"idTransaccionCashless\":185830,\r\n      \"idUsuario\":\"45074c9a-49cf-4ab7-a80c-65fe166a21db\",\r\n      \"nombreComercio\":\"Jake's Burguer\",\r\n      \"total\":60.00\r\n   }\r\n]`;\r\n    }\r\n\r\n    constructor(\r\n        private _http: Http, private _comandaService: ComandaService, private _dictFoxService: DiccionarioFoxService,\r\n        private _clienteService: ClienteService, private _ls: LocalStorageService\r\n    ) {\r\n        this.url = GLOBAL.url + 'mint/';\r\n        // this.datosEjemplo = this.getTestData();\r\n        const rtu = this._ls.get('restouchusr');\r\n        this.uid = rtu ? rtu._id : '';\r\n        this.token = rtu ? rtu.token : '';\r\n    }\r\n\r\n    private async nuevaComanda(token: string, pedido: any) {\r\n        const comanda = new Comanda(\r\n            null, null, null, null, null, null, null, null, null, null, null,\r\n            null, null, null, [], [], [], null, null, null, [], [], null, null, false\r\n        );\r\n\r\n        comanda.tracking = pedido.idOrden;\r\n        comanda.fecha = moment(pedido.fecha).toDate();\r\n        comanda.idrestaurante = '5ad6721a0d8e6921dc3bd97a';\r\n        comanda.totalcomanda = pedido.total;\r\n        comanda.cantidaditems = pedido.detalle.length;\r\n        comanda.idestatuscomanda = '59fea7524218672b285ab0e3';\r\n        comanda.fechainitoma = moment(pedido.fecha).toDate();\r\n        comanda.fechafintoma = moment(pedido.fecha).toDate();\r\n        comanda.idusuario = this.uid;\r\n        comanda.idtipocomanda = '5a67816637dfc108b9248851';\r\n        comanda.bitacoraestatus.push(\r\n            new BitacoraEstatus('59fea7524218672b285ab0e3', 'Recibido en restaurante', moment(pedido.fecha).toDate())\r\n        );\r\n        comanda.debaja = false;\r\n        for (let i = 0; i < pedido.detalle.length; i++ ) {\r\n            const det = pedido.detalle[i];\r\n            const producto = await this._dictFoxService.getProductoMint(+det.idProducto, '');\r\n            // console.log('Producto del pedido ' + comanda.tracking + ': ', producto);\r\n            if (producto) {\r\n                comanda.detallecomanda.push(\r\n                    new DetalleComanda(\r\n                        producto._id, +det.cantidad, producto.precio, null, producto.descripcionfull, null, null,\r\n                        producto.limitecomponentes, producto.tieneextras, producto.precioextra, false\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n        // pedido.detalle.forEach(async (det, i) => { });\r\n        // this.clienteNuevo = new Cliente(null, result, [], null, null, false, [], false);\r\n        const cliente = await this._clienteService.crearAsync(\r\n            new Cliente(null, (pedido.cliente.nombres + ' ' + pedido.cliente.apellidos), [], null, null, false, [], false),\r\n            this.token\r\n        );\r\n        comanda.idcliente = cliente._id;\r\n        comanda.idtelefonocliente = null;\r\n        if (!comanda.detallecomanda || comanda.detallecomanda.length === 0) {\r\n            console.log('Sin detalle: ' + comanda.tracking, comanda);\r\n        }\r\n        return await this._comandaService.crearComandaAsync(comanda, token);\r\n    }\r\n\r\n\r\n    getMintToken() {\r\n        const headers = new Headers({ 'Content-Type': 'application/json' });\r\n        return this._http.get(this.url + 'token', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    listaPedidos(token: string, fdelstr: string, falstr: string) {\r\n        const params = JSON.stringify({ fdelstr: fdelstr, falstr: falstr });\r\n        const headers = new Headers({ 'Content-Type': 'application/json', 'Authorization': token });\r\n        return this._http.post(this.url + 'ordenes', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    async crearPedidos(pedidos: Array<any>, token: string) {\r\n        const nuevas: Array<string> = [];\r\n        pedidos.forEach(async (pedido, i) => {\r\n            const comanda = await this._comandaService.getComandaByTrackingNo(+pedido.idOrden, token);\r\n            if (!comanda) {\r\n                const nueva = await this.nuevaComanda(token, pedido);\r\n                nuevas.push(nueva.tracking.toString());\r\n            } else {\r\n                // console.log('Ya existe el pedido No. ' + pedido.idOrden + '.');\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/mint.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class PresupuestoVentasService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'prv/'; }\r\n\r\n    listaPresupuestoVentas(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstpresventas/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getPresupuestoVenta(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getpresventa/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/presupuestoventas.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class RazonCortesiaService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'rcort/'; }\r\n\r\n    listaRazonesCortesia(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstrcort/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getRazonCortesia(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getrcort/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/razoncortesia.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class RestauranteService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'rest/'; }\r\n\r\n    listaRestaurantes(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstrestaurantes/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getRestaurante(idrestaurante, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getrestaurante/' + idrestaurante, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(restNuevo, token) {\r\n        const params = JSON.stringify(restNuevo);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(restaurante, token) {\r\n        const params = JSON.stringify(restaurante);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + restaurante._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(idrestaurante, token) {\r\n        const params = JSON.stringify({ _id: idrestaurante, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + idrestaurante, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/restaurante.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class RolUsuarioService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'rol/'; }\r\n\r\n    listaRolesUsuario(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstroles/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getRolUsuario(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getrol/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/rolusuario.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class TiempoEntregaService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'te/'; }\r\n\r\n    listaTiemposEntrega(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lsttiempos/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getTiempoEntrega(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettiempo/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tiempoentrega.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class TipoComandaService {\r\n    private url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'tcom/'; }\r\n\r\n    listaTiposComanda(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lsttiposcom/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getTipoComanda(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettipocom/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNva, token) {\r\n        const params = JSON.stringify(entidadNva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tipocomanda.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class TipoDireccionService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'tdir/'; }\r\n\r\n    listaTiposDeDireccion(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lsttiposdir/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getTipoDireccion(idtipodir, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'gettipodir/' + idtipodir, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(tipoDirNueva, token) {\r\n        const params = JSON.stringify(tipoDirNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(tipoDireccion, token) {\r\n        const params = JSON.stringify(tipoDireccion);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + tipoDireccion._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(idtipodir, token) {\r\n        const params = JSON.stringify({ _id: idtipodir, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + idtipodir, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tipodireccion.service.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) {\r\n        this.url = GLOBAL.url + 'usr/';\r\n    }\r\n\r\n    signup(usuario_a_loggear) {\r\n        usuario_a_loggear.gettoken = true;\r\n        const params = JSON.stringify(usuario_a_loggear);\r\n        const headers = new Headers({ 'Content-Type': 'application/json'});\r\n\r\n        return this._http.post(this.url + 'login', params, {headers: headers}).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    listaUsuarios(token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstusuarios', { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getUsuario(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getusuario/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/usuario.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class VueltoService {\r\n    public url: string;\r\n\r\n    constructor(private _http: Http) { this.url = GLOBAL.url + 'vlt/'; }\r\n\r\n    listaVueltos(token, cuales = '0') {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstvueltos/' + cuales, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    vueltosMayoresQue(token, mayorque: number) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'lstmayq/' + mayorque, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    getVuelto(identidad, token) {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.get(this.url + 'getvuelto/' + identidad, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    crear(entidadNueva, token) {\r\n        const params = JSON.stringify(entidadNueva);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.post(this.url + 'c', params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    modificar(entidad, token) {\r\n        const params = JSON.stringify(entidad);\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'u/' + entidad._id, params, { headers: headers }).map(res => res.json());\r\n    }\r\n\r\n    eliminar(identidad, token) {\r\n        const params = JSON.stringify({ _id: identidad, debaja: true });\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this._http.put(this.url + 'd/' + identidad, params, { headers: headers }).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/vuelto.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}